  Scanning TestYojson.cmt
  addValueDeclaration +foo TestYojson.re:2:4 path:+TestYojson
  addValueDeclaration +bar TestYojson.re:4:4 path:+TestYojson
  addValueDeclaration +toString TestYojson.re:11:4 path:+TestYojson
  addValueDeclaration +toInt TestYojson.re:14:4 path:+TestYojson
  addValueReference TestYojson.re:2:4 --> TestYojson.re:2:10
  addValueReference TestYojson.re:2:4 --> Yojson.re:7:6
  addValueReference TestYojson.re:4:4 --> TestYojson.re:4:16
  addValueReference TestYojson.re:4:4 --> TestYojson.re:7:49
  addValueReference TestYojson.re:4:4 --> TestYojson.re:4:16
  addValueReference TestYojson.re:4:4 --> TestYojson.re:6:2
  addValueReference TestYojson.re:4:4 --> TestYojson.re:4:16
  addValueReference TestYojson.re:4:4 --> TestYojson.re:4:11
  addValueReference TestYojson.re:4:4 --> Yojson.re:13:8
  addValueReference TestYojson.re:11:4 --> TestYojson.re:11:15
  addValueReference TestYojson.re:11:4 --> Yojson.re:19:8
  addValueReference TestYojson.re:14:4 --> TestYojson.re:14:12
  addValueReference TestYojson.re:14:4 --> Yojson.re:17:8
  Scanning ExnA.cmt
  addValueDeclaration +bar ExnA.re:1:4 path:+ExnA
  addValueReference ExnA.re:1:4 --> ExnB.re:2:4
  Scanning ExnB.cmt
  addValueDeclaration +foo ExnB.re:2:4 path:+ExnB
  Scanning Yojson.cmt
  addValueDeclaration +from_string Yojson.re:7:6 path:+Yojson.Basic
  addValueDeclaration +member Yojson.re:13:8 path:+Yojson.Basic.Util
  addValueDeclaration +to_int Yojson.re:17:8 path:+Yojson.Basic.Util
  addValueDeclaration +to_string Yojson.re:19:8 path:+Yojson.Basic.Util
  addExceptionDeclaration Json_error Yojson.re:1:10 path:+Yojson
  addValueReference Yojson.re:7:6 --> Yojson.re:1:10
  addTypeReference Yojson.re:7:44 --> Yojson.re:1:10
  addExceptionDeclaration Type_error Yojson.re:10:14 path:+Yojson.Basic.Util
  addValueReference Yojson.re:13:8 --> Yojson.re:10:14
  addTypeReference Yojson.re:14:23 --> Yojson.re:10:14
  addValueReference Yojson.re:13:8 --> Yojson.re:14:11
  Scanning BsJson.cmt
  addValueDeclaration +testBsJson BsJson.re:2:4 path:+BsJson
  addValueDeclaration +testBsJson2 BsJson.re:5:4 path:+BsJson
  addValueReference BsJson.re:2:4 --> BsJson.re:2:17
  addValueReference BsJson.re:2:4 --> Json_decode.mli:78:0
  addValueReference BsJson.re:5:4 --> BsJson.re:5:18
  addValueReference BsJson.re:5:4 --> Json_decode.mli:78:0
  Scanning ExportWithRename.cmt
  addValueDeclaration +make ExportWithRename.re:3:4 path:+ExportWithRename
  addValueReference ExportWithRename.re:3:32 --> ExportWithRename.re:3:13
  addValueReference ExportWithRename.re:3:19 --> React.re:7:0
  Scanning Exn.cmt
  addValueDeclaration +raises Exn.re:1:4 path:+Exn
  addValueDeclaration +catches1 Exn.re:3:4 path:+Exn
  addValueDeclaration +catches2 Exn.re:8:4 path:+Exn
  addValueDeclaration +raiseAndCatch Exn.re:14:4 path:+Exn
  addValueDeclaration +raisesWithAnnotaion Exn.re:20:4 path:+Exn
  addValueDeclaration +callsRaiseWithAnnotation Exn.re:22:4 path:+Exn
  addValueDeclaration +callsRaiseWithAnnotationAndIsAnnotated Exn.re:25:4 path:+Exn
  addValueDeclaration +z Exn.re:27:4 path:+Exn
  addValueDeclaration +incompleteMatch Exn.re:29:4 path:+Exn
  addValueDeclaration +twoRaises Exn.re:37:4 path:+Exn
  addValueDeclaration +sequencing Exn.re:46:4 path:+Exn
  addValueDeclaration +wrongCatch Exn.re:53:4 path:+Exn
  addValueDeclaration +wrongCatch2 Exn.re:59:4 path:+Exn
  addValueDeclaration +raise2Annotate3 Exn.re:67:4 path:+Exn
  addValueDeclaration +parse_json_from_file Exn.re:78:4 path:+Exn
  addValueDeclaration +reRaise Exn.re:90:4 path:+Exn
  addValueDeclaration +switchWithCatchAll Exn.re:96:4 path:+Exn
  addValueDeclaration +raiseInInternalLet Exn.re:102:4 path:+Exn
  addValueDeclaration +indirectCall Exn.re:107:4 path:+Exn
  addValueDeclaration +array Exn.re:110:4 path:+Exn
  addValueDeclaration +id Exn.re:112:4 path:+Exn
  addValueDeclaration +tryChar Exn.re:114:4 path:+Exn
  addValueDeclaration +specializedHash Exn.re:127:4 path:+Exn
  addValueDeclaration +genericHash Exn.re:130:4 path:+Exn
  addValueDeclaration +raiseAtAt Exn.re:133:4 path:+Exn
  addValueDeclaration +raisePipe Exn.re:136:4 path:+Exn
  addValueDeclaration +raiseArrow Exn.re:139:4 path:+Exn
  addValueDeclaration +bar Exn.re:142:4 path:+Exn
  addValueDeclaration +foo Exn.re:144:4 path:+Exn
  addValueDeclaration +stringMake1 Exn.re:150:4 path:+Exn
  addValueDeclaration +stringMake2 Exn.re:152:4 path:+Exn
  addValueDeclaration +stringMake3 Exn.re:154:4 path:+Exn
  addValueDeclaration +severalCases Exn.re:156:4 path:+Exn
  addValueDeclaration +genericRaiseIsNotSupported Exn.re:165:4 path:+Exn
  addValueDeclaration +redundant Exn.re:167:4 path:+Exn
  addValueDeclaration +redundant2 Exn.re:169:4 path:+Exn
  addValueDeclaration +redundant3 Exn.re:171:4 path:+Exn
  addValueDeclaration +redundant4 Exn.re:174:4 path:+Exn
  addValueReference Exn.re:22:4 --> Exn.re:20:4
  addValueReference Exn.re:25:4 --> Exn.re:20:4
  addValueReference Exn.re:29:4 --> Exn.re:29:22
  addExceptionDeclaration A Exn.re:34:10 path:+Exn
  addExceptionDeclaration B Exn.re:35:10 path:+Exn
  addValueReference Exn.re:37:4 --> Exn.re:35:10
  addTypeReference Exn.re:42:10 --> Exn.re:35:10
  addValueReference Exn.re:37:4 --> Exn.re:37:20
  addValueReference Exn.re:37:4 --> Exn.re:34:10
  addTypeReference Exn.re:39:10 --> Exn.re:34:10
  addValueReference Exn.re:37:4 --> Exn.re:37:17
  addValueReference Exn.re:46:4 --> Exn.re:35:10
  addTypeReference Exn.re:48:12 --> Exn.re:35:10
  addValueReference Exn.re:46:4 --> Exn.re:34:10
  addTypeReference Exn.re:47:8 --> Exn.re:34:10
  addValueReference Exn.re:53:4 --> Exn.re:35:10
  addTypeReference Exn.re:54:12 --> Exn.re:35:10
  addExceptionDeclaration C Exn.re:58:10 path:+Exn
  addValueReference Exn.re:59:4 --> Exn.re:58:10
  addTypeReference Exn.re:60:31 --> Exn.re:58:10
  addValueReference Exn.re:59:4 --> Exn.re:35:10
  addTypeReference Exn.re:60:20 --> Exn.re:35:10
  addValueReference Exn.re:59:4 --> Exn.re:59:18
  addValueReference Exn.re:67:4 --> Exn.re:35:10
  addTypeReference Exn.re:72:10 --> Exn.re:35:10
  addValueReference Exn.re:67:4 --> Exn.re:67:26
  addValueReference Exn.re:67:4 --> Exn.re:34:10
  addTypeReference Exn.re:69:10 --> Exn.re:34:10
  addValueReference Exn.re:67:4 --> Exn.re:67:23
  addExceptionDeclaration Error Exn.re:76:10 path:+Exn
  addValueDeclaration +in_chan Exn.re:79:6 path:+Exn
  addValueReference Exn.re:79:6 --> Exn.re:78:27
  addValueReference Exn.re:78:4 --> Exn.re:76:10
  addTypeReference Exn.re:83:10 --> Exn.re:76:10
  addValueReference Exn.re:78:4 --> Exn.re:81:21
  addValueReference Exn.re:78:4 --> Exn.re:81:25
  addValueReference Exn.re:78:4 --> Exn.re:81:29
  addValueReference Exn.re:78:4 --> Exn.re:79:6
  addValueReference Exn.re:78:4 --> Exn.re:84:2
  addValueReference Exn.re:78:4 --> Exn.re:79:6
  addValueReference Exn.re:90:4 --> Exn.re:35:10
  addTypeReference Exn.re:92:25 --> Exn.re:35:10
  addValueReference Exn.re:90:4 --> Exn.re:34:10
  addTypeReference Exn.re:91:16 --> Exn.re:34:10
  addValueReference Exn.re:96:4 --> Exn.re:34:10
  addTypeReference Exn.re:97:16 --> Exn.re:34:10
  addValueDeclaration +a Exn.re:103:6 path:+Exn
  addValueReference Exn.re:103:6 --> Exn.re:34:10
  addTypeReference Exn.re:103:20 --> Exn.re:34:10
  addValueReference Exn.re:103:6 --> Exn.re:102:25
  addValueReference Exn.re:102:4 --> Exn.re:103:6
  addValueReference Exn.re:107:4 --> Exn.re:20:4
  addValueReference Exn.re:110:4 --> Exn.re:110:12
  addValueReference Exn.re:112:4 --> Exn.re:112:9
  addValueReference Exn.re:114:4 --> Exn.re:114:14
  addValueReference Exn.re:114:4 --> Exn.re:112:4
  addValueDeclaration +hash Exn.re:124:8 path:+Exn.StringHash
  addValueReference Exn.re:127:4 --> Exn.re:127:22
  addValueReference Exn.re:130:4 --> Exn.re:130:18
  addValueReference Exn.re:156:4 --> Exn.re:156:19
  addValueReference Exn.re:165:4 --> Exn.re:165:33
  Scanning FirstClassModulesInterface.cmti
  addRecordLabelDeclaration x FirstClassModulesInterface.rei:3:2 path:FirstClassModulesInterface.record
  addRecordLabelDeclaration y FirstClassModulesInterface.rei:4:2 path:FirstClassModulesInterface.record
  addValueDeclaration +r FirstClassModulesInterface.rei:7:0 path:FirstClassModulesInterface
  Scanning TestDeadExn.cmt
  Scanning Types.cmt
  addValueDeclaration +someIntList Types.re:5:4 path:+Types
  addValueDeclaration +map Types.re:8:4 path:+Types
  addValueDeclaration +swap Types.re:28:8 path:+Types
  addValueDeclaration +selfRecursiveConverter Types.re:46:4 path:+Types
  addValueDeclaration +mutuallyRecursiveConverter Types.re:53:4 path:+Types
  addValueDeclaration +testFunctionOnOptionsAsArgument Types.re:56:4 path:+Types
  addValueDeclaration +stringT Types.re:64:4 path:+Types
  addValueDeclaration +jsStringT Types.re:67:4 path:+Types
  addValueDeclaration +jsString2T Types.re:70:4 path:+Types
  addValueDeclaration +jsonStringify Types.re:82:4 path:+Types
  addValueDeclaration +testConvertNull Types.re:96:4 path:+Types
  addValueDeclaration +testMarshalFields Types.re:118:4 path:+Types
  addValueDeclaration +setMatch Types.re:134:4 path:+Types
  addValueDeclaration +testInstantiateTypeParameter Types.re:144:4 path:+Types
  addValueDeclaration +currentTime Types.re:154:4 path:+Types
  addValueDeclaration +i64Const Types.re:163:4 path:+Types
  addValueDeclaration +optFunction Types.re:166:4 path:+Types
  addVariantCaseDeclaration A Types.re:12:4 path:+Types.typeWithVars
  addVariantCaseDeclaration B Types.re:13:4 path:+Types.typeWithVars
  addValueReference Types.re:28:8 --> Types.re:28:16
  addValueReference Types.re:28:8 --> Types.re:28:16
  addValueReference Types.re:28:8 --> Types.re:28:8
  addValueReference Types.re:28:8 --> Types.re:28:16
  addValueReference Types.re:28:8 --> Types.re:28:8
  addValueReference Types.re:28:8 --> Types.re:28:37
  addValueDeclaration +unsafe_expr Types.re:28:37 path:+Types
  addRecordLabelDeclaration self Types.re:35:22 path:+Types.selfRecursive
  addRecordLabelDeclaration b Types.re:38:27 path:+Types.mutuallyRecursiveA
  addRecordLabelDeclaration a Types.re:39:26 path:+Types.mutuallyRecursiveB
  addValueReference Types.re:46:4 --> Types.re:46:31
  addTypeReference Types.re:46:30 --> Types.re:35:22
  addValueReference Types.re:53:4 --> Types.re:53:35
  addTypeReference Types.re:53:34 --> Types.re:38:27
  addValueReference Types.re:56:4 --> Types.re:56:39
  addValueReference Types.re:56:4 --> Types.re:56:54
  addVariantCaseDeclaration A Types.re:60:4 path:+Types.opaqueVariant
  addVariantCaseDeclaration B Types.re:61:4 path:+Types.opaqueVariant
  addRecordLabelDeclaration i Types.re:91:2 path:+Types.record
  addRecordLabelDeclaration s Types.re:92:2 path:+Types.record
  addValueReference Types.re:96:4 --> Types.re:96:23
  addValueReference Types.re:118:4 --> Types.re:118:39
  addValueDeclaration +unsafe_expr Types.re:118:39 path:+Types
  addValueReference Types.re:134:4 --> Types.re:134:16
  addRecordLabelDeclaration id Types.re:139:19 path:+Types.someRecord
  addValueReference Types.re:144:4 --> Types.re:144:36
  addValueDeclaration +x Types.re:173:6 path:+Types.ObjectId
  Scanning ErrorHandler.cmt
  addValueDeclaration +notify ErrorHandler.re:7:6 path:+ErrorHandler.Make
  addValueDeclaration +x ErrorHandler.re:12:4 path:+ErrorHandler
  addValueReference ErrorHandler.re:7:6 --> ErrorHandler.re:7:15
  addValueReference ErrorHandler.re:7:6 --> ErrorHandler.re:3:2
  addValueReference ErrorHandler.rei:3:2 --> ErrorHandler.re:3:2
  addValueReference ErrorHandler.re:3:2 --> ErrorHandler.rei:3:2
  addValueReference ErrorHandler.rei:5:32 --> ErrorHandler.re:7:6
  addValueReference ErrorHandler.rei:7:0 --> ErrorHandler.re:12:4
  Scanning ImmutableArray.cmt
  addValueDeclaration +fromT ImmutableArray.re:5:2 path:+ImmutableArray.Array
  addValueDeclaration +fromTp ImmutableArray.re:6:2 path:+ImmutableArray.Array
  addValueDeclaration +fromTT ImmutableArray.re:7:2 path:+ImmutableArray.Array
  addValueDeclaration +toT ImmutableArray.re:8:2 path:+ImmutableArray.Array
  addValueDeclaration +toTp ImmutableArray.re:9:2 path:+ImmutableArray.Array
  addValueDeclaration +toT2 ImmutableArray.re:10:2 path:+ImmutableArray.Array
  addValueDeclaration +fromArray ImmutableArray.re:14:6 path:+ImmutableArray.Array
  addValueDeclaration +toArray ImmutableArray.re:16:6 path:+ImmutableArray.Array
  addValueDeclaration +length ImmutableArray.re:20:6 path:+ImmutableArray.Array
  addValueDeclaration +size ImmutableArray.re:22:6 path:+ImmutableArray.Array
  addValueDeclaration +get ImmutableArray.re:24:6 path:+ImmutableArray.Array
  addValueDeclaration +getExn ImmutableArray.re:26:6 path:+ImmutableArray.Array
  addValueDeclaration +getUnsafe ImmutableArray.re:28:6 path:+ImmutableArray.Array
  addValueDeclaration +getUndefined ImmutableArray.re:30:6 path:+ImmutableArray.Array
  addValueDeclaration +shuffle ImmutableArray.re:32:6 path:+ImmutableArray.Array
  addValueDeclaration +reverse ImmutableArray.re:34:6 path:+ImmutableArray.Array
  addValueDeclaration +makeUninitialized ImmutableArray.re:36:6 path:+ImmutableArray.Array
  addValueDeclaration +makeUninitializedUnsafe ImmutableArray.re:38:6 path:+ImmutableArray.Array
  addValueDeclaration +make ImmutableArray.re:40:6 path:+ImmutableArray.Array
  addValueDeclaration +range ImmutableArray.re:42:6 path:+ImmutableArray.Array
  addValueDeclaration +rangeBy ImmutableArray.re:44:6 path:+ImmutableArray.Array
  addValueDeclaration +makeByU ImmutableArray.re:46:6 path:+ImmutableArray.Array
  addValueDeclaration +makeBy ImmutableArray.re:47:6 path:+ImmutableArray.Array
  addValueDeclaration +makeByAndShuffleU ImmutableArray.re:49:6 path:+ImmutableArray.Array
  addValueDeclaration +makeByAndShuffle ImmutableArray.re:50:6 path:+ImmutableArray.Array
  addValueDeclaration +zip ImmutableArray.re:52:6 path:+ImmutableArray.Array
  addValueDeclaration +zipByU ImmutableArray.re:54:6 path:+ImmutableArray.Array
  addValueDeclaration +zipBy ImmutableArray.re:55:6 path:+ImmutableArray.Array
  addValueDeclaration +unzip ImmutableArray.re:57:6 path:+ImmutableArray.Array
  addValueDeclaration +concat ImmutableArray.re:59:6 path:+ImmutableArray.Array
  addValueDeclaration +concatMany ImmutableArray.re:61:6 path:+ImmutableArray.Array
  addValueDeclaration +slice ImmutableArray.re:63:6 path:+ImmutableArray.Array
  addValueDeclaration +sliceToEnd ImmutableArray.re:66:6 path:+ImmutableArray.Array
  addValueDeclaration +copy ImmutableArray.re:68:6 path:+ImmutableArray.Array
  addValueDeclaration +forEachU ImmutableArray.re:70:6 path:+ImmutableArray.Array
  addValueDeclaration +forEach ImmutableArray.re:71:6 path:+ImmutableArray.Array
  addValueDeclaration +mapU ImmutableArray.re:73:6 path:+ImmutableArray.Array
  addValueDeclaration +map ImmutableArray.re:74:6 path:+ImmutableArray.Array
  addValueDeclaration +keepWithIndexU ImmutableArray.re:76:6 path:+ImmutableArray.Array
  addValueDeclaration +keepWithIndex ImmutableArray.re:77:6 path:+ImmutableArray.Array
  addValueDeclaration +keepMapU ImmutableArray.re:79:6 path:+ImmutableArray.Array
  addValueDeclaration +keepMap ImmutableArray.re:80:6 path:+ImmutableArray.Array
  addValueDeclaration +forEachWithIndexU ImmutableArray.re:82:6 path:+ImmutableArray.Array
  addValueDeclaration +forEachWithIndex ImmutableArray.re:83:6 path:+ImmutableArray.Array
  addValueDeclaration +mapWithIndexU ImmutableArray.re:85:6 path:+ImmutableArray.Array
  addValueDeclaration +mapWithIndex ImmutableArray.re:86:6 path:+ImmutableArray.Array
  addValueDeclaration +partitionU ImmutableArray.re:88:6 path:+ImmutableArray.Array
  addValueDeclaration +partition ImmutableArray.re:89:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceU ImmutableArray.re:91:6 path:+ImmutableArray.Array
  addValueDeclaration +reduce ImmutableArray.re:92:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverseU ImmutableArray.re:94:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverse ImmutableArray.re:95:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverse2U ImmutableArray.re:97:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverse2 ImmutableArray.re:99:6 path:+ImmutableArray.Array
  addValueDeclaration +someU ImmutableArray.re:102:6 path:+ImmutableArray.Array
  addValueDeclaration +some ImmutableArray.re:103:6 path:+ImmutableArray.Array
  addValueDeclaration +everyU ImmutableArray.re:105:6 path:+ImmutableArray.Array
  addValueDeclaration +every ImmutableArray.re:106:6 path:+ImmutableArray.Array
  addValueDeclaration +every2U ImmutableArray.re:108:6 path:+ImmutableArray.Array
  addValueDeclaration +every2 ImmutableArray.re:109:6 path:+ImmutableArray.Array
  addValueDeclaration +some2U ImmutableArray.re:111:6 path:+ImmutableArray.Array
  addValueDeclaration +some2 ImmutableArray.re:112:6 path:+ImmutableArray.Array
  addValueDeclaration +cmpU ImmutableArray.re:114:6 path:+ImmutableArray.Array
  addValueDeclaration +cmp ImmutableArray.re:115:6 path:+ImmutableArray.Array
  addValueDeclaration +eqU ImmutableArray.re:117:6 path:+ImmutableArray.Array
  addValueDeclaration +eq ImmutableArray.re:118:6 path:+ImmutableArray.Array
  addValueDeclaration +fromT ImmutableArray.re:5:2 path:+ImmutableArray
  addValueDeclaration +fromTp ImmutableArray.re:6:2 path:+ImmutableArray
  addValueDeclaration +fromTT ImmutableArray.re:7:2 path:+ImmutableArray
  addValueDeclaration +toT ImmutableArray.re:8:2 path:+ImmutableArray
  addValueDeclaration +toTp ImmutableArray.re:9:2 path:+ImmutableArray
  addValueDeclaration +toT2 ImmutableArray.re:10:2 path:+ImmutableArray
  addValueDeclaration +fromArray ImmutableArray.re:14:6 path:+ImmutableArray
  addValueDeclaration +toArray ImmutableArray.re:16:6 path:+ImmutableArray
  addValueDeclaration +length ImmutableArray.re:20:6 path:+ImmutableArray
  addValueDeclaration +size ImmutableArray.re:22:6 path:+ImmutableArray
  addValueDeclaration +get ImmutableArray.re:24:6 path:+ImmutableArray
  addValueDeclaration +getExn ImmutableArray.re:26:6 path:+ImmutableArray
  addValueDeclaration +getUnsafe ImmutableArray.re:28:6 path:+ImmutableArray
  addValueDeclaration +getUndefined ImmutableArray.re:30:6 path:+ImmutableArray
  addValueDeclaration +shuffle ImmutableArray.re:32:6 path:+ImmutableArray
  addValueDeclaration +reverse ImmutableArray.re:34:6 path:+ImmutableArray
  addValueDeclaration +makeUninitialized ImmutableArray.re:36:6 path:+ImmutableArray
  addValueDeclaration +makeUninitializedUnsafe ImmutableArray.re:38:6 path:+ImmutableArray
  addValueDeclaration +make ImmutableArray.re:40:6 path:+ImmutableArray
  addValueDeclaration +range ImmutableArray.re:42:6 path:+ImmutableArray
  addValueDeclaration +rangeBy ImmutableArray.re:44:6 path:+ImmutableArray
  addValueDeclaration +makeByU ImmutableArray.re:46:6 path:+ImmutableArray
  addValueDeclaration +makeBy ImmutableArray.re:47:6 path:+ImmutableArray
  addValueDeclaration +makeByAndShuffleU ImmutableArray.re:49:6 path:+ImmutableArray
  addValueDeclaration +makeByAndShuffle ImmutableArray.re:50:6 path:+ImmutableArray
  addValueDeclaration +zip ImmutableArray.re:52:6 path:+ImmutableArray
  addValueDeclaration +zipByU ImmutableArray.re:54:6 path:+ImmutableArray
  addValueDeclaration +zipBy ImmutableArray.re:55:6 path:+ImmutableArray
  addValueDeclaration +unzip ImmutableArray.re:57:6 path:+ImmutableArray
  addValueDeclaration +concat ImmutableArray.re:59:6 path:+ImmutableArray
  addValueDeclaration +concatMany ImmutableArray.re:61:6 path:+ImmutableArray
  addValueDeclaration +slice ImmutableArray.re:63:6 path:+ImmutableArray
  addValueDeclaration +sliceToEnd ImmutableArray.re:66:6 path:+ImmutableArray
  addValueDeclaration +copy ImmutableArray.re:68:6 path:+ImmutableArray
  addValueDeclaration +forEachU ImmutableArray.re:70:6 path:+ImmutableArray
  addValueDeclaration +forEach ImmutableArray.re:71:6 path:+ImmutableArray
  addValueDeclaration +mapU ImmutableArray.re:73:6 path:+ImmutableArray
  addValueDeclaration +map ImmutableArray.re:74:6 path:+ImmutableArray
  addValueDeclaration +keepWithIndexU ImmutableArray.re:76:6 path:+ImmutableArray
  addValueDeclaration +keepWithIndex ImmutableArray.re:77:6 path:+ImmutableArray
  addValueDeclaration +keepMapU ImmutableArray.re:79:6 path:+ImmutableArray
  addValueDeclaration +keepMap ImmutableArray.re:80:6 path:+ImmutableArray
  addValueDeclaration +forEachWithIndexU ImmutableArray.re:82:6 path:+ImmutableArray
  addValueDeclaration +forEachWithIndex ImmutableArray.re:83:6 path:+ImmutableArray
  addValueDeclaration +mapWithIndexU ImmutableArray.re:85:6 path:+ImmutableArray
  addValueDeclaration +mapWithIndex ImmutableArray.re:86:6 path:+ImmutableArray
  addValueDeclaration +partitionU ImmutableArray.re:88:6 path:+ImmutableArray
  addValueDeclaration +partition ImmutableArray.re:89:6 path:+ImmutableArray
  addValueDeclaration +reduceU ImmutableArray.re:91:6 path:+ImmutableArray
  addValueDeclaration +reduce ImmutableArray.re:92:6 path:+ImmutableArray
  addValueDeclaration +reduceReverseU ImmutableArray.re:94:6 path:+ImmutableArray
  addValueDeclaration +reduceReverse ImmutableArray.re:95:6 path:+ImmutableArray
  addValueDeclaration +reduceReverse2U ImmutableArray.re:97:6 path:+ImmutableArray
  addValueDeclaration +reduceReverse2 ImmutableArray.re:99:6 path:+ImmutableArray
  addValueDeclaration +someU ImmutableArray.re:102:6 path:+ImmutableArray
  addValueDeclaration +some ImmutableArray.re:103:6 path:+ImmutableArray
  addValueDeclaration +everyU ImmutableArray.re:105:6 path:+ImmutableArray
  addValueDeclaration +every ImmutableArray.re:106:6 path:+ImmutableArray
  addValueDeclaration +every2U ImmutableArray.re:108:6 path:+ImmutableArray
  addValueDeclaration +every2 ImmutableArray.re:109:6 path:+ImmutableArray
  addValueDeclaration +some2U ImmutableArray.re:111:6 path:+ImmutableArray
  addValueDeclaration +some2 ImmutableArray.re:112:6 path:+ImmutableArray
  addValueDeclaration +cmpU ImmutableArray.re:114:6 path:+ImmutableArray
  addValueDeclaration +cmp ImmutableArray.re:115:6 path:+ImmutableArray
  addValueDeclaration +eqU ImmutableArray.re:117:6 path:+ImmutableArray
  addValueDeclaration +eq ImmutableArray.re:118:6 path:+ImmutableArray
  addValueReference ImmutableArray.re:14:6 --> ImmutableArray.re:14:18
  addValueReference ImmutableArray.re:14:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:16:6 --> ImmutableArray.re:16:16
  addValueReference ImmutableArray.re:16:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:20:6 --> ImmutableArray.re:20:15
  addValueReference ImmutableArray.re:20:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:22:6 --> ImmutableArray.re:22:13
  addValueReference ImmutableArray.re:22:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:24:6 --> ImmutableArray.re:24:13
  addValueReference ImmutableArray.re:24:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:24:6 --> ImmutableArray.re:24:16
  addValueReference ImmutableArray.re:26:6 --> ImmutableArray.re:26:16
  addValueReference ImmutableArray.re:26:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:26:6 --> ImmutableArray.re:26:19
  addValueReference ImmutableArray.re:28:6 --> ImmutableArray.re:28:19
  addValueReference ImmutableArray.re:28:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:28:6 --> ImmutableArray.re:28:22
  addValueReference ImmutableArray.re:30:6 --> ImmutableArray.re:30:22
  addValueReference ImmutableArray.re:30:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:30:6 --> ImmutableArray.re:30:25
  addValueReference ImmutableArray.re:32:6 --> ImmutableArray.re:32:16
  addValueReference ImmutableArray.re:32:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:32:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:34:6 --> ImmutableArray.re:34:16
  addValueReference ImmutableArray.re:34:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:34:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:36:6 --> ImmutableArray.re:36:26
  addValueReference ImmutableArray.re:36:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:38:6 --> ImmutableArray.re:38:32
  addValueReference ImmutableArray.re:38:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:40:6 --> ImmutableArray.re:40:14
  addValueReference ImmutableArray.re:40:6 --> ImmutableArray.re:40:17
  addValueReference ImmutableArray.re:40:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:42:6 --> ImmutableArray.re:42:15
  addValueReference ImmutableArray.re:42:6 --> ImmutableArray.re:42:18
  addValueReference ImmutableArray.re:42:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:44:6 --> ImmutableArray.re:44:17
  addValueReference ImmutableArray.re:44:6 --> ImmutableArray.re:44:20
  addValueReference ImmutableArray.re:44:6 --> ImmutableArray.re:44:24
  addValueReference ImmutableArray.re:44:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:46:6 --> ImmutableArray.re:46:17
  addValueReference ImmutableArray.re:46:6 --> ImmutableArray.re:46:20
  addValueReference ImmutableArray.re:46:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:47:6 --> ImmutableArray.re:47:16
  addValueReference ImmutableArray.re:47:6 --> ImmutableArray.re:47:19
  addValueReference ImmutableArray.re:47:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:49:6 --> ImmutableArray.re:49:27
  addValueReference ImmutableArray.re:49:6 --> ImmutableArray.re:49:30
  addValueReference ImmutableArray.re:49:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:50:6 --> ImmutableArray.re:50:26
  addValueReference ImmutableArray.re:50:6 --> ImmutableArray.re:50:29
  addValueReference ImmutableArray.re:50:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:52:6 --> ImmutableArray.re:52:13
  addValueReference ImmutableArray.re:52:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:52:6 --> ImmutableArray.re:52:17
  addValueReference ImmutableArray.re:52:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:52:6 --> ImmutableArray.re:9:2
  addValueReference ImmutableArray.re:54:6 --> ImmutableArray.re:54:16
  addValueReference ImmutableArray.re:54:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:54:6 --> ImmutableArray.re:54:20
  addValueReference ImmutableArray.re:54:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:54:6 --> ImmutableArray.re:54:24
  addValueReference ImmutableArray.re:54:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:55:6 --> ImmutableArray.re:55:15
  addValueReference ImmutableArray.re:55:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:55:6 --> ImmutableArray.re:55:19
  addValueReference ImmutableArray.re:55:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:55:6 --> ImmutableArray.re:55:23
  addValueReference ImmutableArray.re:55:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:57:6 --> ImmutableArray.re:57:14
  addValueReference ImmutableArray.re:57:6 --> ImmutableArray.re:6:2
  addValueReference ImmutableArray.re:57:6 --> ImmutableArray.re:10:2
  addValueReference ImmutableArray.re:59:6 --> ImmutableArray.re:59:16
  addValueReference ImmutableArray.re:59:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:59:6 --> ImmutableArray.re:59:20
  addValueReference ImmutableArray.re:59:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:59:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:61:6 --> ImmutableArray.re:61:20
  addValueReference ImmutableArray.re:61:6 --> ImmutableArray.re:7:2
  addValueReference ImmutableArray.re:61:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:63:6 --> ImmutableArray.re:63:15
  addValueReference ImmutableArray.re:63:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:63:6 --> ImmutableArray.re:63:19
  addValueReference ImmutableArray.re:63:6 --> ImmutableArray.re:63:28
  addValueReference ImmutableArray.re:63:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:66:6 --> ImmutableArray.re:66:20
  addValueReference ImmutableArray.re:66:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:66:6 --> ImmutableArray.re:66:23
  addValueReference ImmutableArray.re:66:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:68:6 --> ImmutableArray.re:68:13
  addValueReference ImmutableArray.re:68:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:68:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:70:6 --> ImmutableArray.re:70:18
  addValueReference ImmutableArray.re:70:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:70:6 --> ImmutableArray.re:70:21
  addValueReference ImmutableArray.re:71:6 --> ImmutableArray.re:71:17
  addValueReference ImmutableArray.re:71:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:71:6 --> ImmutableArray.re:71:20
  addValueReference ImmutableArray.re:73:6 --> ImmutableArray.re:73:14
  addValueReference ImmutableArray.re:73:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:73:6 --> ImmutableArray.re:73:17
  addValueReference ImmutableArray.re:73:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:74:6 --> ImmutableArray.re:74:13
  addValueReference ImmutableArray.re:74:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:74:6 --> ImmutableArray.re:74:16
  addValueReference ImmutableArray.re:74:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:76:6 --> ImmutableArray.re:76:24
  addValueReference ImmutableArray.re:76:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:76:6 --> ImmutableArray.re:76:27
  addValueReference ImmutableArray.re:76:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:77:6 --> ImmutableArray.re:77:23
  addValueReference ImmutableArray.re:77:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:77:6 --> ImmutableArray.re:77:26
  addValueReference ImmutableArray.re:77:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:79:6 --> ImmutableArray.re:79:18
  addValueReference ImmutableArray.re:79:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:79:6 --> ImmutableArray.re:79:21
  addValueReference ImmutableArray.re:79:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:80:6 --> ImmutableArray.re:80:17
  addValueReference ImmutableArray.re:80:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:80:6 --> ImmutableArray.re:80:20
  addValueReference ImmutableArray.re:80:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:82:6 --> ImmutableArray.re:82:27
  addValueReference ImmutableArray.re:82:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:82:6 --> ImmutableArray.re:82:30
  addValueReference ImmutableArray.re:83:6 --> ImmutableArray.re:83:26
  addValueReference ImmutableArray.re:83:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:83:6 --> ImmutableArray.re:83:29
  addValueReference ImmutableArray.re:85:6 --> ImmutableArray.re:85:23
  addValueReference ImmutableArray.re:85:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:85:6 --> ImmutableArray.re:85:26
  addValueReference ImmutableArray.re:85:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:86:6 --> ImmutableArray.re:86:22
  addValueReference ImmutableArray.re:86:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:86:6 --> ImmutableArray.re:86:25
  addValueReference ImmutableArray.re:86:6 --> ImmutableArray.re:8:2
  addValueReference ImmutableArray.re:88:6 --> ImmutableArray.re:88:20
  addValueReference ImmutableArray.re:88:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:88:6 --> ImmutableArray.re:88:23
  addValueReference ImmutableArray.re:88:6 --> ImmutableArray.re:10:2
  addValueReference ImmutableArray.re:89:6 --> ImmutableArray.re:89:19
  addValueReference ImmutableArray.re:89:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:89:6 --> ImmutableArray.re:89:22
  addValueReference ImmutableArray.re:89:6 --> ImmutableArray.re:10:2
  addValueReference ImmutableArray.re:91:6 --> ImmutableArray.re:91:17
  addValueReference ImmutableArray.re:91:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:91:6 --> ImmutableArray.re:91:20
  addValueReference ImmutableArray.re:91:6 --> ImmutableArray.re:91:23
  addValueReference ImmutableArray.re:92:6 --> ImmutableArray.re:92:16
  addValueReference ImmutableArray.re:92:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:92:6 --> ImmutableArray.re:92:19
  addValueReference ImmutableArray.re:92:6 --> ImmutableArray.re:92:22
  addValueReference ImmutableArray.re:94:6 --> ImmutableArray.re:94:24
  addValueReference ImmutableArray.re:94:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:94:6 --> ImmutableArray.re:94:27
  addValueReference ImmutableArray.re:94:6 --> ImmutableArray.re:94:30
  addValueReference ImmutableArray.re:95:6 --> ImmutableArray.re:95:23
  addValueReference ImmutableArray.re:95:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:95:6 --> ImmutableArray.re:95:26
  addValueReference ImmutableArray.re:95:6 --> ImmutableArray.re:95:29
  addValueReference ImmutableArray.re:97:6 --> ImmutableArray.re:97:25
  addValueReference ImmutableArray.re:97:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:97:6 --> ImmutableArray.re:97:29
  addValueReference ImmutableArray.re:97:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:97:6 --> ImmutableArray.re:97:33
  addValueReference ImmutableArray.re:97:6 --> ImmutableArray.re:97:36
  addValueReference ImmutableArray.re:99:6 --> ImmutableArray.re:99:24
  addValueReference ImmutableArray.re:99:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:99:6 --> ImmutableArray.re:99:28
  addValueReference ImmutableArray.re:99:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:99:6 --> ImmutableArray.re:99:32
  addValueReference ImmutableArray.re:99:6 --> ImmutableArray.re:99:35
  addValueReference ImmutableArray.re:102:6 --> ImmutableArray.re:102:15
  addValueReference ImmutableArray.re:102:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:102:6 --> ImmutableArray.re:102:18
  addValueReference ImmutableArray.re:103:6 --> ImmutableArray.re:103:14
  addValueReference ImmutableArray.re:103:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:103:6 --> ImmutableArray.re:103:17
  addValueReference ImmutableArray.re:105:6 --> ImmutableArray.re:105:16
  addValueReference ImmutableArray.re:105:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:105:6 --> ImmutableArray.re:105:19
  addValueReference ImmutableArray.re:106:6 --> ImmutableArray.re:106:15
  addValueReference ImmutableArray.re:106:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:106:6 --> ImmutableArray.re:106:18
  addValueReference ImmutableArray.re:108:6 --> ImmutableArray.re:108:17
  addValueReference ImmutableArray.re:108:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:108:6 --> ImmutableArray.re:108:21
  addValueReference ImmutableArray.re:108:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:108:6 --> ImmutableArray.re:108:25
  addValueReference ImmutableArray.re:109:6 --> ImmutableArray.re:109:16
  addValueReference ImmutableArray.re:109:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:109:6 --> ImmutableArray.re:109:20
  addValueReference ImmutableArray.re:109:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:109:6 --> ImmutableArray.re:109:24
  addValueReference ImmutableArray.re:111:6 --> ImmutableArray.re:111:16
  addValueReference ImmutableArray.re:111:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:111:6 --> ImmutableArray.re:111:20
  addValueReference ImmutableArray.re:111:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:111:6 --> ImmutableArray.re:111:24
  addValueReference ImmutableArray.re:112:6 --> ImmutableArray.re:112:15
  addValueReference ImmutableArray.re:112:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:112:6 --> ImmutableArray.re:112:19
  addValueReference ImmutableArray.re:112:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:112:6 --> ImmutableArray.re:112:23
  addValueReference ImmutableArray.re:114:6 --> ImmutableArray.re:114:14
  addValueReference ImmutableArray.re:114:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:114:6 --> ImmutableArray.re:114:18
  addValueReference ImmutableArray.re:114:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:114:6 --> ImmutableArray.re:114:22
  addValueReference ImmutableArray.re:115:6 --> ImmutableArray.re:115:13
  addValueReference ImmutableArray.re:115:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:115:6 --> ImmutableArray.re:115:17
  addValueReference ImmutableArray.re:115:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:115:6 --> ImmutableArray.re:115:21
  addValueReference ImmutableArray.re:117:6 --> ImmutableArray.re:117:13
  addValueReference ImmutableArray.re:117:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:117:6 --> ImmutableArray.re:117:17
  addValueReference ImmutableArray.re:117:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:117:6 --> ImmutableArray.re:117:21
  addValueReference ImmutableArray.re:118:6 --> ImmutableArray.re:118:12
  addValueReference ImmutableArray.re:118:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:118:6 --> ImmutableArray.re:118:16
  addValueReference ImmutableArray.re:118:6 --> ImmutableArray.re:5:2
  addValueReference ImmutableArray.re:118:6 --> ImmutableArray.re:118:20
  addValueReference ImmutableArray.rei:5:15 --> ImmutableArray.re:24:6
  addValueReference ImmutableArray.rei:7:0 --> ImmutableArray.re:14:6
  addValueReference ImmutableArray.rei:10:0 --> ImmutableArray.re:16:6
  addValueReference ImmutableArray.rei:12:0 --> ImmutableArray.re:20:6
  addValueReference ImmutableArray.rei:16:0 --> ImmutableArray.re:22:6
  addValueReference ImmutableArray.rei:18:0 --> ImmutableArray.re:24:6
  addValueReference ImmutableArray.rei:20:0 --> ImmutableArray.re:26:6
  addValueReference ImmutableArray.rei:22:0 --> ImmutableArray.re:28:6
  addValueReference ImmutableArray.rei:24:0 --> ImmutableArray.re:30:6
  addValueReference ImmutableArray.rei:26:0 --> ImmutableArray.re:32:6
  addValueReference ImmutableArray.rei:28:0 --> ImmutableArray.re:34:6
  addValueReference ImmutableArray.rei:30:0 --> ImmutableArray.re:36:6
  addValueReference ImmutableArray.rei:32:0 --> ImmutableArray.re:38:6
  addValueReference ImmutableArray.rei:34:0 --> ImmutableArray.re:40:6
  addValueReference ImmutableArray.rei:36:0 --> ImmutableArray.re:42:6
  addValueReference ImmutableArray.rei:38:0 --> ImmutableArray.re:44:6
  addValueReference ImmutableArray.rei:40:0 --> ImmutableArray.re:46:6
  addValueReference ImmutableArray.rei:41:0 --> ImmutableArray.re:47:6
  addValueReference ImmutableArray.rei:43:0 --> ImmutableArray.re:49:6
  addValueReference ImmutableArray.rei:44:0 --> ImmutableArray.re:50:6
  addValueReference ImmutableArray.rei:46:0 --> ImmutableArray.re:52:6
  addValueReference ImmutableArray.rei:48:0 --> ImmutableArray.re:54:6
  addValueReference ImmutableArray.rei:49:0 --> ImmutableArray.re:55:6
  addValueReference ImmutableArray.rei:51:0 --> ImmutableArray.re:57:6
  addValueReference ImmutableArray.rei:53:0 --> ImmutableArray.re:59:6
  addValueReference ImmutableArray.rei:55:0 --> ImmutableArray.re:61:6
  addValueReference ImmutableArray.rei:57:0 --> ImmutableArray.re:63:6
  addValueReference ImmutableArray.rei:59:0 --> ImmutableArray.re:66:6
  addValueReference ImmutableArray.rei:61:0 --> ImmutableArray.re:68:6
  addValueReference ImmutableArray.rei:63:0 --> ImmutableArray.re:70:6
  addValueReference ImmutableArray.rei:64:0 --> ImmutableArray.re:71:6
  addValueReference ImmutableArray.rei:66:0 --> ImmutableArray.re:73:6
  addValueReference ImmutableArray.rei:67:0 --> ImmutableArray.re:74:6
  addValueReference ImmutableArray.rei:69:0 --> ImmutableArray.re:76:6
  addValueReference ImmutableArray.rei:70:0 --> ImmutableArray.re:77:6
  addValueReference ImmutableArray.rei:72:0 --> ImmutableArray.re:79:6
  addValueReference ImmutableArray.rei:73:0 --> ImmutableArray.re:80:6
  addValueReference ImmutableArray.rei:75:0 --> ImmutableArray.re:82:6
  addValueReference ImmutableArray.rei:76:0 --> ImmutableArray.re:83:6
  addValueReference ImmutableArray.rei:78:0 --> ImmutableArray.re:85:6
  addValueReference ImmutableArray.rei:79:0 --> ImmutableArray.re:86:6
  addValueReference ImmutableArray.rei:81:0 --> ImmutableArray.re:88:6
  addValueReference ImmutableArray.rei:82:0 --> ImmutableArray.re:89:6
  addValueReference ImmutableArray.rei:84:0 --> ImmutableArray.re:91:6
  addValueReference ImmutableArray.rei:85:0 --> ImmutableArray.re:92:6
  addValueReference ImmutableArray.rei:87:0 --> ImmutableArray.re:94:6
  addValueReference ImmutableArray.rei:88:0 --> ImmutableArray.re:95:6
  addValueReference ImmutableArray.rei:90:0 --> ImmutableArray.re:97:6
  addValueReference ImmutableArray.rei:91:0 --> ImmutableArray.re:99:6
  addValueReference ImmutableArray.rei:93:0 --> ImmutableArray.re:102:6
  addValueReference ImmutableArray.rei:94:0 --> ImmutableArray.re:103:6
  addValueReference ImmutableArray.rei:96:0 --> ImmutableArray.re:105:6
  addValueReference ImmutableArray.rei:97:0 --> ImmutableArray.re:106:6
  addValueReference ImmutableArray.rei:99:0 --> ImmutableArray.re:108:6
  addValueReference ImmutableArray.rei:100:0 --> ImmutableArray.re:109:6
  addValueReference ImmutableArray.rei:102:0 --> ImmutableArray.re:111:6
  addValueReference ImmutableArray.rei:103:0 --> ImmutableArray.re:112:6
  addValueReference ImmutableArray.rei:105:0 --> ImmutableArray.re:114:6
  addValueReference ImmutableArray.rei:106:0 --> ImmutableArray.re:115:6
  addValueReference ImmutableArray.rei:108:0 --> ImmutableArray.re:117:6
  addValueReference ImmutableArray.rei:109:0 --> ImmutableArray.re:118:6
  Scanning TransitiveType3.cmt
  addValueDeclaration +convertT3 TransitiveType3.re:8:4 path:+TransitiveType3
  addRecordLabelDeclaration i TransitiveType3.re:3:2 path:+TransitiveType3.t3
  addRecordLabelDeclaration s TransitiveType3.re:4:2 path:+TransitiveType3.t3
  addValueReference TransitiveType3.re:8:4 --> TransitiveType3.re:8:17
  Scanning DynamicallyLoadedComponent.cmt
  addValueDeclaration +make DynamicallyLoadedComponent.re:2:4 path:+DynamicallyLoadedComponent
  addValueReference DynamicallyLoadedComponent.re:2:32 --> DynamicallyLoadedComponent.re:2:13
  addValueReference DynamicallyLoadedComponent.re:2:19 --> React.re:7:0
  Scanning DeadExn.cmt
  addValueDeclaration +eToplevel DeadExn.re:8:4 path:+DeadExn
  addValueDeclaration +eInside DeadExn.re:10:4 path:+DeadExn
  addExceptionDeclaration Etoplevel DeadExn.re:1:10 path:+DeadExn
  addExceptionDeclaration Einside DeadExn.re:4:12 path:+DeadExn.Inside
  addExceptionDeclaration DeadE DeadExn.re:7:10 path:+DeadExn
  addValueReference DeadExn.re:8:4 --> DeadExn.re:1:10
  addTypeReference DeadExn.re:8:16 --> DeadExn.re:1:10
  addValueReference DeadExn.re:10:4 --> DeadExn.re:4:12
  addTypeReference DeadExn.re:10:14 --> DeadExn.re:4:12
  addValueReference DeadExn.re:12:7 --> DeadExn.re:10:4
  Scanning TransitiveType2.cmt
  addValueDeclaration +convertT2 TransitiveType2.re:7:4 path:+TransitiveType2
  addValueReference TransitiveType2.re:7:4 --> TransitiveType2.re:7:17
  Scanning Variants.cmt
  addValueDeclaration +isWeekend Variants.re:13:4 path:+Variants
  addValueDeclaration +monday Variants.re:21:4 path:+Variants
  addValueDeclaration +saturday Variants.re:23:4 path:+Variants
  addValueDeclaration +sunday Variants.re:25:4 path:+Variants
  addValueDeclaration +onlySunday Variants.re:28:4 path:+Variants
  addValueDeclaration +swap Variants.re:31:4 path:+Variants
  addValueDeclaration +testConvert Variants.re:45:4 path:+Variants
  addValueDeclaration +fortytwoOK Variants.re:48:4 path:+Variants
  addValueDeclaration +fortytwoBAD Variants.re:52:4 path:+Variants
  addValueDeclaration +testConvert2 Variants.re:64:4 path:+Variants
  addValueDeclaration +testConvert3 Variants.re:76:4 path:+Variants
  addValueDeclaration +testConvert2to3 Variants.re:80:4 path:+Variants
  addValueDeclaration +id1 Variants.re:89:4 path:+Variants
  addValueDeclaration +id2 Variants.re:92:4 path:+Variants
  addValueDeclaration +polyWithOpt Variants.re:100:4 path:+Variants
  addValueDeclaration +restResult1 Variants.re:115:4 path:+Variants
  addValueDeclaration +restResult2 Variants.re:118:4 path:+Variants
  addValueDeclaration +restResult3 Variants.re:121:4 path:+Variants
  addValueReference Variants.re:13:4 --> Variants.re:13:17
  addValueReference Variants.re:31:4 --> Variants.re:31:11
  addValueReference Variants.re:45:4 --> Variants.re:45:19
  addValueReference Variants.re:64:4 --> Variants.re:64:20
  addValueReference Variants.re:76:4 --> Variants.re:76:20
  addValueReference Variants.re:80:4 --> Variants.re:80:23
  addValueReference Variants.re:89:4 --> Variants.re:89:11
  addValueReference Variants.re:92:4 --> Variants.re:92:11
  addVariantCaseDeclaration Type Variants.re:97:4 path:+Variants.type_
  addValueReference Variants.re:100:4 --> Variants.re:100:18
  addValueReference Variants.re:100:4 --> Variants.re:100:18
  addValueReference Variants.re:100:4 --> Variants.re:100:18
  addVariantCaseDeclaration Ok Variants.re:105:4 path:+Variants.result1
  addVariantCaseDeclaration Error Variants.re:106:4 path:+Variants.result1
  addValueReference Variants.re:115:4 --> Variants.re:115:19
  addValueReference Variants.re:118:4 --> Variants.re:118:19
  addValueReference Variants.re:121:4 --> Variants.re:121:19
  Scanning trace.cmti
  addRecordLabelDeclaration pf trace.mli:3:11 path:trace.pf
  addValueDeclaration +infok trace.mli:5:0 path:trace
  Scanning Uncurried.cmt
  addValueDeclaration +uncurried0 Uncurried.re:14:4 path:+Uncurried
  addValueDeclaration +uncurried1 Uncurried.re:17:4 path:+Uncurried
  addValueDeclaration +uncurried2 Uncurried.re:20:4 path:+Uncurried
  addValueDeclaration +uncurried3 Uncurried.re:23:4 path:+Uncurried
  addValueDeclaration +curried3 Uncurried.re:27:4 path:+Uncurried
  addValueDeclaration +callback Uncurried.re:30:4 path:+Uncurried
  addValueDeclaration +callback2 Uncurried.re:36:4 path:+Uncurried
  addValueDeclaration +callback2U Uncurried.re:39:4 path:+Uncurried
  addValueDeclaration +sumU Uncurried.re:42:4 path:+Uncurried
  addValueDeclaration +sumU2 Uncurried.re:48:4 path:+Uncurried
  addValueDeclaration +sumCurried Uncurried.re:55:4 path:+Uncurried
  addValueDeclaration +sumLblCurried Uncurried.re:63:4 path:+Uncurried
  addValueReference Uncurried.re:17:4 --> Uncurried.re:17:20
  addValueReference Uncurried.re:20:4 --> Uncurried.re:20:20
  addValueReference Uncurried.re:20:4 --> Uncurried.re:20:23
  addValueReference Uncurried.re:23:4 --> Uncurried.re:24:5
  addValueReference Uncurried.re:23:4 --> Uncurried.re:24:8
  addValueReference Uncurried.re:23:4 --> Uncurried.re:24:11
  addValueReference Uncurried.re:27:4 --> Uncurried.re:27:16
  addValueReference Uncurried.re:27:4 --> Uncurried.re:27:19
  addValueReference Uncurried.re:27:4 --> Uncurried.re:27:22
  addValueReference Uncurried.re:30:4 --> Uncurried.re:30:15
  addRecordLabelDeclaration login Uncurried.re:32:13 path:+Uncurried.auth
  addRecordLabelDeclaration loginU Uncurried.re:33:14 path:+Uncurried.authU
  addTypeReference Uncurried.re:36:24 --> Uncurried.re:32:13
  addValueReference Uncurried.re:36:4 --> Uncurried.re:36:16
  addTypeReference Uncurried.re:39:25 --> Uncurried.re:33:14
  addValueReference Uncurried.re:39:4 --> Uncurried.re:39:17
  addValueReference Uncurried.re:42:4 --> Uncurried.re:43:8
  addValueReference Uncurried.re:42:4 --> Uncurried.re:43:5
  addValueReference Uncurried.re:42:4 --> Uncurried.re:43:8
  addValueReference Uncurried.re:48:4 --> Uncurried.re:50:7
  addValueReference Uncurried.re:48:4 --> Uncurried.re:49:5
  addValueReference Uncurried.re:48:4 --> Uncurried.re:50:7
  addValueReference Uncurried.re:55:4 --> Uncurried.re:57:2
  addValueReference Uncurried.re:55:4 --> Uncurried.re:55:17
  addValueReference Uncurried.re:55:4 --> Uncurried.re:57:2
  addValueReference Uncurried.re:55:4 --> Uncurried.re:55:17
  addValueReference Uncurried.re:63:4 --> Uncurried.re:65:4
  addValueReference Uncurried.re:63:4 --> Uncurried.re:63:33
  addValueReference Uncurried.re:63:4 --> Uncurried.re:65:4
  addValueReference Uncurried.re:63:4 --> Uncurried.re:63:21
  addValueReference Uncurried.re:63:4 --> Uncurried.re:63:33
  Scanning TestEmitInnerModules.cmt
  addValueDeclaration +x TestEmitInnerModules.re:3:6 path:+TestEmitInnerModules.Inner
  addValueDeclaration +y TestEmitInnerModules.re:5:6 path:+TestEmitInnerModules.Inner
  addValueDeclaration +y TestEmitInnerModules.re:12:10 path:+TestEmitInnerModules.Outer.Medium.Inner
  Scanning NestedModules.cmt
  addValueDeclaration +notNested NestedModules.re:2:4 path:+NestedModules
  addValueDeclaration +theAnswer NestedModules.re:6:6 path:+NestedModules.Universe
  addValueDeclaration +notExported NestedModules.re:8:6 path:+NestedModules.Universe
  addValueDeclaration +x NestedModules.re:14:8 path:+NestedModules.Universe.Nested2
  addValueDeclaration +nested2Value NestedModules.re:17:8 path:+NestedModules.Universe.Nested2
  addValueDeclaration +y NestedModules.re:19:8 path:+NestedModules.Universe.Nested2
  addValueDeclaration +x NestedModules.re:25:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +y NestedModules.re:26:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +z NestedModules.re:27:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +w NestedModules.re:28:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +nested3Value NestedModules.re:34:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +nested3Function NestedModules.re:37:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +nested2Function NestedModules.re:41:8 path:+NestedModules.Universe.Nested2
  addValueDeclaration +someString NestedModules.re:50:6 path:+NestedModules.Universe
  addValueReference NestedModules.re:37:10 --> NestedModules.re:37:29
  addValueReference NestedModules.re:41:8 --> NestedModules.re:41:27
  addVariantCaseDeclaration A NestedModules.re:46:6 path:+NestedModules.Universe.variant
  addVariantCaseDeclaration B NestedModules.re:47:6 path:+NestedModules.Universe.variant
  Scanning OptArg.cmt
  addValueDeclaration +foo OptArg.re:1:4 path:+OptArg
  addValueDeclaration +bar OptArg.re:3:4 path:+OptArg
  addValueReference OptArg.re:1:4 --> OptArg.re:1:14
  addValueReference OptArg.re:1:4 --> OptArg.re:1:20
  addValueReference OptArg.re:1:4 --> OptArg.re:1:26
  addValueReference OptArg.re:1:4 --> OptArg.re:1:12
  addValueReference OptArg.re:1:4 --> OptArg.re:1:18
  addValueReference OptArg.re:1:4 --> OptArg.re:1:24
  addValueReference OptArg.re:1:4 --> OptArg.re:1:29
  addValueReference OptArg.re:3:4 --> OptArg.re:3:18
  addValueReference OptArg.re:3:4 --> OptArg.re:3:27
  OptionalArgs.addReference foo called with optional arg x OptArg.re:5:7
  addValueReference OptArg.re:5:7 --> OptArg.re:1:4
  addValueReference OptArg.re:7:7 --> OptArg.re:3:4
  addValueReference OptArg.rei:1:0 --> OptArg.re:1:4
  OptionalArgs.addFunctionReference OptArg.rei:1:0 OptArg.re:1:4
  addValueReference OptArg.rei:2:0 --> OptArg.re:3:4
  OptionalArgs.addFunctionReference OptArg.rei:2:0 OptArg.re:3:4
  Scanning Shadow.cmt
  addValueDeclaration +test Shadow.re:2:4 path:+Shadow
  addValueDeclaration +test Shadow.re:5:4 path:+Shadow
  addValueDeclaration +test Shadow.re:11:6 path:+Shadow.M
  addValueDeclaration +test Shadow.re:9:6 path:+Shadow.M
  Scanning ModuleAliases2.cmt
  addValueDeclaration +q ModuleAliases2.re:21:4 path:+ModuleAliases2
  addRecordLabelDeclaration x ModuleAliases2.re:3:2 path:+ModuleAliases2.record
  addRecordLabelDeclaration y ModuleAliases2.re:4:2 path:+ModuleAliases2.record
  addRecordLabelDeclaration outer ModuleAliases2.re:9:16 path:+ModuleAliases2.Outer.outer
  addRecordLabelDeclaration inner ModuleAliases2.re:13:18 path:+ModuleAliases2.Outer.Inner.inner
  Scanning DeadValueTest.cmt
  addValueDeclaration +valueAlive DeadValueTest.re:1:4 path:+DeadValueTest
  addValueDeclaration +valueDead DeadValueTest.re:2:4 path:+DeadValueTest
  addValueDeclaration +valueOnlyInImplementation DeadValueTest.re:4:4 path:+DeadValueTest
  addValueDeclaration +subList DeadValueTest.re:6:8 path:+DeadValueTest
  addValueDeclaration +tail DeadValueTest.re:10:8 path:+DeadValueTest
  addValueReference DeadValueTest.re:10:8 --> DeadValueTest.re:6:19
  addValueReference DeadValueTest.re:10:8 --> DeadValueTest.re:6:22
  addValueReference DeadValueTest.re:10:8 --> DeadValueTest.re:9:11
  addValueReference DeadValueTest.re:10:8 --> DeadValueTest.re:6:8
  addValueReference DeadValueTest.re:10:8 --> DeadValueTest.re:6:22
  addValueReference DeadValueTest.re:6:8 --> DeadValueTest.re:9:5
  addValueReference DeadValueTest.re:6:8 --> DeadValueTest.re:10:8
  addValueReference DeadValueTest.re:6:8 --> DeadValueTest.re:10:8
  addValueReference DeadValueTest.re:6:8 --> DeadValueTest.re:6:19
  addValueReference DeadValueTest.re:6:8 --> DeadValueTest.re:6:25
  addValueReference DeadValueTest.rei:1:0 --> DeadValueTest.re:1:4
  addValueReference DeadValueTest.rei:2:0 --> DeadValueTest.re:2:4
  Scanning Tuples.cmt
  addValueDeclaration +testTuple Tuples.re:4:4 path:+Tuples
  addValueDeclaration +origin Tuples.re:10:4 path:+Tuples
  addValueDeclaration +computeArea Tuples.re:13:4 path:+Tuples
  addValueDeclaration +computeAreaWithIdent Tuples.re:17:4 path:+Tuples
  addValueDeclaration +computeAreaNoConverters Tuples.re:21:4 path:+Tuples
  addValueDeclaration +coord2d Tuples.re:24:4 path:+Tuples
  addValueDeclaration +getFirstName Tuples.re:39:4 path:+Tuples
  addValueDeclaration +marry Tuples.re:42:4 path:+Tuples
  addValueDeclaration +changeSecondAge Tuples.re:45:4 path:+Tuples
  addValueReference Tuples.re:4:4 --> Tuples.re:4:18
  addValueReference Tuples.re:4:4 --> Tuples.re:4:21
  addValueReference Tuples.re:13:4 --> Tuples.re:13:20
  addValueReference Tuples.re:13:4 --> Tuples.re:13:23
  addValueReference Tuples.re:13:4 --> Tuples.re:13:26
  addValueReference Tuples.re:13:4 --> Tuples.re:14:40
  addValueReference Tuples.re:17:4 --> Tuples.re:17:29
  addValueReference Tuples.re:17:4 --> Tuples.re:17:32
  addValueReference Tuples.re:17:4 --> Tuples.re:17:35
  addValueReference Tuples.re:17:4 --> Tuples.re:18:40
  addValueReference Tuples.re:21:4 --> Tuples.re:21:32
  addValueReference Tuples.re:21:4 --> Tuples.re:21:40
  addValueReference Tuples.re:24:4 --> Tuples.re:24:15
  addValueReference Tuples.re:24:4 --> Tuples.re:24:18
  addRecordLabelDeclaration name Tuples.re:31:2 path:+Tuples.person
  addRecordLabelDeclaration age Tuples.re:32:2 path:+Tuples.person
  addTypeReference Tuples.re:39:49 --> Tuples.re:31:2
  addValueReference Tuples.re:39:4 --> Tuples.re:39:21
  addValueReference Tuples.re:42:4 --> Tuples.re:42:13
  addValueReference Tuples.re:42:4 --> Tuples.re:42:20
  addValueReference Tuples.re:45:4 --> Tuples.re:45:24
  addTypeReference Tuples.re:47:19 --> Tuples.re:32:2
  addValueReference Tuples.re:45:4 --> Tuples.re:45:31
  addValueReference Tuples.re:45:4 --> Tuples.re:45:31
  Scanning Newton.cmt
  addValueDeclaration +- Newton.re:1:4 path:+Newton
  addValueDeclaration ++ Newton.re:2:4 path:+Newton
  addValueDeclaration +* Newton.re:3:4 path:+Newton
  addValueDeclaration +/ Newton.re:4:4 path:+Newton
  addValueDeclaration +newton Newton.re:6:4 path:+Newton
  addValueDeclaration +f Newton.re:25:4 path:+Newton
  addValueDeclaration +fPrimed Newton.re:27:4 path:+Newton
  addValueDeclaration +result Newton.re:29:4 path:+Newton
  addValueDeclaration +current Newton.re:7:6 path:+Newton
  addValueReference Newton.re:7:6 --> Newton.re:6:29
  addValueDeclaration +iterateMore Newton.re:8:6 path:+Newton
  addValueDeclaration +delta Newton.re:9:8 path:+Newton
  addValueReference Newton.re:9:8 --> Newton.re:8:21
  addValueReference Newton.re:9:8 --> Newton.re:8:31
  addValueReference Newton.re:9:8 --> Newton.re:1:4
  addValueReference Newton.re:9:8 --> Newton.re:8:31
  addValueReference Newton.re:9:8 --> Newton.re:8:21
  addValueReference Newton.re:9:8 --> Newton.re:1:4
  addValueReference Newton.re:9:8 --> Newton.re:8:31
  addValueReference Newton.re:9:8 --> Newton.re:8:21
  addValueReference Newton.re:8:6 --> Newton.re:9:8
  addValueReference Newton.re:8:6 --> Newton.re:6:39
  addValueReference Newton.re:8:6 --> Newton.re:7:6
  addValueReference Newton.re:8:6 --> Newton.re:8:31
  addValueDeclaration +loop Newton.re:14:10 path:+Newton
  addValueDeclaration +previous Newton.re:15:8 path:+Newton
  addValueReference Newton.re:15:8 --> Newton.re:7:6
  addValueDeclaration +next Newton.re:16:8 path:+Newton
  addValueReference Newton.re:16:8 --> Newton.re:15:8
  addValueReference Newton.re:16:8 --> Newton.re:15:8
  addValueReference Newton.re:16:8 --> Newton.re:6:15
  addValueReference Newton.re:16:8 --> Newton.re:15:8
  addValueReference Newton.re:16:8 --> Newton.re:6:19
  addValueReference Newton.re:16:8 --> Newton.re:4:4
  addValueReference Newton.re:16:8 --> Newton.re:1:4
  addValueReference Newton.re:14:10 --> Newton.re:7:6
  addValueReference Newton.re:14:10 --> Newton.re:14:10
  addValueReference Newton.re:14:10 --> Newton.re:15:8
  addValueReference Newton.re:14:10 --> Newton.re:16:8
  addValueReference Newton.re:14:10 --> Newton.re:8:6
  addValueReference Newton.re:6:4 --> Newton.re:14:10
  addValueReference Newton.re:25:4 --> Newton.re:25:8
  addValueReference Newton.re:25:4 --> Newton.re:25:8
  addValueReference Newton.re:25:4 --> Newton.re:3:4
  addValueReference Newton.re:25:4 --> Newton.re:25:8
  addValueReference Newton.re:25:4 --> Newton.re:3:4
  addValueReference Newton.re:25:4 --> Newton.re:25:8
  addValueReference Newton.re:25:4 --> Newton.re:3:4
  addValueReference Newton.re:25:4 --> Newton.re:25:8
  addValueReference Newton.re:25:4 --> Newton.re:3:4
  addValueReference Newton.re:25:4 --> Newton.re:1:4
  addValueReference Newton.re:25:4 --> Newton.re:25:8
  addValueReference Newton.re:25:4 --> Newton.re:3:4
  addValueReference Newton.re:25:4 --> Newton.re:1:4
  addValueReference Newton.re:25:4 --> Newton.re:2:4
  addValueReference Newton.re:27:4 --> Newton.re:27:14
  addValueReference Newton.re:27:4 --> Newton.re:3:4
  addValueReference Newton.re:27:4 --> Newton.re:27:14
  addValueReference Newton.re:27:4 --> Newton.re:3:4
  addValueReference Newton.re:27:4 --> Newton.re:27:14
  addValueReference Newton.re:27:4 --> Newton.re:3:4
  addValueReference Newton.re:27:4 --> Newton.re:1:4
  addValueReference Newton.re:27:4 --> Newton.re:1:4
  addValueReference Newton.re:29:4 --> Newton.re:25:4
  addValueReference Newton.re:29:4 --> Newton.re:27:4
  addValueReference Newton.re:29:4 --> Newton.re:6:4
  addValueReference Newton.re:31:8 --> Newton.re:29:4
  addValueReference Newton.re:31:18 --> Newton.re:29:4
  addValueReference Newton.re:31:16 --> Newton.re:25:4
  Scanning TransitiveType1.cmt
  addValueDeclaration +convert TransitiveType1.re:2:4 path:+TransitiveType1
  addValueDeclaration +convertAlias TransitiveType1.re:5:4 path:+TransitiveType1
  addValueReference TransitiveType1.re:2:4 --> TransitiveType1.re:2:15
  addValueReference TransitiveType1.re:5:4 --> TransitiveType1.re:5:20
  Scanning TypeParams2.cmt
  addValueDeclaration +exportSomething TypeParams2.re:10:4 path:+TypeParams2
  addRecordLabelDeclaration id TypeParams2.re:2:13 path:+TypeParams2.item
  Scanning DeadExn.cmti
  Scanning FirstClassModules.cmt
  addValueDeclaration +y FirstClassModules.re:17:6 path:+FirstClassModules.M
  addValueDeclaration +k FirstClassModules.re:21:8 path:+FirstClassModules.M.InnerModule2
  addValueDeclaration +k3 FirstClassModules.re:25:8 path:+FirstClassModules.M.InnerModule3
  addValueDeclaration +u FirstClassModules.re:30:8 path:+FirstClassModules.M.Z
  addValueDeclaration +f FirstClassModules.re:33:2 path:+FirstClassModules.M
  addValueDeclaration +x FirstClassModules.re:34:6 path:+FirstClassModules.M
  addValueDeclaration +firstClassModule FirstClassModules.re:41:4 path:+FirstClassModules
  addValueDeclaration +testConvert FirstClassModules.re:44:4 path:+FirstClassModules
  addValueDeclaration +someFunctorAsFunction FirstClassModules.re:53:4 path:+FirstClassModules
  addValueReference FirstClassModules.re:25:8 --> FirstClassModules.re:25:13
  addValueReference FirstClassModules.re:44:4 --> FirstClassModules.re:44:19
  addValueDeclaration +ww FirstClassModules.re:49:6 path:+FirstClassModules.SomeFunctor
  addValueReference FirstClassModules.re:49:6 --> FirstClassModules.re:14:2
  addValueReference FirstClassModules.re:53:4 --> FirstClassModules.re:53:29
  addValueReference FirstClassModules.re:2:2 --> FirstClassModules.re:34:6
  addValueReference FirstClassModules.re:4:2 --> FirstClassModules.re:33:2
  addValueReference FirstClassModules.re:7:24 --> FirstClassModules.re:21:8
  addValueReference FirstClassModules.re:10:4 --> FirstClassModules.re:25:8
  addValueReference FirstClassModules.re:12:20 --> FirstClassModules.re:28:20
  addValueReference FirstClassModules.re:28:20 --> FirstClassModules.re:12:20
  addValueReference FirstClassModules.re:28:20 --> FirstClassModules.re:30:8
  addValueReference FirstClassModules.re:14:2 --> FirstClassModules.re:17:6
  addValueReference FirstClassModules.re:46:20 --> FirstClassModules.re:49:6
  Scanning DeadMl.cmt
  addValueDeclaration +thisSpansSeveralLines DeadMl.ml:3:8 path:+DeadMl.QQ
  addValueDeclaration +thisIsInInterface DeadMl.ml:9:2 path:+DeadMl.AA
  addValueDeclaration +thisHasSemicolons DeadMl.ml:15:4 path:+DeadMl
  addValueDeclaration +version DeadMl.ml:26:6 path:+DeadMl.Bs_version
  addValueDeclaration +header DeadMl.ml:26:27 path:+DeadMl.Bs_version
  addValueDeclaration +package_name DeadMl.ml:26:47 path:+DeadMl.Bs_version
  addValueDeclaration +map_split_opt DeadMl.ml:45:8 path:+DeadMl
  addValueDeclaration +inline_threshold DeadMl.ml:56:4 path:+DeadMl
  addValueDeclaration +dead1 DeadMl.ml:59:6 path:+DeadMl.Scope
  addValueDeclaration +deadInner1 DeadMl.ml:62:8 path:+DeadMl.Scope.Inner1
  addValueDeclaration +liveInner2 DeadMl.ml:66:8 path:+DeadMl.Scope.Inner1
  addValueDeclaration +dead2 DeadMl.ml:69:6 path:+DeadMl.Scope
  addValueDeclaration +liveInner3 DeadMl.ml:74:8 path:+DeadMl.Scope.Inner2
  addValueDeclaration +live3 DeadMl.ml:77:6 path:+DeadMl.Scope
  addValueDeclaration +dead4 DeadMl.ml:80:4 path:+DeadMl
  addValueDeclaration +live5 DeadMl.ml:82:4 path:+DeadMl
  addValueDeclaration +dead5 DeadMl.ml:85:4 path:+DeadMl
  addValueDeclaration +live6 DeadMl.ml:87:4 path:+DeadMl
  addValueDeclaration +dead7 DeadMl.ml:90:4 path:+DeadMl
  addValueDeclaration +dead8 DeadMl.ml:94:2 path:+DeadMl.WithSignature
  addValueDeclaration +live9 DeadMl.ml:96:2 path:+DeadMl.WithSignature
  addValueDeclaration +dead10 DeadMl.ml:99:2 path:+DeadMl.WithSignature
  addValueDeclaration +live11 DeadMl.ml:103:2 path:+DeadMl.WithSignature
  addValueDeclaration +foo DeadMl.ml:112:21 path:+DeadMl
  addValueReference DeadMl.ml:3:8 --> DeadMl.ml:4:11
  addValueReference DeadMl.ml:3:8 --> DeadMl.ml:4:20
  addValueDeclaration +thisIsInInterface DeadMl.ml:12:6 path:+DeadMl.AA
  addValueReference DeadMl.ml:12:6 --> DeadMl.ml:12:24
  addVariantCaseDeclaration DeadA DeadMl.ml:17:18 path:+DeadMl.thisIsDead
  addVariantCaseDeclaration DeadB DeadMl.ml:17:26 path:+DeadMl.thisIsDead
  addValueDeclaration +_ DeadMl.ml:21:2 path:+DeadMl
  addValueDeclaration +_ DeadMl.ml:22:2 path:+DeadMl
  addValueDeclaration +version DeadMl.ml:29:8 path:+DeadMl.Bs_version
  addValueDeclaration +header DeadMl.ml:30:8 path:+DeadMl.Bs_version
  addValueDeclaration +package_name DeadMl.ml:31:8 path:+DeadMl.Bs_version
  addVariantCaseDeclaration Lfunction DeadMl.ml:35:2 path:+DeadMl.l
  addRecordLabelDeclaration module_name DeadMl.ml:41:2 path:+DeadMl.module_info
  addRecordLabelDeclaration case DeadMl.ml:42:2 path:+DeadMl.module_info
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:50:4
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:46:19
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:50:7
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:46:19
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:45:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:53:23
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:51:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:54:23
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:11
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:11
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:51:10
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:46:3
  addValueDeclaration +dead8 DeadMl.ml:106:6 path:+DeadMl.WithSignature
  addValueDeclaration +live9 DeadMl.ml:107:6 path:+DeadMl.WithSignature
  addValueDeclaration +dead10 DeadMl.ml:108:6 path:+DeadMl.WithSignature
  addValueDeclaration +live11 DeadMl.ml:109:6 path:+DeadMl.WithSignature
  addValueReference DeadMl.ml:112:21 --> DeadMl.ml:112:25
  addValueReference DeadMl.ml:9:2 --> DeadMl.ml:12:6
  addValueReference DeadMl.ml:26:6 --> DeadMl.ml:29:8
  addValueReference DeadMl.ml:26:27 --> DeadMl.ml:30:8
  addValueReference DeadMl.ml:26:47 --> DeadMl.ml:31:8
  addValueReference DeadMl.ml:94:2 --> DeadMl.ml:106:6
  addValueReference DeadMl.ml:96:2 --> DeadMl.ml:107:6
  addValueReference DeadMl.ml:99:2 --> DeadMl.ml:108:6
  addValueReference DeadMl.ml:103:2 --> DeadMl.ml:109:6
  Scanning ImportMyBanner.cmt
  addValueDeclaration +make ImportMyBanner.re:8:0 path:+ImportMyBanner
  addValueDeclaration +make ImportMyBanner.re:19:4 path:+ImportMyBanner
  addRecordLabelDeclaration text ImportMyBanner.re:6:16 path:+ImportMyBanner.message
  addValueReference ImportMyBanner.re:19:4 --> ImportMyBanner.re:8:0
  Scanning TypeParams3.cmt
  addValueDeclaration +test TypeParams3.re:2:4 path:+TypeParams3
  addValueDeclaration +test2 TypeParams3.re:5:4 path:+TypeParams3
  addValueReference TypeParams3.re:2:4 --> TypeParams3.re:2:12
  addValueReference TypeParams3.re:5:4 --> TypeParams3.re:5:13
  Scanning TestOptArg.cmt
  OptionalArgs.addReference OptArg.bar called with optional arg z TestOptArg.re:1:7
  addValueReference TestOptArg.re:1:7 --> OptArg.rei:2:0
  Scanning IgnoreInterface.cmt
  Scanning DeadValueTest.cmti
  addValueDeclaration +valueAlive DeadValueTest.rei:1:0 path:DeadValueTest
  addValueDeclaration +valueDead DeadValueTest.rei:2:0 path:DeadValueTest
  Scanning IgnoreInterface.cmti
  Scanning TypeParams1.cmt
  addValueDeclaration +exportSomething TypeParams1.re:4:4 path:+TypeParams1
  Scanning TestModuleAliases.cmt
  addValueDeclaration +testInner1 TestModuleAliases.re:32:4 path:+TestModuleAliases
  addValueDeclaration +testInner1Expanded TestModuleAliases.re:35:4 path:+TestModuleAliases
  addValueDeclaration +testInner2 TestModuleAliases.re:38:4 path:+TestModuleAliases
  addValueDeclaration +testInner2Expanded TestModuleAliases.re:41:4 path:+TestModuleAliases
  addValueReference TestModuleAliases.re:32:4 --> TestModuleAliases.re:32:18
  addValueReference TestModuleAliases.re:35:4 --> TestModuleAliases.re:35:26
  addValueReference TestModuleAliases.re:38:4 --> TestModuleAliases.re:38:18
  addValueReference TestModuleAliases.re:41:4 --> TestModuleAliases.re:41:26
  Scanning Opaque.cmt
  addValueDeclaration +noConversion Opaque.re:6:4 path:+Opaque
  addValueDeclaration +testConvertNestedRecordFromOtherFile Opaque.re:12:4 path:+Opaque
  addVariantCaseDeclaration A Opaque.re:3:4 path:+Opaque.opaqueFromRecords
  addValueReference Opaque.re:6:4 --> Opaque.re:6:20
  addValueReference Opaque.re:12:4 --> Opaque.re:12:44
  Scanning ManyComponents.cmt
  addValueDeclaration +someValueSoModuleOffsetsAreShifted ManyComponents.re:4:6 path:+ManyComponents.InnerComponent
  addValueDeclaration +component ManyComponents.re:6:6 path:+ManyComponents.InnerComponent
  addValueDeclaration +make ManyComponents.re:9:6 path:+ManyComponents.InnerComponent
  addValueDeclaration +component ManyComponents.re:16:6 path:+ManyComponents.ManyProps
  addValueDeclaration +make ManyComponents.re:19:6 path:+ManyComponents.ManyProps
  addValueDeclaration +component ManyComponents.re:36:4 path:+ManyComponents
  addValueDeclaration +make ManyComponents.re:39:4 path:+ManyComponents
  addValueReference ManyComponents.re:6:6 --> ReasonReact.rei:153:0
  addValueReference ManyComponents.re:9:6 --> ReasonReact.rei:17:0
  addValueReference ManyComponents.re:9:6 --> ReactDOMRe.re:2136:0
  addValueReference ManyComponents.re:9:6 --> ManyComponents.re:6:6
  addValueReference ManyComponents.re:16:6 --> ReasonReact.rei:153:0
  addValueReference ManyComponents.re:19:6 --> ReasonReact.rei:17:0
  addValueReference ManyComponents.re:19:6 --> ReactDOMRe.re:2136:0
  addValueReference ManyComponents.re:19:6 --> ManyComponents.re:16:6
  addValueReference ManyComponents.re:36:4 --> ReasonReact.rei:153:0
  addValueReference ManyComponents.re:39:4 --> ReasonReact.rei:17:0
  addValueDeclaration +emptyArray ManyComponents.re:42:49 path:+ManyComponents
  addValueReference ManyComponents.re:39:4 --> ManyComponents.re:42:49
  addValueReference ManyComponents.re:39:4 --> ManyComponents.re:9:6
  addValueReference ManyComponents.re:39:4 --> ReasonReact.rei:181:0
  addValueReference ManyComponents.re:39:4 --> ReactDOMRe.re:2136:0
  addValueReference ManyComponents.re:39:4 --> ManyComponents.re:36:4
  Scanning trace.cmt
  addValueDeclaration +infok trace.ml:5:4 path:+trace
  addRecordLabelDeclaration pf trace.ml:3:11 path:+trace.pf
  extendTypeDependencies trace.ml:3:11 --> trace.mli:3:11
  extendTypeDependencies trace.mli:3:11 --> trace.ml:3:11
  addValueReference trace.ml:5:4 --> trace.ml:5:30
  addValueReference trace.mli:5:0 --> trace.ml:5:4
  addTypeReference trace.ml:3:11 --> trace.mli:3:11
  addTypeReference trace.mli:3:11 --> trace.ml:3:11
  Scanning ErrorHandler.cmti
  addValueDeclaration +notify ErrorHandler.rei:5:32 path:ErrorHandler.Make
  addValueDeclaration +x ErrorHandler.rei:7:0 path:ErrorHandler
  Scanning OptArg.cmti
  addValueDeclaration +foo OptArg.rei:1:0 path:OptArg
  addValueDeclaration +bar OptArg.rei:2:0 path:OptArg
  Scanning VariantsWithPayload.cmt
  addValueDeclaration +testWithPayload VariantsWithPayload.re:16:4 path:+VariantsWithPayload
  addValueDeclaration +printVariantWithPayload VariantsWithPayload.re:19:4 path:+VariantsWithPayload
  addValueDeclaration +testManyPayloads VariantsWithPayload.re:38:4 path:+VariantsWithPayload
  addValueDeclaration +printManyPayloads VariantsWithPayload.re:41:4 path:+VariantsWithPayload
  addValueDeclaration +testSimpleVariant VariantsWithPayload.re:56:4 path:+VariantsWithPayload
  addValueDeclaration +testVariantWithPayloads VariantsWithPayload.re:67:4 path:+VariantsWithPayload
  addValueDeclaration +printVariantWithPayloads VariantsWithPayload.re:70:4 path:+VariantsWithPayload
  addValueDeclaration +testVariant1Int VariantsWithPayload.re:103:4 path:+VariantsWithPayload
  addValueDeclaration +testVariant1Object VariantsWithPayload.re:110:4 path:+VariantsWithPayload
  addRecordLabelDeclaration x VariantsWithPayload.re:2:2 path:+VariantsWithPayload.payload
  addRecordLabelDeclaration y VariantsWithPayload.re:3:2 path:+VariantsWithPayload.payload
  addValueReference VariantsWithPayload.re:16:4 --> VariantsWithPayload.re:16:23
  addTypeReference VariantsWithPayload.re:27:42 --> VariantsWithPayload.re:2:2
  addValueReference VariantsWithPayload.re:19:4 --> VariantsWithPayload.re:26:6
  addTypeReference VariantsWithPayload.re:27:59 --> VariantsWithPayload.re:3:2
  addValueReference VariantsWithPayload.re:19:4 --> VariantsWithPayload.re:26:6
  addValueReference VariantsWithPayload.re:19:4 --> VariantsWithPayload.re:19:31
  addValueReference VariantsWithPayload.re:38:4 --> VariantsWithPayload.re:38:24
  addValueReference VariantsWithPayload.re:41:4 --> VariantsWithPayload.re:43:8
  addValueReference VariantsWithPayload.re:41:4 --> VariantsWithPayload.re:44:9
  addValueReference VariantsWithPayload.re:41:4 --> VariantsWithPayload.re:44:13
  addTypeReference VariantsWithPayload.re:46:36 --> VariantsWithPayload.re:2:2
  addValueReference VariantsWithPayload.re:41:4 --> VariantsWithPayload.re:45:10
  addTypeReference VariantsWithPayload.re:46:53 --> VariantsWithPayload.re:3:2
  addValueReference VariantsWithPayload.re:41:4 --> VariantsWithPayload.re:45:10
  addValueReference VariantsWithPayload.re:41:4 --> VariantsWithPayload.re:41:25
  addVariantCaseDeclaration A VariantsWithPayload.re:51:4 path:+VariantsWithPayload.simpleVariant
  addVariantCaseDeclaration B VariantsWithPayload.re:52:4 path:+VariantsWithPayload.simpleVariant
  addVariantCaseDeclaration C VariantsWithPayload.re:53:4 path:+VariantsWithPayload.simpleVariant
  addValueReference VariantsWithPayload.re:56:4 --> VariantsWithPayload.re:56:25
  addVariantCaseDeclaration A VariantsWithPayload.re:60:4 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration B VariantsWithPayload.re:61:4 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration C VariantsWithPayload.re:62:4 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration D VariantsWithPayload.re:63:4 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration E VariantsWithPayload.re:64:4 path:+VariantsWithPayload.variantWithPayloads
  addValueReference VariantsWithPayload.re:67:4 --> VariantsWithPayload.re:67:31
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:73:6
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:75:6
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:75:9
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:80:7
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:80:10
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:85:6
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:85:9
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:85:12
  addValueReference VariantsWithPayload.re:70:4 --> VariantsWithPayload.re:70:31
  addVariantCaseDeclaration R VariantsWithPayload.re:100:4 path:+VariantsWithPayload.variant1Int
  addValueReference VariantsWithPayload.re:103:4 --> VariantsWithPayload.re:103:23
  addVariantCaseDeclaration R VariantsWithPayload.re:107:4 path:+VariantsWithPayload.variant1Object
  addValueReference VariantsWithPayload.re:110:4 --> VariantsWithPayload.re:110:26
  Scanning RepeatedLabel.cmt
  addValueDeclaration +userData RepeatedLabel.re:12:4 path:+RepeatedLabel
  addRecordLabelDeclaration a RepeatedLabel.re:2:2 path:+RepeatedLabel.userData
  addRecordLabelDeclaration b RepeatedLabel.re:3:2 path:+RepeatedLabel.userData
  addRecordLabelDeclaration a RepeatedLabel.re:7:2 path:+RepeatedLabel.tabState
  addRecordLabelDeclaration b RepeatedLabel.re:8:2 path:+RepeatedLabel.tabState
  addRecordLabelDeclaration f RepeatedLabel.re:9:2 path:+RepeatedLabel.tabState
  addValueReference RepeatedLabel.re:12:4 --> RepeatedLabel.re:12:17
  addValueReference RepeatedLabel.re:12:4 --> RepeatedLabel.re:12:20
  addTypeReference RepeatedLabel.re:12:16 --> RepeatedLabel.re:7:2
  addTypeReference RepeatedLabel.re:12:16 --> RepeatedLabel.re:8:2
  addValueReference RepeatedLabel.re:14:7 --> RepeatedLabel.re:12:4
  Scanning FirstClassModulesInterface.cmt
  addValueDeclaration +r FirstClassModulesInterface.re:6:4 path:+FirstClassModulesInterface
  addRecordLabelDeclaration x FirstClassModulesInterface.re:2:2 path:+FirstClassModulesInterface.record
  extendTypeDependencies FirstClassModulesInterface.re:2:2 --> FirstClassModulesInterface.rei:3:2
  extendTypeDependencies FirstClassModulesInterface.rei:3:2 --> FirstClassModulesInterface.re:2:2
  addRecordLabelDeclaration y FirstClassModulesInterface.re:3:2 path:+FirstClassModulesInterface.record
  extendTypeDependencies FirstClassModulesInterface.re:3:2 --> FirstClassModulesInterface.rei:4:2
  extendTypeDependencies FirstClassModulesInterface.rei:4:2 --> FirstClassModulesInterface.re:3:2
  addValueReference FirstClassModulesInterface.rei:7:0 --> FirstClassModulesInterface.re:6:4
  addValueReference FirstClassModulesInterface.rei:10:18 --> FirstClassModulesInterface.re:8:18
  addValueReference FirstClassModulesInterface.re:8:18 --> FirstClassModulesInterface.rei:10:18
  addTypeReference FirstClassModulesInterface.re:3:2 --> FirstClassModulesInterface.rei:4:2
  addTypeReference FirstClassModulesInterface.rei:4:2 --> FirstClassModulesInterface.re:3:2
  addTypeReference FirstClassModulesInterface.re:2:2 --> FirstClassModulesInterface.rei:3:2
  addTypeReference FirstClassModulesInterface.rei:3:2 --> FirstClassModulesInterface.re:2:2
  Scanning Unboxed.cmt
  addValueDeclaration +testV1 Unboxed.re:12:4 path:+Unboxed
  addValueDeclaration +r2Test Unboxed.re:24:4 path:+Unboxed
  addVariantCaseDeclaration A Unboxed.re:4:4 path:+Unboxed.v1
  addVariantCaseDeclaration A Unboxed.re:9:4 path:+Unboxed.v2
  addValueReference Unboxed.re:12:4 --> Unboxed.re:12:14
  addRecordLabelDeclaration x Unboxed.re:16:11 path:+Unboxed.r1
  addVariantCaseDeclaration B Unboxed.re:21:4 path:+Unboxed.r2
  addValueReference Unboxed.re:24:4 --> Unboxed.re:24:14
  Scanning DeadTypeTest.cmti
  addVariantCaseDeclaration A DeadTypeTest.rei:2:4 path:DeadTypeTest.t
  addVariantCaseDeclaration B DeadTypeTest.rei:3:4 path:DeadTypeTest.t
  addValueDeclaration +a DeadTypeTest.rei:4:0 path:DeadTypeTest
  addVariantCaseDeclaration OnlyInImplementation DeadTypeTest.rei:7:4 path:DeadTypeTest.deadType
  addVariantCaseDeclaration OnlyInInterface DeadTypeTest.rei:8:4 path:DeadTypeTest.deadType
  addVariantCaseDeclaration InBoth DeadTypeTest.rei:9:4 path:DeadTypeTest.deadType
  addVariantCaseDeclaration InNeither DeadTypeTest.rei:10:4 path:DeadTypeTest.deadType
  Scanning ImportJsValue.cmt
  addValueDeclaration +round ImportJsValue.re:1:0 path:+ImportJsValue
  addValueDeclaration +area ImportJsValue.re:14:0 path:+ImportJsValue
  addValueDeclaration +returnMixedArray ImportJsValue.re:21:0 path:+ImportJsValue
  addValueDeclaration +roundedNumber ImportJsValue.re:25:4 path:+ImportJsValue
  addValueDeclaration +areaValue ImportJsValue.re:28:4 path:+ImportJsValue
  addValueDeclaration +getProp ImportJsValue.re:35:2 path:+ImportJsValue.AbsoluteValue
  addValueDeclaration +getAbs ImportJsValue.re:38:6 path:+ImportJsValue.AbsoluteValue
  addValueDeclaration +useGetProp ImportJsValue.re:45:4 path:+ImportJsValue
  addValueDeclaration +useGetAbs ImportJsValue.re:48:4 path:+ImportJsValue
  addValueDeclaration +useColor ImportJsValue.re:56:0 path:+ImportJsValue
  addValueDeclaration +higherOrder ImportJsValue.re:58:0 path:+ImportJsValue
  addValueDeclaration +returnedFromHigherOrder ImportJsValue.re:62:4 path:+ImportJsValue
  addValueDeclaration +convertVariant ImportJsValue.re:68:0 path:+ImportJsValue
  addValueDeclaration +polymorphic ImportJsValue.re:71:0 path:+ImportJsValue
  addValueDeclaration +default ImportJsValue.re:73:0 path:+ImportJsValue
  addRecordLabelDeclaration x ImportJsValue.re:10:2 path:+ImportJsValue.point
  addRecordLabelDeclaration y ImportJsValue.re:11:2 path:+ImportJsValue.point
  addValueReference ImportJsValue.re:25:4 --> ImportJsValue.re:1:0
  addValueReference ImportJsValue.re:28:4 --> ImportJsValue.re:14:0
  addValueDeclaration +getAbs ImportJsValue.re:39:8 path:+ImportJsValue.AbsoluteValue
  addValueReference ImportJsValue.re:39:8 --> ImportJsValue.re:38:16
  addValueReference ImportJsValue.re:38:6 --> ImportJsValue.re:39:8
  addValueReference ImportJsValue.re:45:4 --> ImportJsValue.re:45:18
  addValueReference ImportJsValue.re:45:4 --> ImportJsValue.re:35:2
  addValueReference ImportJsValue.re:48:4 --> ImportJsValue.re:48:17
  addValueReference ImportJsValue.re:48:4 --> ImportJsValue.re:38:6
  addValueReference ImportJsValue.re:62:4 --> ImportJsValue.re:58:0
  addVariantCaseDeclaration I ImportJsValue.re:65:4 path:+ImportJsValue.variant
  addVariantCaseDeclaration S ImportJsValue.re:66:4 path:+ImportJsValue.variant
  Scanning References.cmt
  addValueDeclaration +create References.re:4:4 path:+References
  addValueDeclaration +access References.re:7:4 path:+References
  addValueDeclaration +update References.re:10:4 path:+References
  addValueDeclaration +get References.re:17:2 path:+References.R
  addValueDeclaration +make References.re:18:2 path:+References.R
  addValueDeclaration +set References.re:19:2 path:+References.R
  addValueDeclaration +get References.re:31:4 path:+References
  addValueDeclaration +make References.re:34:4 path:+References
  addValueDeclaration +set References.re:37:4 path:+References
  addValueDeclaration +destroysRefIdentity References.re:43:4 path:+References
  addValueDeclaration +preserveRefIdentity References.re:47:4 path:+References
  addValueReference References.re:4:4 --> References.re:4:14
  addValueReference References.re:7:4 --> References.re:7:13
  addValueReference References.re:10:4 --> References.re:10:13
  addValueReference References.re:10:4 --> References.re:10:13
  addValueDeclaration +get References.re:22:6 path:+References.R
  addValueReference References.re:22:6 --> References.re:22:12
  addValueDeclaration +make References.re:23:6 path:+References.R
  addValueDeclaration +set References.re:24:6 path:+References.R
  addValueReference References.re:24:6 --> References.re:24:16
  addValueReference References.re:24:6 --> References.re:24:13
  addValueReference References.re:31:4 --> References.re:17:2
  addValueReference References.re:34:4 --> References.re:18:2
  addValueReference References.re:37:4 --> References.re:19:2
  addRecordLabelDeclaration x References.re:39:27 path:+References.requiresConversion
  addValueReference References.re:43:4 --> References.re:43:27
  addValueReference References.re:47:4 --> References.re:47:27
  addValueReference References.re:17:2 --> References.re:22:6
  addValueReference References.re:18:2 --> References.re:23:6
  addValueReference References.re:19:2 --> References.re:24:6
  Scanning DeadTestWithInterface.cmt
  addValueDeclaration +x DeadTestWithInterface.re:1:20 path:+DeadTestWithInterface.Ext_buffer
  addValueDeclaration +x DeadTestWithInterface.re:2:6 path:+DeadTestWithInterface.Ext_buffer
  addValueReference DeadTestWithInterface.re:1:20 --> DeadTestWithInterface.re:2:6
  Scanning JSResource.cmt
  addValueDeclaration +jSResource JSResource.re:3:0 path:+JSResource
  Scanning DeadTestBlacklist.cmt
  addValueDeclaration +x DeadTestBlacklist.re:1:4 path:+DeadTestBlacklist
  Scanning NestedModulesInSignature.cmti
  addValueDeclaration +theAnswer NestedModulesInSignature.rei:2:2 path:NestedModulesInSignature.Universe
  Scanning CreateErrorHandler2.cmt
  addValueDeclaration +notification CreateErrorHandler2.re:3:6 path:+CreateErrorHandler2.Error2
  addValueReference CreateErrorHandler2.re:3:6 --> CreateErrorHandler2.re:3:21
  addValueReference ErrorHandler.rei:3:2 --> CreateErrorHandler2.re:3:6
  Scanning BootloaderResource.cmt
  addValueDeclaration +read BootloaderResource.re:3:0 path:+BootloaderResource
  Scanning DeadTypeTest.cmt
  addValueDeclaration +a DeadTypeTest.re:4:4 path:+DeadTypeTest
  addVariantCaseDeclaration A DeadTypeTest.re:2:4 path:+DeadTypeTest.t
  extendTypeDependencies DeadTypeTest.re:2:4 --> DeadTypeTest.rei:2:4
  extendTypeDependencies DeadTypeTest.rei:2:4 --> DeadTypeTest.re:2:4
  addVariantCaseDeclaration B DeadTypeTest.re:3:4 path:+DeadTypeTest.t
  extendTypeDependencies DeadTypeTest.re:3:4 --> DeadTypeTest.rei:3:4
  extendTypeDependencies DeadTypeTest.rei:3:4 --> DeadTypeTest.re:3:4
  addTypeReference DeadTypeTest.re:4:8 --> DeadTypeTest.re:2:4
  addVariantCaseDeclaration OnlyInImplementation DeadTypeTest.re:7:4 path:+DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.re:7:4 --> DeadTypeTest.rei:7:4
  extendTypeDependencies DeadTypeTest.rei:7:4 --> DeadTypeTest.re:7:4
  addVariantCaseDeclaration OnlyInInterface DeadTypeTest.re:8:4 path:+DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.re:8:4 --> DeadTypeTest.rei:8:4
  extendTypeDependencies DeadTypeTest.rei:8:4 --> DeadTypeTest.re:8:4
  addVariantCaseDeclaration InBoth DeadTypeTest.re:9:4 path:+DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.re:9:4 --> DeadTypeTest.rei:9:4
  extendTypeDependencies DeadTypeTest.rei:9:4 --> DeadTypeTest.re:9:4
  addVariantCaseDeclaration InNeither DeadTypeTest.re:10:4 path:+DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.re:10:4 --> DeadTypeTest.rei:10:4
  extendTypeDependencies DeadTypeTest.rei:10:4 --> DeadTypeTest.re:10:4
  addValueDeclaration +_ DeadTypeTest.re:12:0 path:+DeadTypeTest
  addTypeReference DeadTypeTest.re:12:8 --> DeadTypeTest.re:7:4
  addValueDeclaration +_ DeadTypeTest.re:13:0 path:+DeadTypeTest
  addTypeReference DeadTypeTest.re:13:8 --> DeadTypeTest.re:9:4
  addValueReference DeadTypeTest.rei:4:0 --> DeadTypeTest.re:4:4
  addTypeReference DeadTypeTest.re:10:4 --> DeadTypeTest.rei:10:4
  addTypeReference DeadTypeTest.rei:10:4 --> DeadTypeTest.re:10:4
  addTypeReference DeadTypeTest.re:9:4 --> DeadTypeTest.rei:9:4
  addTypeReference DeadTypeTest.rei:9:4 --> DeadTypeTest.re:9:4
  addTypeReference DeadTypeTest.re:8:4 --> DeadTypeTest.rei:8:4
  addTypeReference DeadTypeTest.rei:8:4 --> DeadTypeTest.re:8:4
  addTypeReference DeadTypeTest.re:7:4 --> DeadTypeTest.rei:7:4
  addTypeReference DeadTypeTest.rei:7:4 --> DeadTypeTest.re:7:4
  addTypeReference DeadTypeTest.re:3:4 --> DeadTypeTest.rei:3:4
  addTypeReference DeadTypeTest.rei:3:4 --> DeadTypeTest.re:3:4
  addTypeReference DeadTypeTest.re:2:4 --> DeadTypeTest.rei:2:4
  addTypeReference DeadTypeTest.rei:2:4 --> DeadTypeTest.re:2:4
  Scanning CreateErrorHandler1.cmt
  addValueDeclaration +notification CreateErrorHandler1.re:3:6 path:+CreateErrorHandler1.Error1
  addValueReference CreateErrorHandler1.re:3:6 --> CreateErrorHandler1.re:3:21
  addValueReference CreateErrorHandler1.re:3:6 --> CreateErrorHandler1.re:3:21
  addValueReference CreateErrorHandler1.re:8:0 --> ErrorHandler.rei:5:32
  addValueReference ErrorHandler.rei:3:2 --> CreateErrorHandler1.re:3:6
  Scanning LetPrivate.cmt
  addValueDeclaration +y LetPrivate.re:5:4 path:+LetPrivate
  addValueDeclaration +x LetPrivate.re:2:12 path:+LetPrivate.local_1
  addValueReference LetPrivate.re:5:4 --> LetPrivate.re:2:12
  Scanning ModuleAliases.cmt
  addValueDeclaration +testNested ModuleAliases.re:22:4 path:+ModuleAliases
  addValueDeclaration +testInner ModuleAliases.re:25:4 path:+ModuleAliases
  addValueDeclaration +testInner2 ModuleAliases.re:28:4 path:+ModuleAliases
  addRecordLabelDeclaration inner ModuleAliases.re:3:19 path:+ModuleAliases.Outer.Inner.innerT
  addRecordLabelDeclaration nested ModuleAliases.re:11:16 path:+ModuleAliases.Outer2.Inner2.InnerNested.t
  addValueReference ModuleAliases.re:22:4 --> ModuleAliases.re:22:18
  addValueReference ModuleAliases.re:25:4 --> ModuleAliases.re:25:17
  addValueReference ModuleAliases.re:28:4 --> ModuleAliases.re:28:18
  Scanning DeadCodeInterface.cmt
  Scanning ImmutableArray.cmti
  addValueDeclaration +get ImmutableArray.rei:5:15 path:ImmutableArray.Array
  addValueDeclaration +fromArray ImmutableArray.rei:7:0 path:ImmutableArray
  addValueDeclaration +toArray ImmutableArray.rei:10:0 path:ImmutableArray
  addValueDeclaration +length ImmutableArray.rei:12:0 path:ImmutableArray
  addValueDeclaration +size ImmutableArray.rei:16:0 path:ImmutableArray
  addValueDeclaration +get ImmutableArray.rei:18:0 path:ImmutableArray
  addValueDeclaration +getExn ImmutableArray.rei:20:0 path:ImmutableArray
  addValueDeclaration +getUnsafe ImmutableArray.rei:22:0 path:ImmutableArray
  addValueDeclaration +getUndefined ImmutableArray.rei:24:0 path:ImmutableArray
  addValueDeclaration +shuffle ImmutableArray.rei:26:0 path:ImmutableArray
  addValueDeclaration +reverse ImmutableArray.rei:28:0 path:ImmutableArray
  addValueDeclaration +makeUninitialized ImmutableArray.rei:30:0 path:ImmutableArray
  addValueDeclaration +makeUninitializedUnsafe ImmutableArray.rei:32:0 path:ImmutableArray
  addValueDeclaration +make ImmutableArray.rei:34:0 path:ImmutableArray
  addValueDeclaration +range ImmutableArray.rei:36:0 path:ImmutableArray
  addValueDeclaration +rangeBy ImmutableArray.rei:38:0 path:ImmutableArray
  addValueDeclaration +makeByU ImmutableArray.rei:40:0 path:ImmutableArray
  addValueDeclaration +makeBy ImmutableArray.rei:41:0 path:ImmutableArray
  addValueDeclaration +makeByAndShuffleU ImmutableArray.rei:43:0 path:ImmutableArray
  addValueDeclaration +makeByAndShuffle ImmutableArray.rei:44:0 path:ImmutableArray
  addValueDeclaration +zip ImmutableArray.rei:46:0 path:ImmutableArray
  addValueDeclaration +zipByU ImmutableArray.rei:48:0 path:ImmutableArray
  addValueDeclaration +zipBy ImmutableArray.rei:49:0 path:ImmutableArray
  addValueDeclaration +unzip ImmutableArray.rei:51:0 path:ImmutableArray
  addValueDeclaration +concat ImmutableArray.rei:53:0 path:ImmutableArray
  addValueDeclaration +concatMany ImmutableArray.rei:55:0 path:ImmutableArray
  addValueDeclaration +slice ImmutableArray.rei:57:0 path:ImmutableArray
  addValueDeclaration +sliceToEnd ImmutableArray.rei:59:0 path:ImmutableArray
  addValueDeclaration +copy ImmutableArray.rei:61:0 path:ImmutableArray
  addValueDeclaration +forEachU ImmutableArray.rei:63:0 path:ImmutableArray
  addValueDeclaration +forEach ImmutableArray.rei:64:0 path:ImmutableArray
  addValueDeclaration +mapU ImmutableArray.rei:66:0 path:ImmutableArray
  addValueDeclaration +map ImmutableArray.rei:67:0 path:ImmutableArray
  addValueDeclaration +keepWithIndexU ImmutableArray.rei:69:0 path:ImmutableArray
  addValueDeclaration +keepWithIndex ImmutableArray.rei:70:0 path:ImmutableArray
  addValueDeclaration +keepMapU ImmutableArray.rei:72:0 path:ImmutableArray
  addValueDeclaration +keepMap ImmutableArray.rei:73:0 path:ImmutableArray
  addValueDeclaration +forEachWithIndexU ImmutableArray.rei:75:0 path:ImmutableArray
  addValueDeclaration +forEachWithIndex ImmutableArray.rei:76:0 path:ImmutableArray
  addValueDeclaration +mapWithIndexU ImmutableArray.rei:78:0 path:ImmutableArray
  addValueDeclaration +mapWithIndex ImmutableArray.rei:79:0 path:ImmutableArray
  addValueDeclaration +partitionU ImmutableArray.rei:81:0 path:ImmutableArray
  addValueDeclaration +partition ImmutableArray.rei:82:0 path:ImmutableArray
  addValueDeclaration +reduceU ImmutableArray.rei:84:0 path:ImmutableArray
  addValueDeclaration +reduce ImmutableArray.rei:85:0 path:ImmutableArray
  addValueDeclaration +reduceReverseU ImmutableArray.rei:87:0 path:ImmutableArray
  addValueDeclaration +reduceReverse ImmutableArray.rei:88:0 path:ImmutableArray
  addValueDeclaration +reduceReverse2U ImmutableArray.rei:90:0 path:ImmutableArray
  addValueDeclaration +reduceReverse2 ImmutableArray.rei:91:0 path:ImmutableArray
  addValueDeclaration +someU ImmutableArray.rei:93:0 path:ImmutableArray
  addValueDeclaration +some ImmutableArray.rei:94:0 path:ImmutableArray
  addValueDeclaration +everyU ImmutableArray.rei:96:0 path:ImmutableArray
  addValueDeclaration +every ImmutableArray.rei:97:0 path:ImmutableArray
  addValueDeclaration +every2U ImmutableArray.rei:99:0 path:ImmutableArray
  addValueDeclaration +every2 ImmutableArray.rei:100:0 path:ImmutableArray
  addValueDeclaration +some2U ImmutableArray.rei:102:0 path:ImmutableArray
  addValueDeclaration +some2 ImmutableArray.rei:103:0 path:ImmutableArray
  addValueDeclaration +cmpU ImmutableArray.rei:105:0 path:ImmutableArray
  addValueDeclaration +cmp ImmutableArray.rei:106:0 path:ImmutableArray
  addValueDeclaration +eqU ImmutableArray.rei:108:0 path:ImmutableArray
  addValueDeclaration +eq ImmutableArray.rei:109:0 path:ImmutableArray
  Scanning ImportHookDefault.cmt
  addValueDeclaration +makeProps ImportHookDefault.re:6:0 path:+ImportHookDefault
  addValueDeclaration +make ImportHookDefault.re:6:0 path:+ImportHookDefault
  addValueDeclaration +make2Props ImportHookDefault.re:16:0 path:+ImportHookDefault
  addValueDeclaration +make2 ImportHookDefault.re:16:0 path:+ImportHookDefault
  addRecordLabelDeclaration name ImportHookDefault.re:2:2 path:+ImportHookDefault.person
  addRecordLabelDeclaration age ImportHookDefault.re:3:2 path:+ImportHookDefault.person
  Scanning EverythingLiveHere.cmt
  addValueDeclaration +x EverythingLiveHere.re:1:4 path:+EverythingLiveHere
  addValueDeclaration +y EverythingLiveHere.re:3:4 path:+EverythingLiveHere
  addValueDeclaration +z EverythingLiveHere.re:5:4 path:+EverythingLiveHere
  Scanning UseImportJsValue.cmt
  addValueDeclaration +useGetProp UseImportJsValue.re:2:4 path:+UseImportJsValue
  addValueDeclaration +useTypeImportedInOtherModule UseImportJsValue.re:6:4 path:+UseImportJsValue
  addValueReference UseImportJsValue.re:2:4 --> UseImportJsValue.re:2:18
  addValueReference UseImportJsValue.re:2:4 --> ImportJsValue.re:35:2
  addValueReference UseImportJsValue.re:6:4 --> UseImportJsValue.re:6:36
  Scanning TestImport.cmt
  addValueDeclaration +innerStuffContents TestImport.re:1:0 path:+TestImport
  addValueDeclaration +innerStuffContentsAsEmptyObject TestImport.re:9:0 path:+TestImport
  addValueDeclaration +innerStuffContents TestImport.re:18:4 path:+TestImport
  addValueDeclaration +valueStartingWithUpperCaseLetter TestImport.re:20:0 path:+TestImport
  addValueDeclaration +defaultValue TestImport.re:24:0 path:+TestImport
  addValueDeclaration +make TestImport.re:30:0 path:+TestImport
  addValueDeclaration +make TestImport.re:42:4 path:+TestImport
  addValueDeclaration +defaultValue2 TestImport.re:44:0 path:+TestImport
  addValueReference TestImport.re:18:4 --> TestImport.re:1:0
  addRecordLabelDeclaration text TestImport.re:28:16 path:+TestImport.message
  addValueReference TestImport.re:42:4 --> TestImport.re:30:0
  Scanning TestImmutableArray.cmt
  addValueDeclaration +testImmutableArrayGet TestImmutableArray.re:2:4 path:+TestImmutableArray
  addValueDeclaration +testBeltArrayGet TestImmutableArray.re:9:4 path:+TestImmutableArray
  addValueDeclaration +testBeltArraySet TestImmutableArray.re:11:4 path:+TestImmutableArray
  addValueReference TestImmutableArray.re:2:4 --> TestImmutableArray.re:2:28
  addValueReference TestImmutableArray.re:2:4 --> ImmutableArray.rei:5:15
  addValueReference TestImmutableArray.re:9:4 --> TestImmutableArray.re:9:23
  addValueReference TestImmutableArray.re:11:4 --> TestImmutableArray.re:11:23
  Scanning ImportHooks.cmt
  addValueDeclaration +makeProps ImportHooks.re:15:0 path:+ImportHooks
  addValueDeclaration +make ImportHooks.re:15:0 path:+ImportHooks
  addValueDeclaration +foo ImportHooks.re:21:0 path:+ImportHooks
  addRecordLabelDeclaration name ImportHooks.re:3:2 path:+ImportHooks.person
  addRecordLabelDeclaration age ImportHooks.re:4:2 path:+ImportHooks.person
  Scanning DeadTestWithInterface.cmti
  Interface 0
  Scanning RequireCond.cmt
  addValueDeclaration +make RequireCond.re:1:0 path:+RequireCond
  addValueDeclaration +either RequireCond.re:14:0 path:+RequireCond
  Scanning BucklescriptAnnotations.cmt
  addValueDeclaration +foo BucklescriptAnnotations.re:19:4 path:+BucklescriptAnnotations
  addValueDeclaration +bar BucklescriptAnnotations.re:21:4 path:+BucklescriptAnnotations
  addValueReference BucklescriptAnnotations.re:19:4 --> BucklescriptAnnotations.re:19:11
  addValueDeclaration +f BucklescriptAnnotations.re:22:6 path:+BucklescriptAnnotations
  addValueReference BucklescriptAnnotations.re:22:6 --> BucklescriptAnnotations.re:21:11
  addValueReference BucklescriptAnnotations.re:21:4 --> BucklescriptAnnotations.re:22:6
  Scanning DeadRT.cmti
  addVariantCaseDeclaration Root DeadRT.rei:2:4 path:DeadRT.moduleAccessPath
  addVariantCaseDeclaration Kaboom DeadRT.rei:3:4 path:DeadRT.moduleAccessPath
  Scanning ComponentAsProp.cmt
  addValueDeclaration +component ComponentAsProp.re:1:4 path:+ComponentAsProp
  addValueDeclaration +make ComponentAsProp.re:5:4 path:+ComponentAsProp
  addValueReference ComponentAsProp.re:1:4 --> ReasonReact.rei:153:0
  addValueReference ComponentAsProp.re:5:4 --> ComponentAsProp.re:5:13
  addValueReference ComponentAsProp.re:5:4 --> ComponentAsProp.re:5:21
  addValueReference ComponentAsProp.re:5:4 --> ComponentAsProp.re:13:16
  addValueReference ComponentAsProp.re:5:4 --> ReasonReact.rei:15:0
  addValueReference ComponentAsProp.re:5:4 --> ComponentAsProp.re:5:35
  addValueReference ComponentAsProp.re:5:4 --> ReactDOMRe.re:1125:0
  addValueReference ComponentAsProp.re:5:4 --> ReactDOMRe.re:1125:0
  addValueReference ComponentAsProp.re:5:4 --> ComponentAsProp.re:1:4
  Scanning Records.cmt
  addValueDeclaration +origin Records.re:11:4 path:+Records
  addValueDeclaration +computeArea Records.re:14:4 path:+Records
  addValueDeclaration +coord2d Records.re:18:4 path:+Records
  addValueDeclaration +getOpt Records.re:34:4 path:+Records
  addValueDeclaration +findAddress Records.re:37:4 path:+Records
  addValueDeclaration +someBusiness Records.re:41:4 path:+Records
  addValueDeclaration +findAllAddresses Records.re:44:4 path:+Records
  addValueDeclaration +getPayload Records.re:61:4 path:+Records
  addValueDeclaration +getPayloadRecord Records.re:70:4 path:+Records
  addValueDeclaration +recordValue Records.re:73:4 path:+Records
  addValueDeclaration +payloadValue Records.re:76:4 path:+Records
  addValueDeclaration +getPayloadRecordPlusOne Records.re:79:4 path:+Records
  addValueDeclaration +findAddress2 Records.re:92:4 path:+Records
  addValueDeclaration +someBusiness2 Records.re:96:4 path:+Records
  addValueDeclaration +computeArea3 Records.re:103:4 path:+Records
  addValueDeclaration +computeArea4 Records.re:115:4 path:+Records
  addValueDeclaration +testMyRec Records.re:149:4 path:+Records
  addValueDeclaration +testMyRec2 Records.re:152:4 path:+Records
  addValueDeclaration +testMyObj Records.re:155:4 path:+Records
  addValueDeclaration +testMyObj2 Records.re:158:4 path:+Records
  addValueDeclaration +testMyRecBsAs Records.re:167:4 path:+Records
  addValueDeclaration +testMyRecBsAs2 Records.re:170:4 path:+Records
  addRecordLabelDeclaration x Records.re:5:2 path:+Records.coord
  addRecordLabelDeclaration y Records.re:6:2 path:+Records.coord
  addRecordLabelDeclaration z Records.re:7:2 path:+Records.coord
  addValueReference Records.re:14:4 --> Records.re:14:20
  addValueReference Records.re:14:4 --> Records.re:14:23
  addValueReference Records.re:14:4 --> Records.re:14:26
  addValueReference Records.re:14:4 --> Records.re:15:40
  addTypeReference Records.re:14:19 --> Records.re:5:2
  addTypeReference Records.re:14:19 --> Records.re:6:2
  addTypeReference Records.re:14:19 --> Records.re:7:2
  addValueReference Records.re:18:4 --> Records.re:18:15
  addValueReference Records.re:18:4 --> Records.re:18:18
  addRecordLabelDeclaration name Records.re:22:2 path:+Records.person
  addRecordLabelDeclaration age Records.re:23:2 path:+Records.person
  addRecordLabelDeclaration address Records.re:24:2 path:+Records.person
  addRecordLabelDeclaration name Records.re:29:2 path:+Records.business
  addRecordLabelDeclaration owner Records.re:30:2 path:+Records.business
  addRecordLabelDeclaration address Records.re:31:2 path:+Records.business
  addValueReference Records.re:34:4 --> Records.re:34:19
  addValueReference Records.re:34:4 --> Records.re:34:28
  addValueReference Records.re:34:4 --> Records.re:34:14
  addValueReference Records.re:37:4 --> Records.re:38:31
  addTypeReference Records.re:38:2 --> Records.re:31:2
  addValueReference Records.re:37:4 --> Records.re:37:19
  addValueReference Records.re:37:4 --> Records.re:34:4
  addValueReference Records.re:44:4 --> Records.re:47:35
  addTypeReference Records.re:47:6 --> Records.re:31:2
  addValueReference Records.re:44:4 --> Records.re:46:14
  addValueReference Records.re:44:4 --> Records.re:34:4
  addValueReference Records.re:44:4 --> Records.re:48:62
  addTypeReference Records.re:48:40 --> Records.re:24:2
  addValueReference Records.re:44:4 --> Records.re:48:35
  addValueReference Records.re:44:4 --> Records.re:34:4
  addTypeReference Records.re:48:8 --> Records.re:30:2
  addValueReference Records.re:44:4 --> Records.re:46:14
  addValueReference Records.re:44:4 --> Records.re:34:4
  addValueReference Records.re:44:4 --> Records.re:44:24
  addRecordLabelDeclaration num Records.re:56:2 path:+Records.payload
  addRecordLabelDeclaration payload Records.re:57:2 path:+Records.payload
  addValueReference Records.re:61:4 --> Records.re:61:19
  addTypeReference Records.re:61:18 --> Records.re:57:2
  addRecordLabelDeclaration v Records.re:65:2 path:+Records.record
  addRecordLabelDeclaration w Records.re:66:2 path:+Records.record
  addValueReference Records.re:70:4 --> Records.re:70:25
  addTypeReference Records.re:70:24 --> Records.re:57:2
  addValueReference Records.re:76:4 --> Records.re:73:4
  addTypeReference Records.re:81:5 --> Records.re:65:2
  addValueReference Records.re:79:4 --> Records.re:79:32
  addValueReference Records.re:79:4 --> Records.re:79:32
  addTypeReference Records.re:79:31 --> Records.re:57:2
  addRecordLabelDeclaration name Records.re:86:2 path:+Records.business2
  addRecordLabelDeclaration owner Records.re:87:2 path:+Records.business2
  addRecordLabelDeclaration address2 Records.re:88:2 path:+Records.business2
  addValueReference Records.re:92:4 --> Records.re:93:54
  addTypeReference Records.re:93:2 --> Records.re:88:2
  addValueReference Records.re:92:4 --> Records.re:92:20
  addValueReference Records.re:92:4 --> Records.re:34:4
  addValueReference Records.re:103:4 --> Records.re:105:6
  addValueReference Records.re:103:4 --> Records.re:105:6
  addValueReference Records.re:103:4 --> Records.re:112:69
  addValueReference Records.re:103:4 --> Records.re:105:6
  addValueReference Records.re:115:4 --> Records.re:117:6
  addValueReference Records.re:115:4 --> Records.re:117:6
  addValueReference Records.re:115:4 --> Records.re:124:47
  addValueReference Records.re:115:4 --> Records.re:117:6
  addRecordLabelDeclaration type_ Records.re:141:2 path:+Records.myRec
  addTypeReference Records.re:149:30 --> Records.re:141:2
  addValueReference Records.re:149:4 --> Records.re:149:17
  addValueReference Records.re:152:4 --> Records.re:152:18
  addValueReference Records.re:155:4 --> Records.re:155:17
  addValueReference Records.re:158:4 --> Records.re:158:18
  addRecordLabelDeclaration type_ Records.re:162:2 path:+Records.myRecBsAs
  addTypeReference Records.re:167:38 --> Records.re:162:2
  addValueReference Records.re:167:4 --> Records.re:167:21
  addValueReference Records.re:170:4 --> Records.re:170:22
  Scanning DeadRT.cmt
  addValueDeclaration +emitModuleAccessPath DeadRT.re:5:8 path:+DeadRT
  addVariantCaseDeclaration Root DeadRT.re:2:4 path:+DeadRT.moduleAccessPath
  extendTypeDependencies DeadRT.re:2:4 --> DeadRT.rei:2:4
  extendTypeDependencies DeadRT.rei:2:4 --> DeadRT.re:2:4
  addVariantCaseDeclaration Kaboom DeadRT.re:3:4 path:+DeadRT.moduleAccessPath
  extendTypeDependencies DeadRT.re:3:4 --> DeadRT.rei:3:4
  extendTypeDependencies DeadRT.rei:3:4 --> DeadRT.re:3:4
  addValueReference DeadRT.re:5:8 --> DeadRT.re:7:9
  addValueReference DeadRT.re:5:8 --> DeadRT.re:5:31
  addTypeReference DeadRT.re:11:16 --> DeadRT.re:3:4
  addTypeReference DeadRT.re:3:4 --> DeadRT.rei:3:4
  addTypeReference DeadRT.rei:3:4 --> DeadRT.re:3:4
  addTypeReference DeadRT.re:2:4 --> DeadRT.rei:2:4
  addTypeReference DeadRT.rei:2:4 --> DeadRT.re:2:4
  Scanning ImportIndex.cmt
  addValueDeclaration +makeProps ImportIndex.re:2:0 path:+ImportIndex
  addValueDeclaration +make ImportIndex.re:2:0 path:+ImportIndex
  Scanning Hooks.cmt
  addValueDeclaration +make Hooks.re:4:4 path:+Hooks
  addValueDeclaration +default Hooks.re:36:4 path:+Hooks
  addValueDeclaration +anotherComponent Hooks.re:40:4 path:+Hooks
  addValueDeclaration +make Hooks.re:48:6 path:+Hooks.Inner
  addValueDeclaration +anotherComponent Hooks.re:53:6 path:+Hooks.Inner
  addValueDeclaration +make Hooks.re:59:8 path:+Hooks.Inner.Inner2
  addValueDeclaration +anotherComponent Hooks.re:64:8 path:+Hooks.Inner.Inner2
  addValueDeclaration +make Hooks.re:72:6 path:+Hooks.NoProps
  addValueDeclaration +functionWithRenamedArgs Hooks.re:80:4 path:+Hooks
  addValueDeclaration +componentWithRenamedArgs Hooks.re:87:4 path:+Hooks
  addValueDeclaration +makeWithRef Hooks.re:94:4 path:+Hooks
  addValueDeclaration +testForwardRef Hooks.re:105:4 path:+Hooks
  addValueDeclaration +input Hooks.re:111:4 path:+Hooks
  addValueDeclaration +polymorphicComponent Hooks.re:130:4 path:+Hooks
  addValueDeclaration +functionReturningReactElement Hooks.re:134:4 path:+Hooks
  addValueDeclaration +make Hooks.re:139:6 path:+Hooks.RenderPropRequiresConversion
  addValueDeclaration +aComponentWithChildren Hooks.re:156:4 path:+Hooks
  addRecordLabelDeclaration name Hooks.re:1:16 path:+Hooks.vehicle
  addValueReference Hooks.re:5:26 --> React.re:160:0
  addTypeReference Hooks.re:11:12 --> Hooks.re:1:16
  addValueReference Hooks.re:11:12 --> Hooks.re:4:13
  addValueReference Hooks.re:13:26 --> Hooks.re:5:7
  addValueReference Hooks.re:9:7 --> React.re:7:0
  addValueReference Hooks.re:8:4 --> ReactDOMRe.re:1125:0
  OptionalArgs.addReference ReactDOMRe.createDOMElementVariadic called with optional arg props Hooks.re:17:4
  addValueReference Hooks.re:17:40 --> Hooks.re:5:7
  addValueReference Hooks.re:17:26 --> Hooks.re:5:14
  addValueReference Hooks.re:18:7 --> React.re:7:0
  addValueReference Hooks.re:17:4 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:20:5 --> ImportHooks.re:15:0
  addValueReference Hooks.re:20:5 --> React.re:3:0
  addValueReference Hooks.re:22:34 --> Hooks.re:22:16
  addValueReference Hooks.re:22:21 --> React.re:7:0
  addValueReference Hooks.re:20:5 --> ImportHooks.re:15:0
  addValueReference Hooks.re:23:7 --> React.re:7:0
  addValueReference Hooks.re:24:7 --> React.re:7:0
  addValueReference Hooks.re:20:5 --> React.re:22:0
  addValueReference Hooks.re:26:5 --> ImportHookDefault.re:6:0
  addValueReference Hooks.re:26:5 --> React.re:3:0
  addValueReference Hooks.re:28:34 --> Hooks.re:28:16
  addValueReference Hooks.re:28:21 --> React.re:7:0
  addValueReference Hooks.re:26:5 --> ImportHookDefault.re:6:0
  addValueReference Hooks.re:29:7 --> React.re:7:0
  addValueReference Hooks.re:30:7 --> React.re:7:0
  addValueReference Hooks.re:26:5 --> React.re:22:0
  addValueReference Hooks.re:7:2 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:36:4 --> Hooks.re:4:4
  addTypeReference Hooks.re:42:41 --> Hooks.re:1:16
  addValueReference Hooks.re:42:41 --> Hooks.re:40:25
  addValueReference Hooks.re:42:9 --> React.re:7:0
  addValueReference Hooks.re:42:2 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:41:2 --> Hooks.re:40:35
  addTypeReference Hooks.re:49:43 --> Hooks.re:1:16
  addValueReference Hooks.re:49:43 --> Hooks.re:48:15
  addValueReference Hooks.re:49:11 --> React.re:7:0
  addValueReference Hooks.re:49:4 --> ReactDOMRe.re:1125:0
  addTypeReference Hooks.re:54:43 --> Hooks.re:1:16
  addValueReference Hooks.re:54:43 --> Hooks.re:53:27
  addValueReference Hooks.re:54:11 --> React.re:7:0
  addValueReference Hooks.re:54:4 --> ReactDOMRe.re:1125:0
  addTypeReference Hooks.re:60:45 --> Hooks.re:1:16
  addValueReference Hooks.re:60:45 --> Hooks.re:59:17
  addValueReference Hooks.re:60:13 --> React.re:7:0
  addValueReference Hooks.re:60:6 --> ReactDOMRe.re:1125:0
  addTypeReference Hooks.re:65:45 --> Hooks.re:1:16
  addValueReference Hooks.re:65:45 --> Hooks.re:64:29
  addValueReference Hooks.re:65:13 --> React.re:7:0
  addValueReference Hooks.re:65:6 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:73:10 --> ReasonReact.rei:15:0
  addValueReference Hooks.re:73:4 --> ReactDOMRe.re:1125:0
  addTypeReference Hooks.re:82:2 --> Hooks.re:1:16
  addValueReference Hooks.re:80:4 --> Hooks.re:80:32
  addTypeReference Hooks.re:82:14 --> Hooks.re:1:16
  addValueReference Hooks.re:80:4 --> Hooks.re:80:38
  addValueReference Hooks.re:80:4 --> Hooks.re:80:32
  addValueReference Hooks.re:80:4 --> Hooks.re:80:46
  addTypeReference Hooks.re:89:15 --> Hooks.re:1:16
  addValueReference Hooks.re:89:15 --> Hooks.re:87:33
  addTypeReference Hooks.re:89:27 --> Hooks.re:1:16
  addValueReference Hooks.re:89:27 --> Hooks.re:87:39
  addValueReference Hooks.re:89:2 --> React.re:7:0
  addValueReference Hooks.re:88:6 --> Hooks.re:87:33
  addValueReference Hooks.re:88:2 --> Hooks.re:87:47
  OptionalArgs.addReference ReactDOMRe.createDOMElementVariadic called with optional arg props Hooks.re:97:4
  addValueReference Hooks.re:97:39 --> Hooks.re:96:9
  addValueReference Hooks.re:97:17 --> ReactDOMRe.re:120:2
  addTypeReference Hooks.re:98:20 --> Hooks.re:1:16
  addValueReference Hooks.re:98:20 --> Hooks.re:94:20
  addValueReference Hooks.re:98:7 --> React.re:7:0
  addValueReference Hooks.re:97:4 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:100:12 --> React.re:3:0
  addValueReference Hooks.re:95:10 --> Hooks.re:94:29
  addValueReference Hooks.re:105:4 --> Hooks.re:94:4
  addValueReference Hooks.re:105:4 --> React.re:81:0
  addRecordLabelDeclaration x Hooks.re:107:10 path:+Hooks.r
  OptionalArgs.addReference ReactDOMRe.createDOMElementVariadic called with optional arg props Hooks.re:113:4
  addValueReference Hooks.re:113:24 --> Hooks.re:112:28
  addTypeReference Hooks.re:113:45 --> Hooks.re:107:10
  addValueReference Hooks.re:113:45 --> Hooks.re:112:21
  addValueReference Hooks.re:113:32 --> React.re:7:0
  addValueReference Hooks.re:113:4 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:111:4 --> React.re:81:0
  addTypeReference Hooks.re:130:58 --> Hooks.re:1:16
  addValueReference Hooks.re:130:58 --> Hooks.re:130:35
  addValueReference Hooks.re:130:45 --> React.re:7:0
  addValueReference Hooks.re:134:60 --> Hooks.re:134:38
  addValueReference Hooks.re:134:47 --> React.re:7:0
  addValueDeclaration +car Hooks.re:149:8 path:+Hooks.RenderPropRequiresConversion
  addValueReference Hooks.re:150:30 --> Hooks.re:149:8
  addValueReference Hooks.re:150:18 --> Hooks.re:150:18
  addValueDeclaration +unsafe_expr Hooks.re:150:18 path:+Hooks.RenderPropRequiresConversion
  addValueReference Hooks.re:150:4 --> Hooks.re:141:9
  addTypeReference Hooks.re:158:37 --> Hooks.re:1:16
  addValueReference Hooks.re:158:37 --> Hooks.re:156:31
  addValueReference Hooks.re:158:5 --> React.re:7:0
  addValueReference Hooks.re:159:10 --> Hooks.re:156:41
  addValueReference Hooks.re:159:4 --> ReactDOMRe.re:1125:0
  addValueReference Hooks.re:157:2 --> ReactDOMRe.re:1125:0
  Scanning TestPromise.cmt
  addValueDeclaration +convert TestPromise.re:14:4 path:+TestPromise
  addRecordLabelDeclaration x TestPromise.re:6:2 path:+TestPromise.fromPayload
  addRecordLabelDeclaration s TestPromise.re:7:2 path:+TestPromise.fromPayload
  addRecordLabelDeclaration result TestPromise.re:11:18 path:+TestPromise.toPayload
  addValueReference TestPromise.re:14:4 --> TestPromise.re:14:33
  addTypeReference TestPromise.re:14:32 --> TestPromise.re:7:2
  Scanning NestedModulesInSignature.cmt
  addValueDeclaration +theAnswer NestedModulesInSignature.re:2:6 path:+NestedModulesInSignature.Universe
  addValueReference NestedModulesInSignature.rei:2:2 --> NestedModulesInSignature.re:2:6
  Scanning Docstrings.cmt
  addValueDeclaration +flat Docstrings.re:3:4 path:+Docstrings
  addValueDeclaration +signMessage Docstrings.re:13:4 path:+Docstrings
  addValueDeclaration +one Docstrings.re:16:4 path:+Docstrings
  addValueDeclaration +two Docstrings.re:19:4 path:+Docstrings
  addValueDeclaration +tree Docstrings.re:22:4 path:+Docstrings
  addValueDeclaration +oneU Docstrings.re:25:4 path:+Docstrings
  addValueDeclaration +twoU Docstrings.re:28:4 path:+Docstrings
  addValueDeclaration +treeU Docstrings.re:31:4 path:+Docstrings
  addValueDeclaration +useParam Docstrings.re:34:4 path:+Docstrings
  addValueDeclaration +useParamU Docstrings.re:37:4 path:+Docstrings
  addValueDeclaration +unnamed1 Docstrings.re:40:4 path:+Docstrings
  addValueDeclaration +unnamed1U Docstrings.re:43:4 path:+Docstrings
  addValueDeclaration +unnamed2 Docstrings.re:46:4 path:+Docstrings
  addValueDeclaration +unnamed2U Docstrings.re:49:4 path:+Docstrings
  addValueDeclaration +grouped Docstrings.re:52:4 path:+Docstrings
  addValueDeclaration +unitArgWithoutConversion Docstrings.re:55:4 path:+Docstrings
  addValueDeclaration +unitArgWithoutConversionU Docstrings.re:58:4 path:+Docstrings
  addValueDeclaration +unitArgWithConversion Docstrings.re:65:4 path:+Docstrings
  addValueDeclaration +unitArgWithConversionU Docstrings.re:68:4 path:+Docstrings
  addValueReference Docstrings.re:13:4 --> Docstrings.re:13:21
  addValueReference Docstrings.re:13:4 --> Docstrings.re:13:30
  addValueReference Docstrings.re:16:4 --> Docstrings.re:16:10
  addValueReference Docstrings.re:19:4 --> Docstrings.re:19:11
  addValueReference Docstrings.re:19:4 --> Docstrings.re:19:14
  addValueReference Docstrings.re:22:4 --> Docstrings.re:22:12
  addValueReference Docstrings.re:22:4 --> Docstrings.re:22:15
  addValueReference Docstrings.re:22:4 --> Docstrings.re:22:18
  addValueReference Docstrings.re:25:4 --> Docstrings.re:25:14
  addValueReference Docstrings.re:28:4 --> Docstrings.re:28:14
  addValueReference Docstrings.re:28:4 --> Docstrings.re:28:17
  addValueReference Docstrings.re:31:4 --> Docstrings.re:31:15
  addValueReference Docstrings.re:31:4 --> Docstrings.re:31:18
  addValueReference Docstrings.re:31:4 --> Docstrings.re:31:21
  addValueReference Docstrings.re:34:4 --> Docstrings.re:34:15
  addValueReference Docstrings.re:37:4 --> Docstrings.re:37:19
  addValueReference Docstrings.re:52:4 --> Docstrings.re:52:16
  addValueReference Docstrings.re:52:4 --> Docstrings.re:52:20
  addValueReference Docstrings.re:52:4 --> Docstrings.re:52:23
  addValueReference Docstrings.re:52:4 --> Docstrings.re:52:26
  addValueReference Docstrings.re:52:4 --> Docstrings.re:52:29
  addValueReference Docstrings.re:52:4 --> Docstrings.re:52:33
  addVariantCaseDeclaration A Docstrings.re:61:4 path:+Docstrings.t
  addVariantCaseDeclaration B Docstrings.re:62:4 path:+Docstrings.t
  addTypeReference Docstrings.re:65:34 --> Docstrings.re:61:4
  addTypeReference Docstrings.re:68:36 --> Docstrings.re:61:4
  Scanning TestFirstClassModules.cmt
  addValueDeclaration +convert TestFirstClassModules.re:2:4 path:+TestFirstClassModules
  addValueDeclaration +convertInterface TestFirstClassModules.re:5:4 path:+TestFirstClassModules
  addValueDeclaration +convertRecord TestFirstClassModules.re:8:4 path:+TestFirstClassModules
  addValueDeclaration +convertFirstClassModuleWithTypeEquations TestFirstClassModules.re:26:4 path:+TestFirstClassModules
  addValueReference TestFirstClassModules.re:2:4 --> TestFirstClassModules.re:2:15
  addValueReference TestFirstClassModules.re:5:4 --> TestFirstClassModules.re:5:24
  addValueReference TestFirstClassModules.re:8:4 --> TestFirstClassModules.re:8:21
  addValueReference TestFirstClassModules.re:26:4 --> TestFirstClassModules.re:30:6
  Scanning AutoAnnotate.cmt
  addVariantCaseDeclaration R AutoAnnotate.re:2:4 path:+AutoAnnotate.variant
  addRecordLabelDeclaration variant AutoAnnotate.re:5:15 path:+AutoAnnotate.record
  addRecordLabelDeclaration r2 AutoAnnotate.re:7:11 path:+AutoAnnotate.r2
  addRecordLabelDeclaration r3 AutoAnnotate.re:9:11 path:+AutoAnnotate.r3
  addRecordLabelDeclaration r4 AutoAnnotate.re:11:11 path:+AutoAnnotate.r4
  addVariantCaseDeclaration R2 AutoAnnotate.re:15:4 path:+AutoAnnotate.annotatedVariant
  addVariantCaseDeclaration R4 AutoAnnotate.re:16:4 path:+AutoAnnotate.annotatedVariant
  Scanning DeadCodeImplementation.cmt
  addValueDeclaration +x DeadCodeImplementation.re:2:6 path:+DeadCodeImplementation.M
  addValueReference DeadCodeInterface.re:1:17 --> DeadCodeImplementation.re:2:6
  Scanning DeadTest.cmt
  addValueDeclaration +fortytwo DeadTest.re:2:4 path:+DeadTest
  addValueDeclaration +fortyTwoButExported DeadTest.re:5:4 path:+DeadTest
  addValueDeclaration +thisIsUsedOnce DeadTest.re:7:4 path:+DeadTest
  addValueDeclaration +thisIsUsedTwice DeadTest.re:10:4 path:+DeadTest
  addValueDeclaration +thisIsKeptAlive DeadTest.re:17:4 path:+DeadTest
  addValueDeclaration +thisIsMarkedLive DeadTest.re:20:4 path:+DeadTest
  addValueDeclaration +a DeadTest.re:37:2 path:+DeadTest.VariantUsedOnlyInImplementation
  addValueDeclaration +x DeadTest.re:62:2 path:+DeadTest.MM
  addValueDeclaration +y DeadTest.re:63:2 path:+DeadTest.MM
  addValueDeclaration +unusedRec DeadTest.re:79:8 path:+DeadTest
  addValueDeclaration +split_map DeadTest.re:81:8 path:+DeadTest
  addValueDeclaration +rec1 DeadTest.re:86:8 path:+DeadTest
  addValueDeclaration +rec2 DeadTest.re:87:4 path:+DeadTest
  addValueDeclaration +recWithCallback DeadTest.re:89:8 path:+DeadTest
  addValueDeclaration +foo DeadTest.re:94:8 path:+DeadTest
  addValueDeclaration +bar DeadTest.re:98:4 path:+DeadTest
  addValueDeclaration +withDefaultValue DeadTest.re:100:4 path:+DeadTest
  addValueDeclaration +unsafe_string1 DeadTest.re:102:0 path:+DeadTest
  addValueDeclaration +unsafe_string2 DeadTest.re:105:2 path:+DeadTest.Ext_buffer
  addValueDeclaration +reasonResource DeadTest.re:112:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +makeProps DeadTest.re:112:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +make DeadTest.re:112:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +reasonResource DeadTest.re:119:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +makeProps DeadTest.re:121:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +make DeadTest.re:122:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +cmp DeadTest.re:132:4 path:+DeadTest
  addValueDeclaration +cmp2 DeadTest.re:134:4 path:+DeadTest
  addValueDeclaration +zzz DeadTest.re:150:4 path:+DeadTest
  addValueDeclaration +second DeadTest.re:159:4 path:+DeadTest
  addValueDeclaration +minute DeadTest.re:160:4 path:+DeadTest
  addValueDeclaration +deadRef DeadTest.re:162:4 path:+DeadTest
  addValueDeclaration +makeSwitch DeadTest.re:164:4 path:+DeadTest
  addValueDeclaration +make DeadTest.re:167:4 path:+DeadTest
  addValueDeclaration +theSideEffectIsLogging DeadTest.re:171:4 path:+DeadTest
  addValueDeclaration +stringLengthNoSideEffects DeadTest.re:173:4 path:+DeadTest
  addValueDeclaration +globallyLive1 DeadTest.re:178:6 path:+DeadTest.GloobLive
  addValueDeclaration +globallyLive2 DeadTest.re:179:6 path:+DeadTest.GloobLive
  addValueDeclaration +globallyLive3 DeadTest.re:180:6 path:+DeadTest.GloobLive
  addValueReference DeadTest.re:1:15 --> ImmutableArray.rei:7:0
  addValueReference DeadTest.re:8:7 --> DeadTest.re:7:4
  addValueReference DeadTest.re:11:7 --> DeadTest.re:10:4
  addValueReference DeadTest.re:12:7 --> DeadTest.re:10:4
  addValueReference DeadTest.re:20:4 --> DeadTest.re:17:4
  addValueDeclaration +thisSignatureItemIsDead DeadTest.re:31:6 path:+DeadTest.M
  addVariantCaseDeclaration A DeadTest.re:36:6 path:+DeadTest.VariantUsedOnlyInImplementation.t
  addVariantCaseDeclaration A DeadTest.re:40:6 path:+DeadTest.VariantUsedOnlyInImplementation.t
  extendTypeDependencies DeadTest.re:40:6 --> DeadTest.re:36:6
  extendTypeDependencies DeadTest.re:36:6 --> DeadTest.re:40:6
  addValueDeclaration +a DeadTest.re:41:6 path:+DeadTest.VariantUsedOnlyInImplementation
  addTypeReference DeadTest.re:41:10 --> DeadTest.re:40:6
  addValueReference DeadTest.re:44:17 --> DeadTest.re:37:2
  addValueReference DeadTest.re:44:14 --> DeadTest.re:44:9
  addValueDeclaration +_ DeadTest.re:46:0 path:+DeadTest
  addTypeReference DeadTest.re:46:8 --> DeadTypeTest.rei:8:4
  addValueDeclaration +_ DeadTest.re:47:0 path:+DeadTest
  addTypeReference DeadTest.re:47:8 --> DeadTypeTest.rei:9:4
  addRecordLabelDeclaration xxx DeadTest.re:50:2 path:+DeadTest.record
  addRecordLabelDeclaration yyy DeadTest.re:51:2 path:+DeadTest.record
  addValueDeclaration +_ DeadTest.re:54:0 path:+DeadTest
  addTypeReference DeadTest.re:54:13 --> DeadTest.re:50:2
  addValueReference DeadTest.re:54:13 --> DeadTest.re:54:8
  addValueDeclaration +_ DeadTest.re:55:0 path:+DeadTest
  addValueReference DeadTest.re:55:19 --> DeadTest.re:55:10
  addTypeReference DeadTest.re:55:9 --> DeadTest.re:51:2
  addValueDeclaration +_ DeadTest.re:58:2 path:+DeadTest.UnderscoreInside
  addValueDeclaration +y DeadTest.re:65:6 path:+DeadTest.MM
  addValueDeclaration +x DeadTest.re:66:6 path:+DeadTest.MM
  addValueReference DeadTest.re:66:6 --> DeadTest.re:65:6
  addValueDeclaration +valueOnlyInImplementation DeadTest.re:69:6 path:+DeadTest.MM
  addValueReference DeadTest.re:73:9 --> DeadTest.re:62:2
  addValueReference DeadTest.re:77:16 --> DeadValueTest.rei:1:0
  addValueReference DeadTest.re:79:8 --> DeadTest.re:79:8
  addValueReference DeadTest.re:81:8 --> DeadTest.re:81:20
  addValueReference DeadTest.re:81:8 --> DeadTest.re:81:8
  addValueReference DeadTest.re:86:8 --> DeadTest.re:87:4
  addValueReference DeadTest.re:87:4 --> DeadTest.re:86:8
  addValueDeclaration +cb DeadTest.re:90:6 path:+DeadTest
  addValueReference DeadTest.re:90:6 --> DeadTest.re:89:8
  addValueReference DeadTest.re:89:8 --> DeadTest.re:90:6
  addValueDeclaration +cb DeadTest.re:95:6 path:+DeadTest
  addValueReference DeadTest.re:95:6 --> DeadTest.re:98:4
  addValueReference DeadTest.re:94:8 --> DeadTest.re:95:6
  addValueReference DeadTest.re:98:4 --> DeadTest.re:94:8
  addValueReference DeadTest.re:100:4 --> DeadTest.re:100:42
  addValueReference DeadTest.re:100:4 --> DeadTest.re:100:25
  addValueReference DeadTest.re:100:4 --> DeadTest.re:100:45
  addValueDeclaration +unsafe_string2 DeadTest.re:107:2 path:+DeadTest.Ext_buffer
  addTypeReference DeadTest.re:110:16 --> DeadRT.rei:2:4
  addValueReference DeadTest.re:112:40 --> JSResource.re:3:0
  addValueReference DeadTest.re:112:40 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DeadTest.re:112:40 --> DeadTest.re:112:40
  addValueReference DeadTest.re:112:40 --> BootloaderResource.re:3:0
  addValueReference DeadTest.re:112:40 --> DeadTest.re:112:40
  addValueReference DeadTest.re:112:40 --> React.re:15:0
  addValueReference DeadTest.re:119:6 --> JSResource.re:3:0
  addValueReference DeadTest.re:122:6 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DeadTest.re:122:6 --> DeadTest.re:119:6
  addValueReference DeadTest.re:122:6 --> BootloaderResource.re:3:0
  addValueReference DeadTest.re:122:6 --> DeadTest.re:122:13
  addValueReference DeadTest.re:122:6 --> React.re:15:0
  addValueReference DeadTest.re:132:4 --> DeadTest.re:112:40
  addValueReference DeadTest.re:132:4 --> DeadTest.re:112:40
  addValueReference DeadTest.re:132:4 --> React.re:15:0
  addValueReference DeadTest.re:134:4 --> DeadTest.re:122:6
  addValueReference DeadTest.re:134:4 --> DeadTest.re:121:6
  addValueReference DeadTest.re:134:4 --> React.re:15:0
  addValueReference DeadTest.re:136:16 --> DeadTest.re:132:4
  addValueDeclaration +a1 DeadTest.re:151:6 path:+DeadTest
  addValueDeclaration +a2 DeadTest.re:152:6 path:+DeadTest
  addValueDeclaration +a3 DeadTest.re:153:6 path:+DeadTest
  addValueReference DeadTest.re:157:17 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DeadTest.re:157:17 --> React.re:15:0
  addValueReference DeadTest.re:160:4 --> DeadTest.re:159:4
  addValueReference DeadTest.re:164:4 --> ExportWithRename.re:3:4
  addValueReference DeadTest.re:167:29 --> DeadTest.re:167:11
  addValueReference DeadTest.re:167:16 --> React.re:7:0
  addValueReference DeadTest.re:169:16 --> DeadTest.re:167:4
  addValueReference DeadTest.re:175:30 --> DeadTest.re:175:22
  addTypeReference DeadTest.re:175:21 --> trace.mli:3:11
  addValueReference DeadTest.re:175:0 --> trace.mli:5:0
  addVariantCaseDeclaration A DeadTest.re:185:6 path:+DeadTest.WithInclude.t
  addVariantCaseDeclaration A DeadTest.re:189:8 path:+DeadTest.WithInclude.T.t
  addVariantCaseDeclaration A DeadTest.re:189:8 path:+DeadTest.WithInclude.t
  extendTypeDependencies DeadTest.re:189:8 --> DeadTest.re:185:6
  extendTypeDependencies DeadTest.re:185:6 --> DeadTest.re:189:8
  addTypeReference DeadTest.re:194:7 --> DeadTest.re:185:6
  addValueReference ExportWithRename.re:3:4 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DynamicallyLoadedComponent.re:2:4 --> ExportWithRename.re:3:4
  addValueReference DeadTest.re:37:2 --> DeadTest.re:41:6
  addValueReference DeadTest.re:62:2 --> DeadTest.re:66:6
  addValueReference DeadTest.re:63:2 --> DeadTest.re:65:6
  addValueReference DeadTest.re:105:2 --> DeadTest.re:107:2
  addTypeReference DeadTest.re:189:8 --> DeadTest.re:185:6
  addTypeReference DeadTest.re:185:6 --> DeadTest.re:189:8
  addTypeReference DeadTest.re:40:6 --> DeadTest.re:36:6
  addTypeReference DeadTest.re:36:6 --> DeadTest.re:40:6
  addValueReference TestDeadExn.re:1:7 --> DeadExn.re:1:10
  
File References

  AutoAnnotate.re -->> 
  BootloaderResource.re -->> 
  BucklescriptAnnotations.re -->> 
  ComponentAsProp.re -->> ReactDOMRe.re, ReasonReact.rei
  CreateErrorHandler1.re -->> ErrorHandler.rei
  CreateErrorHandler2.re -->> 
  DeadCodeImplementation.re -->> 
  DeadCodeInterface.re -->> 
  DeadExn.re -->> 
  DeadExn.rei -->> 
  DeadMl.ml -->> 
  DeadRT.re -->> 
  DeadRT.rei -->> 
  DeadTest.re -->> React.re, BootloaderResource.re, DeadValueTest.rei, DynamicallyLoadedComponent.re, ImmutableArray.rei, JSResource.re, ExportWithRename.re, trace.mli
  DeadTestBlacklist.re -->> 
  DeadTestWithInterface.re -->> 
  DeadTypeTest.re -->> 
  DeadTypeTest.rei -->> DeadTypeTest.re
  DeadValueTest.re -->> 
  DeadValueTest.rei -->> DeadValueTest.re
  Docstrings.re -->> 
  DynamicallyLoadedComponent.re -->> React.re
  ErrorHandler.re -->> 
  ErrorHandler.rei -->> ErrorHandler.re
  EverythingLiveHere.re -->> 
  FirstClassModules.re -->> 
  FirstClassModulesInterface.re -->> 
  FirstClassModulesInterface.rei -->> FirstClassModulesInterface.re
  Hooks.re -->> React.re, ReactDOMRe.re, ReasonReact.rei, ImportHookDefault.re, ImportHooks.re
  IgnoreInterface.re -->> 
  IgnoreInterface.rei -->> 
  ImmutableArray.re -->> 
  ImmutableArray.rei -->> ImmutableArray.re
  ImportHookDefault.re -->> 
  ImportHooks.re -->> 
  ImportIndex.re -->> 
  ImportJsValue.re -->> 
  ImportMyBanner.re -->> 
  JSResource.re -->> 
  LetPrivate.re -->> 
  ManyComponents.re -->> ReactDOMRe.re, ReasonReact.rei
  ModuleAliases.re -->> 
  ModuleAliases2.re -->> 
  NestedModules.re -->> 
  NestedModulesInSignature.re -->> 
  NestedModulesInSignature.rei -->> NestedModulesInSignature.re
  Newton.re -->> 
  Opaque.re -->> 
  OptArg.re -->> 
  OptArg.rei -->> OptArg.re
  Records.re -->> 
  References.re -->> 
  RepeatedLabel.re -->> 
  RequireCond.re -->> 
  Shadow.re -->> 
  TestDeadExn.re -->> DeadExn.re
  TestEmitInnerModules.re -->> 
  TestFirstClassModules.re -->> 
  TestImmutableArray.re -->> ImmutableArray.rei
  TestImport.re -->> 
  TestModuleAliases.re -->> 
  TestOptArg.re -->> OptArg.rei
  TestPromise.re -->> 
  TransitiveType1.re -->> 
  TransitiveType2.re -->> 
  TransitiveType3.re -->> 
  Tuples.re -->> 
  TypeParams1.re -->> 
  TypeParams2.re -->> 
  TypeParams3.re -->> 
  Types.re -->> 
  Unboxed.re -->> 
  Uncurried.re -->> 
  UseImportJsValue.re -->> ImportJsValue.re
  Variants.re -->> 
  VariantsWithPayload.re -->> 
  BsJson.re -->> Json_decode.mli
  Exn.re -->> 
  ExnA.re -->> ExnB.re
  ExnB.re -->> 
  ExportWithRename.re -->> React.re
  TestYojson.re -->> Yojson.re
  Yojson.re -->> 
  trace.ml -->> 
  trace.mli -->> trace.ml
  Dead VariantCase +AutoAnnotate.annotatedVariant.R4: 0 references () [0]
  Dead VariantCase +AutoAnnotate.annotatedVariant.R2: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.r4.r4: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.r3.r3: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.r2.r2: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.record.variant: 0 references () [0]
  Dead VariantCase +AutoAnnotate.variant.R: 0 references () [0]
  Dead Value +BucklescriptAnnotations.+bar: 0 references () [1]
  Dead Value +BucklescriptAnnotations.+f: 0 references () [0]
  Dead Value +BucklescriptAnnotations.+foo: 0 references () [0]

  Warning Unused Argument
  File "./ComponentAsProp.re", line 3, characters 0-432
  optional argument button of function +make is never used
  Live Value +ComponentAsProp.+make: 0 references () [0]
  Live Value +ComponentAsProp.+component: 1 references (ComponentAsProp.re:5:4) [0]
  Live Value +CreateErrorHandler1.Error1.+notification: 1 references (ErrorHandler.rei:3:2) [0]
  Live Value +CreateErrorHandler2.Error2.+notification: 1 references (ErrorHandler.rei:3:2) [0]
  Live Value +DeadCodeImplementation.M.+x: 1 references (DeadCodeInterface.re:1:17) [0]
  Live Value +DeadMl.+foo: 0 references () [0]
  Live Value +DeadMl.WithSignature.+live11: 0 references () [1]
  Live Value +DeadMl.WithSignature.+live11: 1 references (DeadMl.ml:103:2) [0]
  Dead Value +DeadMl.WithSignature.+dead10: 0 references () [1]
  Dead Value +DeadMl.WithSignature.+dead10: 0 references () [0]
  Live Value +DeadMl.WithSignature.+live9: 0 references () [1]
  Live Value +DeadMl.WithSignature.+live9: 1 references (DeadMl.ml:96:2) [0]
  Dead Value +DeadMl.WithSignature.+dead8: 0 references () [1]
  Dead Value +DeadMl.WithSignature.+dead8: 0 references () [0]
  Dead Value +DeadMl.+dead7: 0 references () [0]
  Live Value +DeadMl.+live6: 0 references () [0]
  Dead Value +DeadMl.+dead5: 0 references () [0]
  Live Value +DeadMl.+live5: 0 references () [0]
  Dead Value +DeadMl.+dead4: 0 references () [0]
  Live Value +DeadMl.Scope.+live3: 0 references () [0]
  Live Value +DeadMl.Scope.Inner2.+liveInner3: 0 references () [0]
  Dead Value +DeadMl.Scope.+dead2: 0 references () [0]
  Live Value +DeadMl.Scope.Inner1.+liveInner2: 0 references () [0]
  Dead Value +DeadMl.Scope.Inner1.+deadInner1: 0 references () [0]
  Dead Value +DeadMl.Scope.+dead1: 0 references () [0]
  Dead Value +DeadMl.+inline_threshold: 0 references () [0]
  Dead Value +DeadMl.+map_split_opt: 0 references () [0]
  Dead RecordLabel +DeadMl.module_info.case: 0 references () [0]
  Dead RecordLabel +DeadMl.module_info.module_name: 0 references () [0]
  Dead VariantCase +DeadMl.l.Lfunction: 0 references () [0]
  Dead Value +DeadMl.Bs_version.+package_name: 0 references () [1]
  Dead Value +DeadMl.Bs_version.+package_name: 0 references () [0]
  Dead Value +DeadMl.Bs_version.+header: 0 references () [1]
  Dead Value +DeadMl.Bs_version.+header: 0 references () [0]
  Dead Value +DeadMl.Bs_version.+version: 0 references () [1]
  Dead Value +DeadMl.Bs_version.+version: 0 references () [0]
  Dead Value +DeadMl.+_: 0 references () [0]
  Dead Value +DeadMl.+_: 0 references () [0]
  Dead VariantCase +DeadMl.thisIsDead.DeadB: 0 references () [0]
  Dead VariantCase +DeadMl.thisIsDead.DeadA: 0 references () [0]
  Dead Value +DeadMl.+thisHasSemicolons: 0 references () [0]
  Dead Value +DeadMl.AA.+thisIsInInterface: 0 references () [1]
  Dead Value +DeadMl.AA.+thisIsInInterface: 0 references () [0]
  Dead Value +DeadMl.QQ.+thisSpansSeveralLines: 0 references () [0]
  Dead Value +DeadRT.+emitModuleAccessPath: 0 references () [0]
  Live VariantCase +DeadRT.moduleAccessPath.Kaboom: 1 references (DeadRT.re:11:16) [0]
  Live VariantCase DeadRT.moduleAccessPath.Root: 1 references (DeadTest.re:110:16) [1]
  Live VariantCase +DeadRT.moduleAccessPath.Root: 1 references (DeadRT.rei:2:4) [0]
  Live VariantCase DeadRT.moduleAccessPath.Kaboom: 1 references (DeadRT.re:3:4) [0]
  Live VariantCase +DeadTest.WithInclude.t.A: 1 references (DeadTest.re:194:7) [1]
  Live VariantCase +DeadTest.WithInclude.t.A: 1 references (DeadTest.re:185:6) [0]
  Live Value +DeadTest.GloobLive.+globallyLive3: 0 references () [0]
  Live Value +DeadTest.GloobLive.+globallyLive2: 0 references () [0]
  Live Value +DeadTest.GloobLive.+globallyLive1: 0 references () [0]
  Dead Value +DeadTest.+stringLengthNoSideEffects: 0 references () [0]
  Dead Value +DeadTest.+theSideEffectIsLogging: 0 references () [0]
  Live Value +DeadTest.+make: 1 references (DeadTest.re:169:16) [0]
  Dead Value +DeadTest.+makeSwitch: 0 references () [0]
  Dead Value +DeadTest.+deadRef: 0 references () [0]
  Dead Value +DeadTest.+minute: 0 references () [0]
  Dead Value +DeadTest.+second: 0 references () [0]
  Dead Value +DeadTest.+a3: 0 references () [0]
  Dead Value +DeadTest.+a2: 0 references () [0]
  Dead Value +DeadTest.+a1: 0 references () [0]
  Dead Value +DeadTest.+zzz: 0 references () [0]
  Dead Value +DeadTest.+cmp2: 0 references () [0]
  Live Value +DeadTest.+cmp: 1 references (DeadTest.re:136:16) [0]
  Dead Value +DeadTest.LazyDynamicallyLoadedComponent2.+make: 0 references () [0]
  Dead Value +DeadTest.LazyDynamicallyLoadedComponent2.+makeProps: 0 references () [0]
  Dead Value +DeadTest.LazyDynamicallyLoadedComponent2.+reasonResource: 0 references () [0]
  Live Value +DeadTest.LazyDynamicallyLoadedComponent.+make: 1 references (DeadTest.re:132:4) [0]
  Dead Value +DeadTest.Ext_buffer.+unsafe_string2: 0 references () [1]
  Dead Value +DeadTest.Ext_buffer.+unsafe_string2: 0 references () [0]
  Dead Value +DeadTest.+unsafe_string1: 0 references () [0]
  Dead Value +DeadTest.+withDefaultValue: 0 references () [0]
  Dead Value +DeadTest.+bar: 0 references () [0]
  Dead Value +DeadTest.+foo: 0 references () [1]
  Dead Value +DeadTest.+cb: 0 references () [0]
  Dead Value +DeadTest.+cb: 0 references () [0]
  Dead Value +DeadTest.+recWithCallback: 0 references () [0]
  Dead Value +DeadTest.+rec2: 0 references () [0]
  Dead Value +DeadTest.+rec1: 0 references () [0]
  Dead Value +DeadTest.+split_map: 0 references () [0]
  Dead Value +DeadTest.+unusedRec: 0 references () [0]
  Dead Value +DeadTest.MM.+valueOnlyInImplementation: 0 references () [0]
  Live Value +DeadTest.MM.+x: 1 references (DeadTest.re:73:9) [1]
  Live Value +DeadTest.MM.+x: 1 references (DeadTest.re:62:2) [0]
  Dead Value +DeadTest.MM.+y: 0 references () [1]
  Live Value +DeadTest.MM.+y: 1 references (DeadTest.re:66:6) [0]
  Dead Value +DeadTest.UnderscoreInside.+_: 0 references () [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Live RecordLabel +DeadTest.record.yyy: 1 references (DeadTest.re:55:9) [0]
  Live RecordLabel +DeadTest.record.xxx: 1 references (DeadTest.re:54:13) [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Live Value +DeadTest.VariantUsedOnlyInImplementation.+a: 1 references (DeadTest.re:44:17) [1]
  Live Value +DeadTest.VariantUsedOnlyInImplementation.+a: 1 references (DeadTest.re:37:2) [0]
  Live VariantCase +DeadTest.VariantUsedOnlyInImplementation.t.A: 1 references (DeadTest.re:41:10) [0]
  Live VariantCase +DeadTest.VariantUsedOnlyInImplementation.t.A: 1 references (DeadTest.re:40:6) [0]
  Dead Value +DeadTest.M.+thisSignatureItemIsDead: 0 references () [0]
  Live Value +DeadTest.+thisIsMarkedLive: 0 references () [0]
  Live Value +DeadTest.+thisIsKeptAlive: 1 references (DeadTest.re:20:4) [0]
  Live Value +DeadTest.+thisIsUsedTwice: 2 references (DeadTest.re:11:7, DeadTest.re:12:7) [0]
  Live Value +DeadTest.+thisIsUsedOnce: 1 references (DeadTest.re:8:7) [0]
  Live Value +DeadTest.+fortyTwoButExported: 0 references () [0]
  Dead Value +DeadTest.+fortytwo: 0 references () [0]
  Dead Value +DeadTestBlacklist.+x: 0 references () [0]
  Dead Value +DeadTestWithInterface.Ext_buffer.+x: 0 references () [1]
  Dead Value +DeadTestWithInterface.Ext_buffer.+x: 0 references () [0]
  Dead VariantCase DeadTypeTest.deadType.InNeither: 0 references () [0]
  Live VariantCase +DeadTypeTest.deadType.InBoth: 1 references (DeadTypeTest.re:13:8) [1]
  Live VariantCase DeadTypeTest.deadType.InBoth: 2 references (DeadTest.re:47:8, DeadTypeTest.re:9:4) [0]
  Live VariantCase DeadTypeTest.deadType.OnlyInInterface: 1 references (DeadTest.re:46:8) [0]
  Live VariantCase +DeadTypeTest.deadType.OnlyInImplementation: 1 references (DeadTypeTest.re:12:8) [1]
  Live VariantCase DeadTypeTest.deadType.OnlyInImplementation: 1 references (DeadTypeTest.re:7:4) [0]
  Dead Value DeadTypeTest.+a: 0 references () [0]
  Dead VariantCase DeadTypeTest.t.B: 0 references () [0]
  Live VariantCase +DeadTypeTest.t.A: 1 references (DeadTypeTest.re:4:8) [1]
  Live VariantCase DeadTypeTest.t.A: 1 references (DeadTypeTest.re:2:4) [0]
  Live Value +Docstrings.+unitArgWithConversionU: 0 references () [0]
  Live Value +Docstrings.+unitArgWithConversion: 0 references () [0]
  Dead VariantCase +Docstrings.t.B: 0 references () [0]
  Live VariantCase +Docstrings.t.A: 2 references (Docstrings.re:65:34, Docstrings.re:68:36) [0]
  Live Value +Docstrings.+unitArgWithoutConversionU: 0 references () [0]
  Live Value +Docstrings.+unitArgWithoutConversion: 0 references () [0]
  Live Value +Docstrings.+grouped: 0 references () [0]
  Live Value +Docstrings.+unnamed2U: 0 references () [0]
  Live Value +Docstrings.+unnamed2: 0 references () [0]
  Live Value +Docstrings.+unnamed1U: 0 references () [0]
  Live Value +Docstrings.+unnamed1: 0 references () [0]
  Live Value +Docstrings.+useParamU: 0 references () [0]
  Live Value +Docstrings.+useParam: 0 references () [0]
  Live Value +Docstrings.+treeU: 0 references () [0]
  Live Value +Docstrings.+twoU: 0 references () [0]
  Live Value +Docstrings.+oneU: 0 references () [0]
  Live Value +Docstrings.+tree: 0 references () [0]
  Live Value +Docstrings.+two: 0 references () [0]
  Live Value +Docstrings.+one: 0 references () [0]
  Live Value +Docstrings.+signMessage: 0 references () [0]
  Live Value +Docstrings.+flat: 0 references () [0]
  Live Value +EverythingLiveHere.+z: 0 references () [0]
  Live Value +EverythingLiveHere.+y: 0 references () [0]
  Live Value +EverythingLiveHere.+x: 0 references () [0]
  Live Value +FirstClassModules.+someFunctorAsFunction: 0 references () [0]
  Live Value +FirstClassModules.SomeFunctor.+ww: 1 references (FirstClassModules.re:46:20) [0]
  Live Value +FirstClassModules.+testConvert: 0 references () [0]
  Live Value +FirstClassModules.+firstClassModule: 0 references () [0]
  Live Value +FirstClassModules.M.+x: 1 references (FirstClassModules.re:2:2) [0]
  Live Value +FirstClassModules.M.+f: 1 references (FirstClassModules.re:4:2) [0]
  Live Value +FirstClassModules.M.Z.+u: 1 references (FirstClassModules.re:28:20) [0]
  Live Value +FirstClassModules.M.InnerModule3.+k3: 1 references (FirstClassModules.re:10:4) [0]
  Live Value +FirstClassModules.M.InnerModule2.+k: 1 references (FirstClassModules.re:7:24) [0]
  Live Value +FirstClassModules.M.+y: 1 references (FirstClassModules.re:14:2) [0]
  Dead Value FirstClassModulesInterface.+r: 0 references () [0]
  Dead RecordLabel FirstClassModulesInterface.record.y: 0 references () [0]
  Dead RecordLabel FirstClassModulesInterface.record.x: 0 references () [0]
  Live Value +Hooks.+aComponentWithChildren: 0 references () [0]
  Live Value +Hooks.RenderPropRequiresConversion.+unsafe_expr: 0 references () [0]
  Live Value +Hooks.RenderPropRequiresConversion.+car: 1 references (Hooks.re:150:30) [0]
  Live Value +Hooks.RenderPropRequiresConversion.+make: 0 references () [0]
  Live Value +Hooks.+functionReturningReactElement: 0 references () [0]
  Live Value +Hooks.+polymorphicComponent: 0 references () [0]
  Live Value +Hooks.+input: 0 references () [0]
  Live RecordLabel +Hooks.r.x: 1 references (Hooks.re:113:45) [0]
  Live Value +Hooks.+testForwardRef: 0 references () [0]
  Live Value +Hooks.+makeWithRef: 1 references (Hooks.re:105:4) [0]
  Live Value +Hooks.+componentWithRenamedArgs: 0 references () [0]
  Live Value +Hooks.+functionWithRenamedArgs: 0 references () [0]
  Live Value +Hooks.NoProps.+make: 0 references () [0]
  Live Value +Hooks.Inner.Inner2.+anotherComponent: 0 references () [0]
  Live Value +Hooks.Inner.Inner2.+make: 0 references () [0]
  Live Value +Hooks.Inner.+anotherComponent: 0 references () [0]
  Live Value +Hooks.Inner.+make: 0 references () [0]
  Live Value +Hooks.+anotherComponent: 0 references () [0]
  Live Value +Hooks.+default: 0 references () [0]
  Live Value +Hooks.+make: 1 references (Hooks.re:36:4) [0]
  Live RecordLabel +Hooks.vehicle.name: 13 references (Hooks.re:11:12, Hooks.re:42:41, Hooks.re:49:43, Hooks.re:54:43, Hooks.re:60:45, Hooks.re:65:45, Hooks.re:82:2, Hooks.re:82:14, Hooks.re:89:15, Hooks.re:89:27, Hooks.re:98:20, Hooks.re:130:58, Hooks.re:158:37) [0]
  Live Value +ImportIndex.+make: 0 references () [0]
  Dead Value +ImportMyBanner.+make: 0 references () [0]

  Warning Unused Argument
  File "./ImportMyBanner.re", line 8, characters 0-353
  optional argument message of function +make is never used
  Live Value +ImportMyBanner.+make: 0 references () [0]
  Dead RecordLabel +ImportMyBanner.message.text: 0 references () [0]
  Live Value +LetPrivate.+y: 0 references () [0]
  Live Value +LetPrivate.local_1.+x: 1 references (LetPrivate.re:5:4) [0]
  Live Value +ManyComponents.+make: 0 references () [1]
  Live Value +ManyComponents.+emptyArray: 1 references (ManyComponents.re:39:4) [0]
  Live Value +ManyComponents.+component: 1 references (ManyComponents.re:39:4) [0]
  Live Value +ManyComponents.ManyProps.+make: 0 references () [0]
  Live Value +ManyComponents.ManyProps.+component: 1 references (ManyComponents.re:19:6) [0]
  Live Value +ManyComponents.InnerComponent.+make: 1 references (ManyComponents.re:39:4) [0]
  Live Value +ManyComponents.InnerComponent.+component: 1 references (ManyComponents.re:9:6) [0]
  Dead Value +ManyComponents.InnerComponent.+someValueSoModuleOffsetsAreShifted: 0 references () [0]
  Live Value +ModuleAliases.+testInner2: 0 references () [0]
  Live Value +ModuleAliases.+testInner: 0 references () [0]
  Live Value +ModuleAliases.+testNested: 0 references () [0]
  Dead RecordLabel +ModuleAliases.Outer2.Inner2.InnerNested.t.nested: 0 references () [0]
  Dead RecordLabel +ModuleAliases.Outer.Inner.innerT.inner: 0 references () [0]
  Dead Value +ModuleAliases2.+q: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.Outer.Inner.inner.inner: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.Outer.outer.outer: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.record.y: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.record.x: 0 references () [0]
  Live Value +NestedModules.Universe.+someString: 0 references () [0]
  Dead VariantCase +NestedModules.Universe.variant.B: 0 references () [0]
  Dead VariantCase +NestedModules.Universe.variant.A: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.+nested2Function: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.Nested3.+nested3Function: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.Nested3.+nested3Value: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+w: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+z: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+y: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+x: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.+y: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.+nested2Value: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.+x: 0 references () [0]
  Dead Value +NestedModules.Universe.+notExported: 0 references () [0]
  Live Value +NestedModules.Universe.+theAnswer: 0 references () [0]
  Live Value +NestedModules.+notNested: 0 references () [0]
  Live Value NestedModulesInSignature.Universe.+theAnswer: 0 references () [0]
  Live Value +Newton.+result: 2 references (Newton.re:31:8, Newton.re:31:18) [0]
  Live Value +Newton.+fPrimed: 1 references (Newton.re:29:4) [0]
  Live Value +Newton.+f: 2 references (Newton.re:29:4, Newton.re:31:16) [0]
  Live Value +Newton.+newton: 1 references (Newton.re:29:4) [2]
  Live Value +Newton.+loop: 1 references (Newton.re:6:4) [1]
  Live Value +Newton.+next: 1 references (Newton.re:14:10) [0]
  Live Value +Newton.+previous: 2 references (Newton.re:14:10, Newton.re:16:8) [0]
  Live Value +Newton.+iterateMore: 1 references (Newton.re:14:10) [1]
  Live Value +Newton.+delta: 1 references (Newton.re:8:6) [0]
  Live Value +Newton.+current: 3 references (Newton.re:8:6, Newton.re:14:10, Newton.re:15:8) [0]
  Live Value +Newton.+/: 1 references (Newton.re:16:8) [0]
  Live Value +Newton.+*: 2 references (Newton.re:25:4, Newton.re:27:4) [0]
  Live Value +Newton.++: 1 references (Newton.re:25:4) [0]
  Live Value +Newton.+-: 4 references (Newton.re:9:8, Newton.re:16:8, Newton.re:25:4, Newton.re:27:4) [0]
  Live Value +Opaque.+testConvertNestedRecordFromOtherFile: 0 references () [0]
  Live Value +Opaque.+noConversion: 0 references () [0]
  Dead VariantCase +Opaque.opaqueFromRecords.A: 0 references () [0]
  Live Value +Records.+testMyRecBsAs2: 0 references () [0]
  Live Value +Records.+testMyRecBsAs: 0 references () [0]
  Live RecordLabel +Records.myRecBsAs.type_: 1 references (Records.re:167:38) [0]
  Live Value +Records.+testMyObj2: 0 references () [0]
  Live Value +Records.+testMyObj: 0 references () [0]
  Live Value +Records.+testMyRec2: 0 references () [0]
  Live Value +Records.+testMyRec: 0 references () [0]
  Live RecordLabel +Records.myRec.type_: 1 references (Records.re:149:30) [0]
  Live Value +Records.+computeArea4: 0 references () [0]
  Live Value +Records.+computeArea3: 0 references () [0]
  Live Value +Records.+someBusiness2: 0 references () [0]
  Live Value +Records.+findAddress2: 0 references () [0]
  Live RecordLabel +Records.business2.address2: 1 references (Records.re:93:2) [0]
  Dead RecordLabel +Records.business2.owner: 0 references () [0]
  Dead RecordLabel +Records.business2.name: 0 references () [0]
  Live Value +Records.+getPayloadRecordPlusOne: 0 references () [0]
  Live Value +Records.+payloadValue: 0 references () [0]
  Live Value +Records.+recordValue: 1 references (Records.re:76:4) [0]
  Live Value +Records.+getPayloadRecord: 0 references () [0]
  Dead RecordLabel +Records.record.w: 0 references () [0]
  Live RecordLabel +Records.record.v: 1 references (Records.re:81:5) [0]
  Live Value +Records.+getPayload: 0 references () [0]
  Live RecordLabel +Records.payload.payload: 3 references (Records.re:61:18, Records.re:70:24, Records.re:79:31) [0]
  Dead RecordLabel +Records.payload.num: 0 references () [0]
  Live Value +Records.+findAllAddresses: 0 references () [0]
  Live Value +Records.+someBusiness: 0 references () [0]
  Live Value +Records.+findAddress: 0 references () [0]
  Live Value +Records.+getOpt: 3 references (Records.re:37:4, Records.re:44:4, Records.re:92:4) [0]
  Live RecordLabel +Records.business.address: 2 references (Records.re:38:2, Records.re:47:6) [0]
  Live RecordLabel +Records.business.owner: 1 references (Records.re:48:8) [0]
  Dead RecordLabel +Records.business.name: 0 references () [0]
  Live RecordLabel +Records.person.address: 1 references (Records.re:48:40) [0]
  Dead RecordLabel +Records.person.age: 0 references () [0]
  Dead RecordLabel +Records.person.name: 0 references () [0]
  Live Value +Records.+coord2d: 0 references () [0]
  Live Value +Records.+computeArea: 0 references () [0]
  Live Value +Records.+origin: 0 references () [0]
  Live RecordLabel +Records.coord.z: 1 references (Records.re:14:19) [0]
  Live RecordLabel +Records.coord.y: 1 references (Records.re:14:19) [0]
  Live RecordLabel +Records.coord.x: 1 references (Records.re:14:19) [0]
  Live Value +References.+preserveRefIdentity: 0 references () [0]
  Live Value +References.+destroysRefIdentity: 0 references () [0]
  Dead RecordLabel +References.requiresConversion.x: 0 references () [0]
  Live Value +References.+set: 0 references () [0]
  Live Value +References.+make: 0 references () [0]
  Live Value +References.+get: 0 references () [0]
  Live Value +References.R.+set: 1 references (References.re:37:4) [1]
  Live Value +References.R.+set: 1 references (References.re:19:2) [0]
  Live Value +References.R.+make: 1 references (References.re:34:4) [1]
  Live Value +References.R.+make: 1 references (References.re:18:2) [0]
  Live Value +References.R.+get: 1 references (References.re:31:4) [1]
  Live Value +References.R.+get: 1 references (References.re:17:2) [0]
  Live Value +References.+update: 0 references () [0]
  Live Value +References.+access: 0 references () [0]
  Live Value +References.+create: 0 references () [0]
  Live Value +RepeatedLabel.+userData: 1 references (RepeatedLabel.re:14:7) [0]
  Dead RecordLabel +RepeatedLabel.tabState.f: 0 references () [0]
  Live RecordLabel +RepeatedLabel.tabState.b: 1 references (RepeatedLabel.re:12:16) [0]
  Live RecordLabel +RepeatedLabel.tabState.a: 1 references (RepeatedLabel.re:12:16) [0]
  Dead RecordLabel +RepeatedLabel.userData.b: 0 references () [0]
  Dead RecordLabel +RepeatedLabel.userData.a: 0 references () [0]
  Dead Value +RequireCond.+either: 0 references () [0]
  Dead Value +RequireCond.+make: 0 references () [0]
  Dead Value +Shadow.M.+test: 0 references () [0]
  Live Value +Shadow.M.+test: 0 references () [0]
  Live Value +Shadow.+test: 0 references () [0]
  Live Value +Shadow.+test: 0 references () [0]
  Live Value +TestEmitInnerModules.Outer.Medium.Inner.+y: 0 references () [0]
  Live Value +TestEmitInnerModules.Inner.+y: 0 references () [0]
  Live Value +TestEmitInnerModules.Inner.+x: 0 references () [0]
  Live Value +TestFirstClassModules.+convertFirstClassModuleWithTypeEquations: 0 references () [0]
  Live Value +TestFirstClassModules.+convertRecord: 0 references () [0]
  Live Value +TestFirstClassModules.+convertInterface: 0 references () [0]
  Live Value +TestFirstClassModules.+convert: 0 references () [0]
  Dead Value +TestImmutableArray.+testBeltArraySet: 0 references () [0]
  Dead Value +TestImmutableArray.+testBeltArrayGet: 0 references () [0]
  Live Value +TestImmutableArray.+testImmutableArrayGet: 0 references () [0]
  Live Value +TestImport.+defaultValue2: 0 references () [0]
  Dead Value +TestImport.+make: 0 references () [0]

  Warning Unused Argument
  File "./TestImport.re", line 30, characters 0-284
  optional argument message of function +make is never used
  Live Value +TestImport.+make: 0 references () [0]
  Dead RecordLabel +TestImport.message.text: 0 references () [0]
  Live Value +TestImport.+defaultValue: 0 references () [0]
  Live Value +TestImport.+valueStartingWithUpperCaseLetter: 0 references () [0]
  Dead Value +TestImport.+innerStuffContents: 0 references () [0]
  Live Value +TestImport.+innerStuffContentsAsEmptyObject: 0 references () [0]
  Live Value +TestImport.+innerStuffContents: 0 references () [0]
  Live Value +TestModuleAliases.+testInner2Expanded: 0 references () [0]
  Live Value +TestModuleAliases.+testInner2: 0 references () [0]
  Live Value +TestModuleAliases.+testInner1Expanded: 0 references () [0]
  Live Value +TestModuleAliases.+testInner1: 0 references () [0]
  Live Value +TestPromise.+convert: 0 references () [0]
  Dead RecordLabel +TestPromise.toPayload.result: 0 references () [0]
  Live RecordLabel +TestPromise.fromPayload.s: 1 references (TestPromise.re:14:32) [0]
  Dead RecordLabel +TestPromise.fromPayload.x: 0 references () [0]
  Live Value +TransitiveType1.+convertAlias: 0 references () [0]
  Live Value +TransitiveType1.+convert: 0 references () [0]
  Dead Value +TransitiveType2.+convertT2: 0 references () [0]
  Live Value +TransitiveType3.+convertT3: 0 references () [0]
  Dead RecordLabel +TransitiveType3.t3.s: 0 references () [0]
  Dead RecordLabel +TransitiveType3.t3.i: 0 references () [0]
  Live Value +Tuples.+changeSecondAge: 0 references () [0]
  Live Value +Tuples.+marry: 0 references () [0]
  Live Value +Tuples.+getFirstName: 0 references () [0]
  Live RecordLabel +Tuples.person.age: 1 references (Tuples.re:47:19) [0]
  Live RecordLabel +Tuples.person.name: 1 references (Tuples.re:39:49) [0]
  Live Value +Tuples.+coord2d: 0 references () [0]
  Live Value +Tuples.+computeAreaNoConverters: 0 references () [0]
  Live Value +Tuples.+computeAreaWithIdent: 0 references () [0]
  Live Value +Tuples.+computeArea: 0 references () [0]
  Live Value +Tuples.+origin: 0 references () [0]
  Live Value +Tuples.+testTuple: 0 references () [0]
  Dead Value +TypeParams1.+exportSomething: 0 references () [0]
  Dead Value +TypeParams2.+exportSomething: 0 references () [0]
  Dead RecordLabel +TypeParams2.item.id: 0 references () [0]
  Live Value +TypeParams3.+test2: 0 references () [0]
  Live Value +TypeParams3.+test: 0 references () [0]
  Dead Value +Types.ObjectId.+x: 0 references () [0]
  Live Value +Types.+optFunction: 0 references () [0]
  Live Value +Types.+i64Const: 0 references () [0]
  Live Value +Types.+currentTime: 0 references () [0]
  Live Value +Types.+testInstantiateTypeParameter: 0 references () [0]
  Dead RecordLabel +Types.someRecord.id: 0 references () [0]
  Live Value +Types.+setMatch: 0 references () [0]
  Live Value +Types.+testMarshalFields: 0 references () [1]
  Live Value +Types.+unsafe_expr: 1 references (Types.re:118:4) [0]
  Live Value +Types.+testConvertNull: 0 references () [0]
  Dead RecordLabel +Types.record.s: 0 references () [0]
  Dead RecordLabel +Types.record.i: 0 references () [0]
  Live Value +Types.+jsonStringify: 0 references () [0]
  Live Value +Types.+jsString2T: 0 references () [0]
  Live Value +Types.+jsStringT: 0 references () [0]
  Live Value +Types.+stringT: 0 references () [0]
  Dead VariantCase +Types.opaqueVariant.B: 0 references () [0]
  Dead VariantCase +Types.opaqueVariant.A: 0 references () [0]
  Live Value +Types.+testFunctionOnOptionsAsArgument: 0 references () [0]
  Live Value +Types.+mutuallyRecursiveConverter: 0 references () [0]
  Live Value +Types.+selfRecursiveConverter: 0 references () [0]
  Dead RecordLabel +Types.mutuallyRecursiveB.a: 0 references () [0]
  Live RecordLabel +Types.mutuallyRecursiveA.b: 1 references (Types.re:53:34) [0]
  Live RecordLabel +Types.selfRecursive.self: 1 references (Types.re:46:30) [0]
  Live Value +Types.+swap: 0 references () [1]
  Live Value +Types.+unsafe_expr: 1 references (Types.re:28:8) [0]
  Dead VariantCase +Types.typeWithVars.B: 0 references () [0]
  Dead VariantCase +Types.typeWithVars.A: 0 references () [0]
  Live Value +Types.+map: 0 references () [0]
  Live Value +Types.+someIntList: 0 references () [0]
  Live Value +Unboxed.+r2Test: 0 references () [0]
  Dead VariantCase +Unboxed.r2.B: 0 references () [0]
  Dead RecordLabel +Unboxed.r1.x: 0 references () [0]
  Live Value +Unboxed.+testV1: 0 references () [0]
  Dead VariantCase +Unboxed.v2.A: 0 references () [0]
  Dead VariantCase +Unboxed.v1.A: 0 references () [0]
  Live Value +Uncurried.+sumLblCurried: 0 references () [0]
  Live Value +Uncurried.+sumCurried: 0 references () [0]
  Live Value +Uncurried.+sumU2: 0 references () [0]
  Live Value +Uncurried.+sumU: 0 references () [0]
  Live Value +Uncurried.+callback2U: 0 references () [0]
  Live Value +Uncurried.+callback2: 0 references () [0]
  Live RecordLabel +Uncurried.authU.loginU: 1 references (Uncurried.re:39:25) [0]
  Live RecordLabel +Uncurried.auth.login: 1 references (Uncurried.re:36:24) [0]
  Live Value +Uncurried.+callback: 0 references () [0]
  Live Value +Uncurried.+curried3: 0 references () [0]
  Live Value +Uncurried.+uncurried3: 0 references () [0]
  Live Value +Uncurried.+uncurried2: 0 references () [0]
  Live Value +Uncurried.+uncurried1: 0 references () [0]
  Live Value +Uncurried.+uncurried0: 0 references () [0]
  Live Value +UseImportJsValue.+useTypeImportedInOtherModule: 0 references () [0]
  Live Value +UseImportJsValue.+useGetProp: 0 references () [0]
  Live Value +Variants.+restResult3: 0 references () [0]
  Live Value +Variants.+restResult2: 0 references () [0]
  Live Value +Variants.+restResult1: 0 references () [0]
  Dead VariantCase +Variants.result1.Error: 0 references () [0]
  Dead VariantCase +Variants.result1.Ok: 0 references () [0]
  Live Value +Variants.+polyWithOpt: 0 references () [0]
  Dead VariantCase +Variants.type_.Type: 0 references () [0]
  Live Value +Variants.+id2: 0 references () [0]
  Live Value +Variants.+id1: 0 references () [0]
  Live Value +Variants.+testConvert2to3: 0 references () [0]
  Live Value +Variants.+testConvert3: 0 references () [0]
  Live Value +Variants.+testConvert2: 0 references () [0]
  Live Value +Variants.+fortytwoBAD: 0 references () [0]
  Live Value +Variants.+fortytwoOK: 0 references () [0]
  Live Value +Variants.+testConvert: 0 references () [0]
  Live Value +Variants.+swap: 0 references () [0]
  Live Value +Variants.+onlySunday: 0 references () [0]
  Live Value +Variants.+sunday: 0 references () [0]
  Live Value +Variants.+saturday: 0 references () [0]
  Live Value +Variants.+monday: 0 references () [0]
  Live Value +Variants.+isWeekend: 0 references () [0]
  Live Value +VariantsWithPayload.+testVariant1Object: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variant1Object.R: 0 references () [0]
  Live Value +VariantsWithPayload.+testVariant1Int: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variant1Int.R: 0 references () [0]
  Live Value +VariantsWithPayload.+printVariantWithPayloads: 0 references () [0]
  Live Value +VariantsWithPayload.+testVariantWithPayloads: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.E: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.D: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.C: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.B: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.A: 0 references () [0]
  Live Value +VariantsWithPayload.+testSimpleVariant: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.simpleVariant.C: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.simpleVariant.B: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.simpleVariant.A: 0 references () [0]
  Live Value +VariantsWithPayload.+printManyPayloads: 0 references () [0]
  Live Value +VariantsWithPayload.+testManyPayloads: 0 references () [0]
  Live Value +VariantsWithPayload.+printVariantWithPayload: 0 references () [0]
  Live Value +VariantsWithPayload.+testWithPayload: 0 references () [0]
  Live RecordLabel +VariantsWithPayload.payload.y: 2 references (VariantsWithPayload.re:27:59, VariantsWithPayload.re:46:53) [0]
  Live RecordLabel +VariantsWithPayload.payload.x: 2 references (VariantsWithPayload.re:27:42, VariantsWithPayload.re:46:36) [0]
  Dead Value +BsJson.+testBsJson2: 0 references () [0]
  Dead Value +BsJson.+testBsJson: 0 references () [0]
  Dead Value +Exn.+redundant4: 0 references () [0]
  Dead Value +Exn.+redundant3: 0 references () [0]
  Dead Value +Exn.+redundant2: 0 references () [0]
  Dead Value +Exn.+redundant: 0 references () [0]
  Dead Value +Exn.+genericRaiseIsNotSupported: 0 references () [0]
  Dead Value +Exn.+severalCases: 0 references () [0]
  Dead Value +Exn.+stringMake3: 0 references () [0]
  Dead Value +Exn.+stringMake2: 0 references () [0]
  Dead Value +Exn.+stringMake1: 0 references () [0]
  Dead Value +Exn.+foo: 0 references () [0]
  Dead Value +Exn.+bar: 0 references () [0]
  Dead Value +Exn.+raiseArrow: 0 references () [0]
  Dead Value +Exn.+raisePipe: 0 references () [0]
  Dead Value +Exn.+raiseAtAt: 0 references () [0]
  Dead Value +Exn.+genericHash: 0 references () [0]
  Dead Value +Exn.+specializedHash: 0 references () [0]
  Dead Value +Exn.StringHash.+hash: 0 references () [0]
  Dead Value +Exn.+tryChar: 0 references () [0]
  Dead Value +Exn.+id: 0 references () [0]
  Dead Value +Exn.+array: 0 references () [0]
  Dead Value +Exn.+indirectCall: 0 references () [0]
  Dead Value +Exn.+raiseInInternalLet: 0 references () [1]
  Dead Value +Exn.+a: 0 references () [0]
  Dead Value +Exn.+switchWithCatchAll: 0 references () [0]
  Dead Value +Exn.+reRaise: 0 references () [0]
  Dead Value +Exn.+parse_json_from_file: 0 references () [1]
  Dead Value +Exn.+in_chan: 0 references () [0]
  Live Exception +Exn.Error: 1 references (Exn.re:83:10) [0]
  Dead Value +Exn.+raise2Annotate3: 0 references () [0]
  Dead Value +Exn.+wrongCatch2: 0 references () [0]
  Live Exception +Exn.C: 1 references (Exn.re:60:31) [0]
  Dead Value +Exn.+wrongCatch: 0 references () [0]
  Dead Value +Exn.+sequencing: 0 references () [0]
  Dead Value +Exn.+twoRaises: 0 references () [0]
  Live Exception +Exn.B: 6 references (Exn.re:42:10, Exn.re:48:12, Exn.re:54:12, Exn.re:60:20, Exn.re:72:10, Exn.re:92:25) [0]
  Live Exception +Exn.A: 6 references (Exn.re:39:10, Exn.re:47:8, Exn.re:69:10, Exn.re:91:16, Exn.re:97:16, Exn.re:103:20) [0]
  Dead Value +Exn.+incompleteMatch: 0 references () [0]
  Dead Value +Exn.+z: 0 references () [0]
  Dead Value +Exn.+callsRaiseWithAnnotationAndIsAnnotated: 0 references () [0]
  Dead Value +Exn.+callsRaiseWithAnnotation: 0 references () [0]
  Live Value +Exn.+raisesWithAnnotaion: 2 references (Exn.re:22:4, Exn.re:25:4) [0]
  Dead Value +Exn.+raiseAndCatch: 0 references () [0]
  Dead Value +Exn.+catches2: 0 references () [0]
  Dead Value +Exn.+catches1: 0 references () [0]
  Dead Value +Exn.+raises: 0 references () [0]
  Dead Value +ExnA.+bar: 0 references () [0]
  Dead Value +TestYojson.+toInt: 0 references () [0]
  Dead Value +TestYojson.+toString: 0 references () [0]
  Dead Value +TestYojson.+bar: 0 references () [0]
  Dead Value +TestYojson.+foo: 0 references () [0]
  Live Value +BootloaderResource.+read: 1 references (DeadTest.re:112:40) [0]
  Live Value +DeadExn.+eInside: 1 references (DeadExn.re:12:7) [0]
  Dead Value +DeadExn.+eToplevel: 0 references () [0]
  Dead Exception +DeadExn.DeadE: 0 references () [0]
  Live Exception +DeadExn.Inside.Einside: 1 references (DeadExn.re:10:14) [0]
  Live Exception +DeadExn.Etoplevel: 1 references (DeadExn.re:8:16) [0]
  Dead Value +DeadTypeTest.+_: 0 references () [0]
  Dead Value +DeadTypeTest.+_: 0 references () [0]
  Dead VariantCase +DeadTypeTest.deadType.InNeither: 0 references () [0]
  Live VariantCase +DeadTypeTest.deadType.OnlyInInterface: 1 references (DeadTypeTest.rei:8:4) [0]
  Dead Value +DeadTypeTest.+a: 0 references () [0]
  Dead VariantCase +DeadTypeTest.t.B: 0 references () [0]
  Dead Value DeadValueTest.+valueDead: 0 references () [0]
  Live Value DeadValueTest.+valueAlive: 1 references (DeadTest.re:77:16) [0]
  Live Value +ExportWithRename.+make: 0 references () [1]
  Live Value +DynamicallyLoadedComponent.+make: 3 references (DeadTest.re:112:40, DeadTest.re:157:17, ExportWithRename.re:3:4) [0]
  Dead Value ErrorHandler.+x: 0 references () [0]
  Live Value ErrorHandler.Make.+notify: 1 references (CreateErrorHandler1.re:8:0) [0]
  Dead Value +FirstClassModulesInterface.+r: 0 references () [0]
  Dead RecordLabel +FirstClassModulesInterface.record.y: 0 references () [0]
  Dead RecordLabel +FirstClassModulesInterface.record.x: 0 references () [0]
  Dead Value ImmutableArray.+eq: 0 references () [0]
  Dead Value ImmutableArray.+eqU: 0 references () [0]
  Dead Value ImmutableArray.+cmp: 0 references () [0]
  Dead Value ImmutableArray.+cmpU: 0 references () [0]
  Dead Value ImmutableArray.+some2: 0 references () [0]
  Dead Value ImmutableArray.+some2U: 0 references () [0]
  Dead Value ImmutableArray.+every2: 0 references () [0]
  Dead Value ImmutableArray.+every2U: 0 references () [0]
  Dead Value ImmutableArray.+every: 0 references () [0]
  Dead Value ImmutableArray.+everyU: 0 references () [0]
  Dead Value ImmutableArray.+some: 0 references () [0]
  Dead Value ImmutableArray.+someU: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverse2: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverse2U: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverse: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverseU: 0 references () [0]
  Dead Value ImmutableArray.+reduce: 0 references () [0]
  Dead Value ImmutableArray.+reduceU: 0 references () [0]
  Dead Value ImmutableArray.+partition: 0 references () [0]
  Dead Value ImmutableArray.+partitionU: 0 references () [0]
  Dead Value ImmutableArray.+mapWithIndex: 0 references () [0]
  Dead Value ImmutableArray.+mapWithIndexU: 0 references () [0]
  Dead Value ImmutableArray.+forEachWithIndex: 0 references () [0]
  Dead Value ImmutableArray.+forEachWithIndexU: 0 references () [0]
  Dead Value ImmutableArray.+keepMap: 0 references () [0]
  Dead Value ImmutableArray.+keepMapU: 0 references () [0]
  Dead Value ImmutableArray.+keepWithIndex: 0 references () [0]
  Dead Value ImmutableArray.+keepWithIndexU: 0 references () [0]
  Dead Value ImmutableArray.+map: 0 references () [0]
  Dead Value ImmutableArray.+mapU: 0 references () [0]
  Dead Value ImmutableArray.+forEach: 0 references () [0]
  Dead Value ImmutableArray.+forEachU: 0 references () [0]
  Dead Value ImmutableArray.+copy: 0 references () [0]
  Dead Value ImmutableArray.+sliceToEnd: 0 references () [0]
  Dead Value ImmutableArray.+slice: 0 references () [0]
  Dead Value ImmutableArray.+concatMany: 0 references () [0]
  Dead Value ImmutableArray.+concat: 0 references () [0]
  Dead Value ImmutableArray.+unzip: 0 references () [0]
  Dead Value ImmutableArray.+zipBy: 0 references () [0]
  Dead Value ImmutableArray.+zipByU: 0 references () [0]
  Dead Value ImmutableArray.+zip: 0 references () [0]
  Dead Value ImmutableArray.+makeByAndShuffle: 0 references () [0]
  Dead Value ImmutableArray.+makeByAndShuffleU: 0 references () [0]
  Dead Value ImmutableArray.+makeBy: 0 references () [0]
  Dead Value ImmutableArray.+makeByU: 0 references () [0]
  Dead Value ImmutableArray.+rangeBy: 0 references () [0]
  Dead Value ImmutableArray.+range: 0 references () [0]
  Dead Value ImmutableArray.+make: 0 references () [0]
  Dead Value ImmutableArray.+makeUninitializedUnsafe: 0 references () [0]
  Dead Value ImmutableArray.+makeUninitialized: 0 references () [0]
  Dead Value ImmutableArray.+reverse: 0 references () [0]
  Dead Value ImmutableArray.+shuffle: 0 references () [0]
  Dead Value ImmutableArray.+getUndefined: 0 references () [0]
  Dead Value ImmutableArray.+getUnsafe: 0 references () [0]
  Dead Value ImmutableArray.+getExn: 0 references () [0]
  Dead Value ImmutableArray.+get: 0 references () [0]
  Dead Value ImmutableArray.+size: 0 references () [0]
  Dead Value ImmutableArray.+length: 0 references () [0]
  Dead Value ImmutableArray.+toArray: 0 references () [0]
  Live Value ImmutableArray.+fromArray: 1 references (DeadTest.re:1:15) [0]
  Live Value ImmutableArray.Array.+get: 1 references (TestImmutableArray.re:2:4) [0]
  Live Value +ImportHookDefault.+make2: 0 references () [0]
  Live Value +ImportHookDefault.+make: 1 references (Hooks.re:26:5) [0]
  Dead RecordLabel +ImportHookDefault.person.age: 0 references () [0]
  Dead RecordLabel +ImportHookDefault.person.name: 0 references () [0]
  Live Value +ImportHooks.+foo: 0 references () [0]
  Live Value +ImportHooks.+make: 1 references (Hooks.re:20:5) [0]
  Dead RecordLabel +ImportHooks.person.age: 0 references () [0]
  Dead RecordLabel +ImportHooks.person.name: 0 references () [0]
  Live Value +ImportJsValue.+default: 0 references () [0]
  Live Value +ImportJsValue.+polymorphic: 0 references () [0]
  Live Value +ImportJsValue.+convertVariant: 0 references () [0]
  Dead VariantCase +ImportJsValue.variant.S: 0 references () [0]
  Dead VariantCase +ImportJsValue.variant.I: 0 references () [0]
  Live Value +ImportJsValue.+returnedFromHigherOrder: 0 references () [0]
  Live Value +ImportJsValue.+higherOrder: 1 references (ImportJsValue.re:62:4) [0]
  Live Value +ImportJsValue.+useColor: 0 references () [0]
  Live Value +ImportJsValue.+useGetAbs: 0 references () [0]
  Live Value +ImportJsValue.+useGetProp: 0 references () [0]
  Live Value +ImportJsValue.AbsoluteValue.+getAbs: 1 references (ImportJsValue.re:48:4) [1]
  Live Value +ImportJsValue.AbsoluteValue.+getAbs: 1 references (ImportJsValue.re:38:6) [0]
  Live Value +ImportJsValue.AbsoluteValue.+getProp: 2 references (ImportJsValue.re:45:4, UseImportJsValue.re:2:4) [0]
  Live Value +ImportJsValue.+areaValue: 0 references () [0]
  Live Value +ImportJsValue.+roundedNumber: 0 references () [0]
  Live Value +ImportJsValue.+returnMixedArray: 0 references () [0]
  Live Value +ImportJsValue.+area: 1 references (ImportJsValue.re:28:4) [0]
  Dead RecordLabel +ImportJsValue.point.y: 0 references () [0]
  Dead RecordLabel +ImportJsValue.point.x: 0 references () [0]
  Live Value +ImportJsValue.+round: 1 references (ImportJsValue.re:25:4) [0]
  Live Value +JSResource.+jSResource: 2 references (DeadTest.re:112:40, DeadTest.re:119:6) [0]
  Live Value +NestedModulesInSignature.Universe.+theAnswer: 1 references (NestedModulesInSignature.rei:2:2) [0]

  Warning Unused Argument
  File "./OptArg.rei", line 2, characters 0-50
  optional argument x of function +bar is never used
  Live Value OptArg.+bar: 1 references (TestOptArg.re:1:7) [0]
  Dead Value OptArg.+foo: 0 references () [0]
  Dead Value +ExnB.+foo: 0 references () [0]
  Dead Value +Yojson.Basic.Util.+to_string: 0 references () [0]
  Dead Value +Yojson.Basic.Util.+to_int: 0 references () [0]
  Dead Value +Yojson.Basic.Util.+member: 0 references () [0]
  Live Exception +Yojson.Basic.Util.Type_error: 1 references (Yojson.re:14:23) [0]
  Dead Value +Yojson.Basic.+from_string: 0 references () [0]
  Live Exception +Yojson.Json_error: 1 references (Yojson.re:7:44) [0]
  Live Value trace.+infok: 1 references (DeadTest.re:175:0) [0]
  Live RecordLabel trace.pf.pf: 1 references (DeadTest.re:175:21) [0]
  Dead Value +DeadValueTest.+tail: 0 references () [0]
  Dead Value +DeadValueTest.+subList: 0 references () [0]
  Dead Value +DeadValueTest.+valueOnlyInImplementation: 0 references () [0]
  Dead Value +DeadValueTest.+valueDead: 0 references () [0]
  Live Value +DeadValueTest.+valueAlive: 1 references (DeadValueTest.rei:1:0) [0]
  Dead Value +ErrorHandler.+x: 0 references () [0]
  Live Value +ErrorHandler.Make.+notify: 1 references (ErrorHandler.rei:5:32) [0]
  Dead Value +ImmutableArray.+eq: 0 references () [0]
  Dead Value +ImmutableArray.+eqU: 0 references () [0]
  Dead Value +ImmutableArray.+cmp: 0 references () [0]
  Dead Value +ImmutableArray.+cmpU: 0 references () [0]
  Dead Value +ImmutableArray.+some2: 0 references () [0]
  Dead Value +ImmutableArray.+some2U: 0 references () [0]
  Dead Value +ImmutableArray.+every2: 0 references () [0]
  Dead Value +ImmutableArray.+every2U: 0 references () [0]
  Dead Value +ImmutableArray.+every: 0 references () [0]
  Dead Value +ImmutableArray.+everyU: 0 references () [0]
  Dead Value +ImmutableArray.+some: 0 references () [0]
  Dead Value +ImmutableArray.+someU: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverse2: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverse2U: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverse: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverseU: 0 references () [0]
  Dead Value +ImmutableArray.+reduce: 0 references () [0]
  Dead Value +ImmutableArray.+reduceU: 0 references () [0]
  Dead Value +ImmutableArray.+partition: 0 references () [0]
  Dead Value +ImmutableArray.+partitionU: 0 references () [0]
  Dead Value +ImmutableArray.+mapWithIndex: 0 references () [0]
  Dead Value +ImmutableArray.+mapWithIndexU: 0 references () [0]
  Dead Value +ImmutableArray.+forEachWithIndex: 0 references () [0]
  Dead Value +ImmutableArray.+forEachWithIndexU: 0 references () [0]
  Dead Value +ImmutableArray.+keepMap: 0 references () [0]
  Dead Value +ImmutableArray.+keepMapU: 0 references () [0]
  Dead Value +ImmutableArray.+keepWithIndex: 0 references () [0]
  Dead Value +ImmutableArray.+keepWithIndexU: 0 references () [0]
  Dead Value +ImmutableArray.+map: 0 references () [0]
  Dead Value +ImmutableArray.+mapU: 0 references () [0]
  Dead Value +ImmutableArray.+forEach: 0 references () [0]
  Dead Value +ImmutableArray.+forEachU: 0 references () [0]
  Dead Value +ImmutableArray.+copy: 0 references () [0]
  Dead Value +ImmutableArray.+sliceToEnd: 0 references () [0]
  Dead Value +ImmutableArray.+slice: 0 references () [0]
  Dead Value +ImmutableArray.+concatMany: 0 references () [0]
  Dead Value +ImmutableArray.+concat: 0 references () [0]
  Dead Value +ImmutableArray.+unzip: 0 references () [0]
  Dead Value +ImmutableArray.+zipBy: 0 references () [0]
  Dead Value +ImmutableArray.+zipByU: 0 references () [0]
  Dead Value +ImmutableArray.+zip: 0 references () [0]
  Dead Value +ImmutableArray.+makeByAndShuffle: 0 references () [0]
  Dead Value +ImmutableArray.+makeByAndShuffleU: 0 references () [0]
  Dead Value +ImmutableArray.+makeBy: 0 references () [0]
  Dead Value +ImmutableArray.+makeByU: 0 references () [0]
  Dead Value +ImmutableArray.+rangeBy: 0 references () [0]
  Dead Value +ImmutableArray.+range: 0 references () [0]
  Dead Value +ImmutableArray.+make: 0 references () [0]
  Dead Value +ImmutableArray.+makeUninitializedUnsafe: 0 references () [0]
  Dead Value +ImmutableArray.+makeUninitialized: 0 references () [0]
  Dead Value +ImmutableArray.+reverse: 0 references () [0]
  Dead Value +ImmutableArray.+shuffle: 0 references () [0]
  Dead Value +ImmutableArray.+getUndefined: 0 references () [0]
  Dead Value +ImmutableArray.+getUnsafe: 0 references () [0]
  Dead Value +ImmutableArray.+getExn: 0 references () [0]
  Live Value +ImmutableArray.+get: 1 references (ImmutableArray.rei:5:15) [0]
  Dead Value +ImmutableArray.+size: 0 references () [0]
  Dead Value +ImmutableArray.+length: 0 references () [0]
  Dead Value +ImmutableArray.+toArray: 0 references () [0]
  Live Value +ImmutableArray.+fromArray: 1 references (ImmutableArray.rei:7:0) [0]
  Dead Value +ImmutableArray.+toT2: 0 references () [0]
  Dead Value +ImmutableArray.+toTp: 0 references () [0]
  Live Value +ImmutableArray.+toT: 1 references (ImmutableArray.re:14:6) [0]
  Dead Value +ImmutableArray.+fromTT: 0 references () [0]
  Dead Value +ImmutableArray.+fromTp: 0 references () [0]
  Live Value +ImmutableArray.+fromT: 1 references (ImmutableArray.re:24:6) [0]

  Warning Unused Argument
  File "./OptArg.re", line 3, characters 0-38
  optional argument x of function +bar is never used
  Live Value +OptArg.+bar: 2 references (OptArg.re:7:7, OptArg.rei:2:0) [0]

  Warning Unused Argument
  File "./OptArg.re", line 1, characters 0-48
  optional argument y of function +foo is never used

  Warning Unused Argument
  File "./OptArg.re", line 1, characters 0-48
  optional argument z of function +foo is never used
  Live Value +OptArg.+foo: 1 references (OptArg.re:5:7) [0]
  Live Value +trace.+infok: 1 references (trace.mli:5:0) [0]
  Live RecordLabel +trace.pf.pf: 1 references (trace.mli:3:11) [0]

  Warning Dead Module
  File "./AutoAnnotate.re", line 0, characters 0-0
  +AutoAnnotate is a dead module as all its items are dead.

  Warning Dead Type
  File "./AutoAnnotate.re", line 2, characters 4-10
  variant.R is a variant case which is never constructed
  <-- line 2
    | [@dead "variant.R"] R(int);

  Warning Dead Type
  File "./AutoAnnotate.re", line 5, characters 15-22
  record.variant is a record label never used to read a value
  <-- line 5
  type record = {[@dead "record.variant"] variant};

  Warning Dead Type
  File "./AutoAnnotate.re", line 7, characters 11-18
  r2.r2 is a record label never used to read a value
  <-- line 7
  type r2 = {[@dead "r2.r2"] r2: int};

  Warning Dead Type
  File "./AutoAnnotate.re", line 9, characters 11-18
  r3.r3 is a record label never used to read a value
  <-- line 9
  type r3 = {[@dead "r3.r3"] r3: int};

  Warning Dead Type
  File "./AutoAnnotate.re", line 11, characters 11-18
  r4.r4 is a record label never used to read a value
  <-- line 11
  type r4 = {[@dead "r4.r4"] r4: int};

  Warning Dead Type
  File "./AutoAnnotate.re", line 15, characters 4-14
  annotatedVariant.R2 is a variant case which is never constructed
  <-- line 15
    | [@dead "annotatedVariant.R2"] R2(r2, r3)

  Warning Dead Type
  File "./AutoAnnotate.re", line 16, characters 4-10
  annotatedVariant.R4 is a variant case which is never constructed
  <-- line 16
    | [@dead "annotatedVariant.R4"] R4(r4);

  Warning Dead Module
  File "./BucklescriptAnnotations.re", line 0, characters 0-0
  +BucklescriptAnnotations is a dead module as all its items are dead.

  Warning Dead Value
  File "./BucklescriptAnnotations.re", line 19, characters 0-53
  +foo is never used
  <-- line 19
  [@dead "+foo"] let foo = (x: someMethods) => x##threeargs(3, "a", 4);

  Warning Dead Value
  File "./BucklescriptAnnotations.re", line 21, characters 0-70
  +bar is never used
  <-- line 21
  [@dead "+bar"] let bar = (x: someMethods) => {

  Warning Dead Module
  File "./DeadExn.re", line 0, characters 0-0
   is a dead module as all its items are dead.

  Warning Dead Exception
  File "./DeadExn.re", line 7, characters 0-15
  DeadE is never raised or passed as value
  <-- line 7
  [@dead "DeadE"] exception DeadE;

  Warning Dead Module
  File "./DeadExn.re", line 0, characters 0-0
  +DeadExn is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadExn.re", line 8, characters 0-25
  +eToplevel is never used
  <-- line 8
  [@dead "+eToplevel"] let eToplevel = Etoplevel;

  Warning Dead Module
  File "./DeadMl.ml", line 1, characters 0-120
  +DeadMl.QQ is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 3, characters 4-93
  QQ.+thisSpansSeveralLines is never used
  <-- line 3
            x + y : int -> int -> int) [@@dead "QQ.+thisSpansSeveralLines"] 

  Warning Dead Module
  File "./DeadMl.ml", line 8, characters 0-103
  +DeadMl.AA is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 9, characters 2-40
  AA.+thisIsInInterface is never used
  <-- line 9
      int -> int [@@dead "AA.+thisIsInInterface"] 

  Warning Dead Value
  File "./DeadMl.ml", line 12, characters 2-29
  AA.+thisIsInInterface is never used
  <-- line 12
    let thisIsInInterface x = x [@@dead "AA.+thisIsInInterface"] 

  Warning Dead Module
  File "./DeadMl.ml", line 0, characters 0-0
  +DeadMl is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 15, characters 0-25
  +thisHasSemicolons is never used
  <-- line 15
  let thisHasSemicolons = 3 [@@dead "+thisHasSemicolons"] ;;

  Warning Dead Type
  File "./DeadMl.ml", line 17, characters 18-25
  thisIsDead.DeadA is a variant case which is never constructed
  <-- line 17
  type thisIsDead = | DeadA [@dead "thisIsDead.DeadA"]  | DeadB

  Warning Dead Type
  File "./DeadMl.ml", line 17, characters 26-33
  thisIsDead.DeadB is a variant case which is never constructed
  <-- line 17
  type thisIsDead = | DeadA [@dead "thisIsDead.DeadA"]  | DeadB [@dead "thisIsDead.DeadB"] 

  Warning Dead Module
  File "./DeadMl.ml", line 25, characters 0-256
  +DeadMl.Bs_version is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 26, characters 6-26
  Bs_version.+version is never used
  <-- line 26
    sig val version : string [@@dead "Bs_version.+version"]  val header : string val package_name : string end 

  Warning Dead Value
  File "./DeadMl.ml", line 26, characters 27-46
  Bs_version.+header is never used
  <-- line 26
    sig val version : string [@@dead "Bs_version.+version"]  val header : string [@@dead "Bs_version.+header"]  val package_name : string end 

  Warning Dead Value
  File "./DeadMl.ml", line 26, characters 47-72
  Bs_version.+package_name is never used
  <-- line 26
    sig val version : string [@@dead "Bs_version.+version"]  val header : string [@@dead "Bs_version.+header"]  val package_name : string [@@dead "Bs_version.+package_name"]  end 

  Warning Dead Value
  File "./DeadMl.ml", line 29, characters 4-31
  Bs_version.+version is never used
  <-- line 29
      let version = "7.2.0-dev.4" [@@dead "Bs_version.+version"] 

  Warning Dead Value
  File "./DeadMl.ml", line 30, characters 4-70
  Bs_version.+header is never used
  <-- line 30
      let header = "// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE" [@@dead "Bs_version.+header"] 

  Warning Dead Value
  File "./DeadMl.ml", line 31, characters 4-36
  Bs_version.+package_name is never used
  <-- line 31
      let package_name = "bs-platform" [@@dead "Bs_version.+package_name"] 

  Warning Dead Type
  File "./DeadMl.ml", line 35, characters 2-137
  l.Lfunction is a variant case which is never constructed
  <-- line 35
                         } [@dead "l.Lfunction"] 

  Warning Dead Type
  File "./DeadMl.ml", line 41, characters 2-22
  module_info.module_name is a record label never used to read a value
  <-- line 41
    module_name: string; [@dead "module_info.module_name"] 

  Warning Dead Type
  File "./DeadMl.ml", line 42, characters 2-12
  module_info.case is a record label never used to read a value
  <-- line 42
    case: bool [@dead "module_info.case"] 

  Warning Dead Value
  File "./DeadMl.ml", line 45, characters 0-305
  +map_split_opt is never used
  <-- line 45
      (match d with Some d -> d::ds | None -> ds) [@@dead "+map_split_opt"] 

  Warning Dead Value
  File "./DeadMl.ml", line 56, characters 0-40
  +inline_threshold is never used
  <-- line 56
  let inline_threshold = Some (10. /. 8.); [@@dead "+inline_threshold"] 

  Warning Dead Module
  File "./DeadMl.ml", line 58, characters 0-267
  +DeadMl.Scope is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 59, characters 2-15
  Scope.+dead1 is never used
  <-- line 59
    let dead1 = 1 [@@dead "Scope.+dead1"] 

  Warning Dead Module
  File "./DeadMl.ml", line 61, characters 2-107
  +DeadMl.Scope.Inner1 is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 62, characters 4-22
  Scope.Inner1.+deadInner1 is never used
  <-- line 62
      let deadInner1 = 0 [@@dead "Scope.Inner1.+deadInner1"] 

  Warning Dead Value
  File "./DeadMl.ml", line 69, characters 2-15
  Scope.+dead2 is never used
  <-- line 69
    let dead2 = 2 [@@dead "Scope.+dead2"] 

  Warning Dead Value
  File "./DeadMl.ml", line 80, characters 0-13
  +dead4 is never used
  <-- line 80
  let dead4 = 4 [@@dead "+dead4"] 

  Warning Dead Value
  File "./DeadMl.ml", line 85, characters 0-13
  +dead5 is never used
  <-- line 85
  let dead5 = 5 [@@dead "+dead5"] 

  Warning Dead Value
  File "./DeadMl.ml", line 90, characters 0-37
  +dead7 is never used
  <-- line 90
  [@@ocaml.warning "-30"] [@@dead "+dead7"] 

  Warning Dead Module
  File "./DeadMl.ml", line 93, characters 0-238
  +DeadMl.WithSignature is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 94, characters 2-16
  WithSignature.+dead8 is never used
  <-- line 94
    val dead8: int [@@dead "WithSignature.+dead8"] 

  Warning Dead Value
  File "./DeadMl.ml", line 99, characters 2-17
  WithSignature.+dead10 is never used
  <-- line 99
    val dead10: int [@@dead "WithSignature.+dead10"] 

  Warning Dead Value
  File "./DeadMl.ml", line 106, characters 2-15
  WithSignature.+dead8 is never used
  <-- line 106
    let dead8 = 8 [@@dead "WithSignature.+dead8"] 

  Warning Dead Value
  File "./DeadMl.ml", line 108, characters 2-17
  WithSignature.+dead10 is never used
  <-- line 108
    let dead10 = 10 [@@dead "WithSignature.+dead10"] 

  Warning Dead Module
  File "./DeadRT.re", line 0, characters 0-0
  +DeadRT is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadRT.re", line 5, characters 0-118
  +emitModuleAccessPath is never used
  <-- line 5
  [@dead "+emitModuleAccessPath"] let rec emitModuleAccessPath = moduleAccessPath =>

  Warning Dead Module
  File "./DeadTest.re", line 0, characters 0-0
  +DeadTest is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.re", line 2, characters 0-17
  +fortytwo is never used
  <-- line 2
  [@dead "+fortytwo"] let fortytwo = 42;

  Warning Dead Module
  File "./DeadTest.re", line 27, characters 0-101
  +DeadTest.M is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.re", line 31, characters 2-34
  M.+thisSignatureItemIsDead is never used
  <-- line 31
    [@dead "M.+thisSignatureItemIsDead"] let thisSignatureItemIsDead = 34;

  Warning Dead Module
  File "./DeadTest.re", line 61, characters 0-123
  +DeadTest.MM is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.re", line 63, characters 2-12
  MM.+y is never used
  <-- line 63
    [@dead "MM.+y"] let y: int;

  Warning Dead Value
  File "./DeadTest.re", line 69, characters 2-35
  MM.+valueOnlyInImplementation is never used
  <-- line 69
    [@dead "MM.+valueOnlyInImplementation"] let valueOnlyInImplementation = 7;

  Warning Dead Value
  File "./DeadTest.re", line 79, characters 0-37
  +unusedRec is never used
  <-- line 79
  [@dead "+unusedRec"] let rec unusedRec = () => unusedRec();

  Warning Dead Value
  File "./DeadTest.re", line 81, characters 0-58
  +split_map is never used
  <-- line 81
  [@dead "+split_map"] let rec split_map = l => {

  Warning Dead Value
  File "./DeadTest.re", line 86, characters 0-27
  +rec1 is never used
  <-- line 86
  [@dead "+rec1"] let rec rec1 = () => rec2()

  Warning Dead Value
  File "./DeadTest.re", line 87, characters 0-23
  +rec2 is never used
  <-- line 87
  [@dead "+rec2"] and rec2 = () => rec1();

  Warning Dead Value
  File "./DeadTest.re", line 89, characters 0-79
  +recWithCallback is never used
  <-- line 89
  [@dead "+recWithCallback"] let rec recWithCallback = () => {

  Warning Dead Value
  File "./DeadTest.re", line 94, characters 0-55
  +foo is never used
  <-- line 94
  [@dead "+foo"] let rec foo = () => {

  Warning Dead Value
  File "./DeadTest.re", line 98, characters 0-21
  +bar is never used
  <-- line 98
  [@dead "+bar"] and bar = () => foo();

  Warning Dead Value
  File "./DeadTest.re", line 100, characters 0-71
  +withDefaultValue is never used
  <-- line 100
  [@dead "+withDefaultValue"] let withDefaultValue = (~paramWithDefault=3, y) => paramWithDefault + y;

  Warning Dead Value
  File "./DeadTest.re", line 102, characters 0-74
  +unsafe_string1 is never used
  <-- line 102
  [@dead "+unsafe_string1"] external unsafe_string1: (bytes, int, int) => Digest.t = "caml_md5_string";

  Warning Dead Module
  File "./DeadTest.re", line 104, characters 0-184
  +DeadTest.Ext_buffer is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.re", line 105, characters 2-76
  Ext_buffer.+unsafe_string2 is never used
  <-- line 105
    [@dead "Ext_buffer.+unsafe_string2"] external unsafe_string2: (bytes, int, int) => Digest.t = "caml_md5_string";

  Warning Dead Value
  File "./DeadTest.re", line 107, characters 2-76
  Ext_buffer.+unsafe_string2 is never used
  <-- line 107
    [@dead "Ext_buffer.+unsafe_string2"] external unsafe_string2: (bytes, int, int) => Digest.t = "caml_md5_string";

  Warning Dead Module
  File "./DeadTest.re", line 118, characters 0-410
  +DeadTest.LazyDynamicallyLoadedComponent2 is a dead module as all its items are dead.

  Warning Dead Value With Side Effects
  File "./DeadTest.re", line 119, characters 2-136
  LazyDynamicallyLoadedComponent2.+reasonResource is never used and could have side effects

  Warning Dead Value
  File "./DeadTest.re", line 121, characters 2-54
  LazyDynamicallyLoadedComponent2.+makeProps is never used
  <-- line 121
    [@dead "LazyDynamicallyLoadedComponent2.+makeProps"] let makeProps = DynamicallyLoadedComponent.makeProps;

  Warning Dead Value
  File "./DeadTest.re", line 122, characters 2-170
  LazyDynamicallyLoadedComponent2.+make is never used
  <-- line 122
    [@dead "LazyDynamicallyLoadedComponent2.+make"] let make = props =>

  Warning Dead Value
  File "./DeadTest.re", line 134, characters 0-62
  +cmp2 is never used
  <-- line 134
  [@dead "+cmp2"] let cmp2 = () => <LazyDynamicallyLoadedComponent2 s="hello" />;

  Warning Dead Value
  File "./DeadTest.re", line 150, characters 0-61
  +zzz is never used
  <-- line 150
  [@dead "+zzz"] let zzz = {

  Warning Dead Value
  File "./DeadTest.re", line 159, characters 0-15
  +second is never used
  <-- line 159
  [@dead "+second"] let second = 1L;

  Warning Dead Value
  File "./DeadTest.re", line 160, characters 0-35
  +minute is never used
  <-- line 160
  [@dead "+minute"] let minute = Int64.mul(60L, second);

  Warning Dead Value
  File "./DeadTest.re", line 162, characters 0-21
  +deadRef is never used
  <-- line 162
  [@dead "+deadRef"] let deadRef = ref(12);

  Warning Dead Value
  File "./DeadTest.re", line 164, characters 0-37
  +makeSwitch is never used
  <-- line 164
  [@dead "+makeSwitch"] let makeSwitch = ComponentSwitch.make;

  Warning Dead Value With Side Effects
  File "./DeadTest.re", line 171, characters 0-40
  +theSideEffectIsLogging is never used and could have side effects

  Warning Dead Value
  File "./DeadTest.re", line 173, characters 0-54
  +stringLengthNoSideEffects is never used
  <-- line 173
  [@dead "+stringLengthNoSideEffects"] let stringLengthNoSideEffects = String.length("sdkdl");

  Warning Dead Module
  File "./DeadTestBlacklist.re", line 0, characters 0-0
  +DeadTestBlacklist is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTestBlacklist.re", line 1, characters 0-10
  +x is never used
  <-- line 1
  [@dead "+x"] let x = 34;

  Warning Dead Module
  File "./DeadTestWithInterface.re", line 1, characters 0-52
  +DeadTestWithInterface.Ext_buffer is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTestWithInterface.re", line 1, characters 20-30
  Ext_buffer.+x is never used
  <-- line 1
  module Ext_buffer: {[@dead "Ext_buffer.+x"] let x: int;} = {

  Warning Dead Value
  File "./DeadTestWithInterface.re", line 2, characters 2-12
  Ext_buffer.+x is never used
  <-- line 2
    [@dead "Ext_buffer.+x"] let x = 42;

  Warning Dead Module
  File "./DeadTypeTest.re", line 0, characters 0-0
  +DeadTypeTest is a dead module as all its items are dead.

  Warning Dead Type
  File "./DeadTypeTest.re", line 3, characters 4-5
  t.B is a variant case which is never constructed
  <-- line 3
    | [@dead "t.B"] B;

  Warning Dead Value
  File "./DeadTypeTest.re", line 4, characters 0-9
  +a is never used
  <-- line 4
  [@dead "+a"] let a = A;

  Warning Dead Type
  File "./DeadTypeTest.re", line 10, characters 4-13
  deadType.InNeither is a variant case which is never constructed
  <-- line 10
    | [@dead "deadType.InNeither"] InNeither;

  Warning Dead Module
  File "./DeadTypeTest.rei", line 0, characters 0-0
  DeadTypeTest is a dead module as all its items are dead.

  Warning Dead Type
  File "./DeadTypeTest.rei", line 3, characters 4-5
  t.B is a variant case which is never constructed
  <-- line 3
    | [@dead "t.B"] B;

  Warning Dead Value
  File "./DeadTypeTest.rei", line 4, characters 0-8
  +a is never used
  <-- line 4
  [@dead "+a"] let a: t;

  Warning Dead Type
  File "./DeadTypeTest.rei", line 10, characters 4-13
  deadType.InNeither is a variant case which is never constructed
  <-- line 10
    | [@dead "deadType.InNeither"] InNeither;

  Warning Dead Module
  File "./DeadValueTest.re", line 0, characters 0-0
  +DeadValueTest is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadValueTest.re", line 2, characters 0-17
  +valueDead is never used
  <-- line 2
  [@dead "+valueDead"] let valueDead = 2;

  Warning Dead Value
  File "./DeadValueTest.re", line 4, characters 0-33
  +valueOnlyInImplementation is never used
  <-- line 4
  [@dead "+valueOnlyInImplementation"] let valueOnlyInImplementation = 3;

  Warning Dead Value
  File "./DeadValueTest.re", line 6, characters 0-270
  +subList is never used
  <-- line 6
  [@dead "+subList"] let rec subList = (b, e, l) =>

  Warning Dead Module
  File "./DeadValueTest.rei", line 0, characters 0-0
  DeadValueTest is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadValueTest.rei", line 2, characters 0-18
  +valueDead is never used
  <-- line 2
  [@dead "+valueDead"] let valueDead: int;

  Warning Dead Module
  File "./Docstrings.re", line 0, characters 0-0
  +Docstrings is a dead module as all its items are dead.

  Warning Dead Type
  File "./Docstrings.re", line 62, characters 4-5
  t.B is a variant case which is never constructed
  <-- line 62
    | [@dead "t.B"] B;

  Warning Dead Module
  File "./ErrorHandler.re", line 0, characters 0-0
  +ErrorHandler is a dead module as all its items are dead.

  Warning Dead Value
  File "./ErrorHandler.re", line 11, characters 0-21
  +x is never used
  <-- line 12
  [@dead "+x"] [@genType]

  Warning Dead Module
  File "./ErrorHandler.rei", line 0, characters 0-0
  ErrorHandler is a dead module as all its items are dead.

  Warning Dead Value
  File "./ErrorHandler.rei", line 7, characters 0-10
  +x is never used
  <-- line 7
  [@dead "+x"] let x: int;

  Warning Dead Module
  File "./FirstClassModulesInterface.re", line 0, characters 0-0
  +FirstClassModulesInterface is a dead module as all its items are dead.

  Warning Dead Type
  File "./FirstClassModulesInterface.re", line 2, characters 2-8
  record.x is a record label never used to read a value
  <-- line 2
    [@dead "record.x"] x: int,

  Warning Dead Type
  File "./FirstClassModulesInterface.re", line 3, characters 2-11
  record.y is a record label never used to read a value
  <-- line 3
    [@dead "record.y"] y: string,

  Warning Dead Value
  File "./FirstClassModulesInterface.re", line 6, characters 0-26
  +r is never used
  <-- line 6
  [@dead "+r"] let r = {x: 3, y: "hello"};

  Warning Dead Module
  File "./FirstClassModulesInterface.rei", line 0, characters 0-0
  FirstClassModulesInterface is a dead module as all its items are dead.

  Warning Dead Type
  File "./FirstClassModulesInterface.rei", line 3, characters 2-8
  record.x is a record label never used to read a value
  <-- line 3
    [@dead "record.x"] x: int,

  Warning Dead Type
  File "./FirstClassModulesInterface.rei", line 4, characters 2-11
  record.y is a record label never used to read a value
  <-- line 4
    [@dead "record.y"] y: string,

  Warning Dead Value
  File "./FirstClassModulesInterface.rei", line 7, characters 0-13
  +r is never used
  <-- line 7
  [@dead "+r"] let r: record;

  Warning Dead Module
  File "./ImmutableArray.re", line 0, characters 0-0
  +ImmutableArray is a dead module as all its items are dead.

  Warning Dead Value
  File "./ImmutableArray.re", line 6, characters 2-63
  +fromTp is never used
  <-- line 6
    [@dead "+fromTp"] external fromTp: t(('a, 'b)) => array(('a, 'b)) = "%identity";

  Warning Dead Value
  File "./ImmutableArray.re", line 7, characters 2-61
  +fromTT is never used
  <-- line 7
    [@dead "+fromTT"] external fromTT: t(t('a)) => array(array('a)) = "%identity";

  Warning Dead Value
  File "./ImmutableArray.re", line 9, characters 2-61
  +toTp is never used
  <-- line 9
    [@dead "+toTp"] external toTp: array(('a, 'b)) => t(('a, 'b)) = "%identity";

  Warning Dead Value
  File "./ImmutableArray.re", line 10, characters 2-59
  +toT2 is never used
  <-- line 10
    [@dead "+toT2"] external toT2: array2('a) => (t('a), t('a)) = "%identity";

  Warning Dead Value
  File "./ImmutableArray.re", line 16, characters 2-41
  +toArray is never used
  <-- line 16
    [@dead "+toArray"] let toArray = a => Array.copy(a->fromT);

  Warning Dead Value
  File "./ImmutableArray.re", line 20, characters 2-42
  +length is never used
  <-- line 20
    [@dead "+length"] let length = a => Array.length(a->fromT);

  Warning Dead Value
  File "./ImmutableArray.re", line 22, characters 2-38
  +size is never used
  <-- line 22
    [@dead "+size"] let size = a => Array.size(a->fromT);

  Warning Dead Value
  File "./ImmutableArray.re", line 26, characters 2-50
  +getExn is never used
  <-- line 26
    [@dead "+getExn"] let getExn = (a, x) => Array.getExn(a->fromT, x);

  Warning Dead Value
  File "./ImmutableArray.re", line 28, characters 2-56
  +getUnsafe is never used
  <-- line 28
    [@dead "+getUnsafe"] let getUnsafe = (a, x) => Array.getUnsafe(a->fromT, x);

  Warning Dead Value
  File "./ImmutableArray.re", line 30, characters 2-62
  +getUndefined is never used
  <-- line 30
    [@dead "+getUndefined"] let getUndefined = (a, x) => Array.getUndefined(a->fromT, x);

  Warning Dead Value
  File "./ImmutableArray.re", line 32, characters 2-49
  +shuffle is never used
  <-- line 32
    [@dead "+shuffle"] let shuffle = x => Array.shuffle(x->fromT)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 34, characters 2-49
  +reverse is never used
  <-- line 34
    [@dead "+reverse"] let reverse = x => Array.reverse(x->fromT)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 36, characters 2-62
  +makeUninitialized is never used
  <-- line 36
    [@dead "+makeUninitialized"] let makeUninitialized = x => Array.makeUninitialized(x)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 38, characters 2-74
  +makeUninitializedUnsafe is never used
  <-- line 38
    [@dead "+makeUninitializedUnsafe"] let makeUninitializedUnsafe = x => Array.makeUninitializedUnsafe(x)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 40, characters 2-44
  +make is never used
  <-- line 40
    [@dead "+make"] let make = (x, y) => Array.make(x, y)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 42, characters 2-46
  +range is never used
  <-- line 42
    [@dead "+range"] let range = (x, y) => Array.range(x, y)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 44, characters 2-64
  +rangeBy is never used
  <-- line 44
    [@dead "+rangeBy"] let rangeBy = (x, y, ~step) => Array.rangeBy(x, y, ~step)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 46, characters 2-50
  +makeByU is never used
  <-- line 46
    [@dead "+makeByU"] let makeByU = (c, f) => Array.makeByU(c, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 47, characters 2-48
  +makeBy is never used
  <-- line 47
    [@dead "+makeBy"] let makeBy = (c, f) => Array.makeBy(c, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 49, characters 2-70
  +makeByAndShuffleU is never used
  <-- line 49
    [@dead "+makeByAndShuffleU"] let makeByAndShuffleU = (c, f) => Array.makeByAndShuffleU(c, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 50, characters 2-68
  +makeByAndShuffle is never used
  <-- line 50
    [@dead "+makeByAndShuffle"] let makeByAndShuffle = (c, f) => Array.makeByAndShuffle(c, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 52, characters 2-61
  +zip is never used
  <-- line 52
    [@dead "+zip"] let zip = (a1, a2) => Array.zip(fromT(a1), fromT(a2))->toTp;

  Warning Dead Value
  File "./ImmutableArray.re", line 54, characters 2-72
  +zipByU is never used
  <-- line 54
    [@dead "+zipByU"] let zipByU = (a1, a2, f) => Array.zipByU(fromT(a1), fromT(a2), f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 55, characters 2-70
  +zipBy is never used
  <-- line 55
    [@dead "+zipBy"] let zipBy = (a1, a2, f) => Array.zipBy(fromT(a1), fromT(a2), f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 57, characters 2-47
  +unzip is never used
  <-- line 57
    [@dead "+unzip"] let unzip = a => Array.unzip(a->fromTp)->toT2;

  Warning Dead Value
  File "./ImmutableArray.re", line 59, characters 2-66
  +concat is never used
  <-- line 59
    [@dead "+concat"] let concat = (a1, a2) => Array.concat(a1->fromT, a2->fromT)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 61, characters 2-67
  +concatMany is never used
  <-- line 61
    [@dead "+concatMany"] let concatMany = (a: t(t(_))) => Array.concatMany(a->fromTT)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 63, characters 2-81
  +slice is never used
  <-- line 63
    [@dead "+slice"] let slice = (a, ~offset, ~len) =>

  Warning Dead Value
  File "./ImmutableArray.re", line 66, characters 2-63
  +sliceToEnd is never used
  <-- line 66
    [@dead "+sliceToEnd"] let sliceToEnd = (a, b) => Array.sliceToEnd(a->fromT, b)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 68, characters 2-43
  +copy is never used
  <-- line 68
    [@dead "+copy"] let copy = a => Array.copy(a->fromT)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 70, characters 2-54
  +forEachU is never used
  <-- line 70
    [@dead "+forEachU"] let forEachU = (a, f) => Array.forEachU(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 71, characters 2-52
  +forEach is never used
  <-- line 71
    [@dead "+forEach"] let forEach = (a, f) => Array.forEach(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 73, characters 2-51
  +mapU is never used
  <-- line 73
    [@dead "+mapU"] let mapU = (a, f) => Array.mapU(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 74, characters 2-49
  +map is never used
  <-- line 74
    [@dead "+map"] let map = (a, f) => Array.map(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 76, characters 2-71
  +keepWithIndexU is never used
  <-- line 76
    [@dead "+keepWithIndexU"] let keepWithIndexU = (a, f) => Array.keepWithIndexU(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 77, characters 2-69
  +keepWithIndex is never used
  <-- line 77
    [@dead "+keepWithIndex"] let keepWithIndex = (a, f) => Array.keepWithIndex(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 79, characters 2-59
  +keepMapU is never used
  <-- line 79
    [@dead "+keepMapU"] let keepMapU = (a, f) => Array.keepMapU(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 80, characters 2-57
  +keepMap is never used
  <-- line 80
    [@dead "+keepMap"] let keepMap = (a, f) => Array.keepMap(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 82, characters 2-72
  +forEachWithIndexU is never used
  <-- line 82
    [@dead "+forEachWithIndexU"] let forEachWithIndexU = (a, f) => Array.forEachWithIndexU(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 83, characters 2-70
  +forEachWithIndex is never used
  <-- line 83
    [@dead "+forEachWithIndex"] let forEachWithIndex = (a, f) => Array.forEachWithIndex(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 85, characters 2-69
  +mapWithIndexU is never used
  <-- line 85
    [@dead "+mapWithIndexU"] let mapWithIndexU = (a, f) => Array.mapWithIndexU(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 86, characters 2-67
  +mapWithIndex is never used
  <-- line 86
    [@dead "+mapWithIndex"] let mapWithIndex = (a, f) => Array.mapWithIndex(a->fromT, f)->toT;

  Warning Dead Value
  File "./ImmutableArray.re", line 88, characters 2-64
  +partitionU is never used
  <-- line 88
    [@dead "+partitionU"] let partitionU = (a, f) => Array.partitionU(a->fromT, f)->toT2;

  Warning Dead Value
  File "./ImmutableArray.re", line 89, characters 2-62
  +partition is never used
  <-- line 89
    [@dead "+partition"] let partition = (a, f) => Array.partition(a->fromT, f)->toT2;

  Warning Dead Value
  File "./ImmutableArray.re", line 91, characters 2-58
  +reduceU is never used
  <-- line 91
    [@dead "+reduceU"] let reduceU = (a, b, f) => Array.reduceU(a->fromT, b, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 92, characters 2-56
  +reduce is never used
  <-- line 92
    [@dead "+reduce"] let reduce = (a, b, f) => Array.reduce(a->fromT, b, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 94, characters 2-72
  +reduceReverseU is never used
  <-- line 94
    [@dead "+reduceReverseU"] let reduceReverseU = (a, b, f) => Array.reduceReverseU(a->fromT, b, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 95, characters 2-70
  +reduceReverse is never used
  <-- line 95
    [@dead "+reduceReverse"] let reduceReverse = (a, b, f) => Array.reduceReverse(a->fromT, b, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 97, characters 2-95
  +reduceReverse2U is never used
  <-- line 97
    [@dead "+reduceReverse2U"] let reduceReverse2U = (a1, a2, c, f) =>

  Warning Dead Value
  File "./ImmutableArray.re", line 99, characters 2-93
  +reduceReverse2 is never used
  <-- line 99
    [@dead "+reduceReverse2"] let reduceReverse2 = (a1, a2, c, f) =>

  Warning Dead Value
  File "./ImmutableArray.re", line 102, characters 2-48
  +someU is never used
  <-- line 102
    [@dead "+someU"] let someU = (a, f) => Array.someU(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 103, characters 2-46
  +some is never used
  <-- line 103
    [@dead "+some"] let some = (a, f) => Array.some(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 105, characters 2-50
  +everyU is never used
  <-- line 105
    [@dead "+everyU"] let everyU = (a, f) => Array.everyU(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 106, characters 2-48
  +every is never used
  <-- line 106
    [@dead "+every"] let every = (a, f) => Array.every(a->fromT, f);

  Warning Dead Value
  File "./ImmutableArray.re", line 108, characters 2-69
  +every2U is never used
  <-- line 108
    [@dead "+every2U"] let every2U = (a1, a2, f) => Array.every2U(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 109, characters 2-67
  +every2 is never used
  <-- line 109
    [@dead "+every2"] let every2 = (a1, a2, f) => Array.every2(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 111, characters 2-67
  +some2U is never used
  <-- line 111
    [@dead "+some2U"] let some2U = (a1, a2, f) => Array.some2U(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 112, characters 2-65
  +some2 is never used
  <-- line 112
    [@dead "+some2"] let some2 = (a1, a2, f) => Array.some2(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 114, characters 2-63
  +cmpU is never used
  <-- line 114
    [@dead "+cmpU"] let cmpU = (a1, a2, f) => Array.cmpU(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 115, characters 2-61
  +cmp is never used
  <-- line 115
    [@dead "+cmp"] let cmp = (a1, a2, f) => Array.cmp(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 117, characters 2-61
  +eqU is never used
  <-- line 117
    [@dead "+eqU"] let eqU = (a1, a2, f) => Array.eqU(fromT(a1), fromT(a2), f);

  Warning Dead Value
  File "./ImmutableArray.re", line 118, characters 2-59
  +eq is never used
  <-- line 118
    [@dead "+eq"] let eq = (a1, a2, f) => Array.eq(fromT(a1), fromT(a2), f);

  Warning Dead Module
  File "./ImmutableArray.rei", line 0, characters 0-0
  ImmutableArray is a dead module as all its items are dead.

  Warning Dead Value
  File "./ImmutableArray.rei", line 10, characters 0-31
  +toArray is never used
  <-- line 10
  [@dead "+toArray"] let toArray: t('a) => array('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 12, characters 0-99
  +length is never used
  <-- line 12
  [@dead "+length"] /** Subset of the Belt.Array oprerations that do not mutate the array. */

  Warning Dead Value
  File "./ImmutableArray.rei", line 16, characters 0-22
  +size is never used
  <-- line 16
  [@dead "+size"] let size: t('a) => int;

  Warning Dead Value
  File "./ImmutableArray.rei", line 18, characters 0-35
  +get is never used
  <-- line 18
  [@dead "+get"] let get: (t('a), int) => option('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 20, characters 0-30
  +getExn is never used
  <-- line 20
  [@dead "+getExn"] let getExn: (t('a), int) => 'a;

  Warning Dead Value
  File "./ImmutableArray.rei", line 22, characters 0-33
  +getUnsafe is never used
  <-- line 22
  [@dead "+getUnsafe"] let getUnsafe: (t('a), int) => 'a;

  Warning Dead Value
  File "./ImmutableArray.rei", line 24, characters 0-50
  +getUndefined is never used
  <-- line 24
  [@dead "+getUndefined"] let getUndefined: (t('a), int) => Js.undefined('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 26, characters 0-27
  +shuffle is never used
  <-- line 26
  [@dead "+shuffle"] let shuffle: t('a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 28, characters 0-27
  +reverse is never used
  <-- line 28
  [@dead "+reverse"] let reverse: t('a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 30, characters 0-49
  +makeUninitialized is never used
  <-- line 30
  [@dead "+makeUninitialized"] let makeUninitialized: int => t(Js.undefined('a));

  Warning Dead Value
  File "./ImmutableArray.rei", line 32, characters 0-41
  +makeUninitializedUnsafe is never used
  <-- line 32
  [@dead "+makeUninitializedUnsafe"] let makeUninitializedUnsafe: int => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 34, characters 0-28
  +make is never used
  <-- line 34
  [@dead "+make"] let make: (int, 'a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 36, characters 0-31
  +range is never used
  <-- line 36
  [@dead "+range"] let range: (int, int) => t(int);

  Warning Dead Value
  File "./ImmutableArray.rei", line 38, characters 0-45
  +rangeBy is never used
  <-- line 38
  [@dead "+rangeBy"] let rangeBy: (int, int, ~step: int) => t(int);

  Warning Dead Value
  File "./ImmutableArray.rei", line 40, characters 0-42
  +makeByU is never used
  <-- line 40
  [@dead "+makeByU"] let makeByU: (int, (. int) => 'a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 41, characters 0-37
  +makeBy is never used
  <-- line 41
  [@dead "+makeBy"] let makeBy: (int, int => 'a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 43, characters 0-52
  +makeByAndShuffleU is never used
  <-- line 43
  [@dead "+makeByAndShuffleU"] let makeByAndShuffleU: (int, (. int) => 'a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 44, characters 0-47
  +makeByAndShuffle is never used
  <-- line 44
  [@dead "+makeByAndShuffle"] let makeByAndShuffle: (int, int => 'a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 46, characters 0-38
  +zip is never used
  <-- line 46
  [@dead "+zip"] let zip: (t('a), t('b)) => t(('a, 'b));

  Warning Dead Value
  File "./ImmutableArray.rei", line 48, characters 0-53
  +zipByU is never used
  <-- line 48
  [@dead "+zipByU"] let zipByU: (t('a), t('b), (. 'a, 'b) => 'c) => t('c);

  Warning Dead Value
  File "./ImmutableArray.rei", line 49, characters 0-50
  +zipBy is never used
  <-- line 49
  [@dead "+zipBy"] let zipBy: (t('a), t('b), ('a, 'b) => 'c) => t('c);

  Warning Dead Value
  File "./ImmutableArray.rei", line 51, characters 0-40
  +unzip is never used
  <-- line 51
  [@dead "+unzip"] let unzip: t(('a, 'a)) => (t('a), t('a));

  Warning Dead Value
  File "./ImmutableArray.rei", line 53, characters 0-35
  +concat is never used
  <-- line 53
  [@dead "+concat"] let concat: (t('a), t('a)) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 55, characters 0-33
  +concatMany is never used
  <-- line 55
  [@dead "+concatMany"] let concatMany: t(t('a)) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 57, characters 0-52
  +slice is never used
  <-- line 57
  [@dead "+slice"] let slice: (t('a), ~offset: int, ~len: int) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 59, characters 0-37
  +sliceToEnd is never used
  <-- line 59
  [@dead "+sliceToEnd"] let sliceToEnd: (t('a), int) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 61, characters 0-24
  +copy is never used
  <-- line 61
  [@dead "+copy"] let copy: t('a) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 63, characters 0-45
  +forEachU is never used
  <-- line 63
  [@dead "+forEachU"] let forEachU: (t('a), (. 'a) => unit) => unit;

  Warning Dead Value
  File "./ImmutableArray.rei", line 64, characters 0-40
  +forEach is never used
  <-- line 64
  [@dead "+forEach"] let forEach: (t('a), 'a => unit) => unit;

  Warning Dead Value
  File "./ImmutableArray.rei", line 66, characters 0-40
  +mapU is never used
  <-- line 66
  [@dead "+mapU"] let mapU: (t('a), (. 'a) => 'b) => t('b);

  Warning Dead Value
  File "./ImmutableArray.rei", line 67, characters 0-35
  +map is never used
  <-- line 67
  [@dead "+map"] let map: (t('a), 'a => 'b) => t('b);

  Warning Dead Value
  File "./ImmutableArray.rei", line 69, characters 0-57
  +keepWithIndexU is never used
  <-- line 69
  [@dead "+keepWithIndexU"] let keepWithIndexU: (t('a), (. 'a, int) => bool) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 70, characters 0-54
  +keepWithIndex is never used
  <-- line 70
  [@dead "+keepWithIndex"] let keepWithIndex: (t('a), ('a, int) => bool) => t('a);

  Warning Dead Value
  File "./ImmutableArray.rei", line 72, characters 0-52
  +keepMapU is never used
  <-- line 72
  [@dead "+keepMapU"] let keepMapU: (t('a), (. 'a) => option('b)) => t('b);

  Warning Dead Value
  File "./ImmutableArray.rei", line 73, characters 0-47
  +keepMap is never used
  <-- line 73
  [@dead "+keepMap"] let keepMap: (t('a), 'a => option('b)) => t('b);

  Warning Dead Value
  File "./ImmutableArray.rei", line 75, characters 0-59
  +forEachWithIndexU is never used
  <-- line 75
  [@dead "+forEachWithIndexU"] let forEachWithIndexU: (t('a), (. int, 'a) => unit) => unit;

  Warning Dead Value
  File "./ImmutableArray.rei", line 76, characters 0-56
  +forEachWithIndex is never used
  <-- line 76
  [@dead "+forEachWithIndex"] let forEachWithIndex: (t('a), (int, 'a) => unit) => unit;

  Warning Dead Value
  File "./ImmutableArray.rei", line 78, characters 0-54
  +mapWithIndexU is never used
  <-- line 78
  [@dead "+mapWithIndexU"] let mapWithIndexU: (t('a), (. int, 'a) => 'b) => t('b);

  Warning Dead Value
  File "./ImmutableArray.rei", line 79, characters 0-51
  +mapWithIndex is never used
  <-- line 79
  [@dead "+mapWithIndex"] let mapWithIndex: (t('a), (int, 'a) => 'b) => t('b);

  Warning Dead Value
  File "./ImmutableArray.rei", line 81, characters 0-57
  +partitionU is never used
  <-- line 81
  [@dead "+partitionU"] let partitionU: (t('a), (. 'a) => bool) => (t('a), t('a));

  Warning Dead Value
  File "./ImmutableArray.rei", line 82, characters 0-52
  +partition is never used
  <-- line 82
  [@dead "+partition"] let partition: (t('a), 'a => bool) => (t('a), t('a));

  Warning Dead Value
  File "./ImmutableArray.rei", line 84, characters 0-48
  +reduceU is never used
  <-- line 84
  [@dead "+reduceU"] let reduceU: (t('a), 'b, (. 'b, 'a) => 'b) => 'b;

  Warning Dead Value
  File "./ImmutableArray.rei", line 85, characters 0-45
  +reduce is never used
  <-- line 85
  [@dead "+reduce"] let reduce: (t('a), 'b, ('b, 'a) => 'b) => 'b;

  Warning Dead Value
  File "./ImmutableArray.rei", line 87, characters 0-55
  +reduceReverseU is never used
  <-- line 87
  [@dead "+reduceReverseU"] let reduceReverseU: (t('a), 'b, (. 'b, 'a) => 'b) => 'b;

  Warning Dead Value
  File "./ImmutableArray.rei", line 88, characters 0-52
  +reduceReverse is never used
  <-- line 88
  [@dead "+reduceReverse"] let reduceReverse: (t('a), 'b, ('b, 'a) => 'b) => 'b;

  Warning Dead Value
  File "./ImmutableArray.rei", line 90, characters 0-67
  +reduceReverse2U is never used
  <-- line 90
  [@dead "+reduceReverse2U"] let reduceReverse2U: (t('a), t('b), 'c, (. 'c, 'a, 'b) => 'c) => 'c;

  Warning Dead Value
  File "./ImmutableArray.rei", line 91, characters 0-64
  +reduceReverse2 is never used
  <-- line 91
  [@dead "+reduceReverse2"] let reduceReverse2: (t('a), t('b), 'c, ('c, 'a, 'b) => 'c) => 'c;

  Warning Dead Value
  File "./ImmutableArray.rei", line 93, characters 0-42
  +someU is never used
  <-- line 93
  [@dead "+someU"] let someU: (t('a), (. 'a) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 94, characters 0-37
  +some is never used
  <-- line 94
  [@dead "+some"] let some: (t('a), 'a => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 96, characters 0-43
  +everyU is never used
  <-- line 96
  [@dead "+everyU"] let everyU: (t('a), (. 'a) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 97, characters 0-38
  +every is never used
  <-- line 97
  [@dead "+every"] let every: (t('a), 'a => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 99, characters 0-55
  +every2U is never used
  <-- line 99
  [@dead "+every2U"] let every2U: (t('a), t('b), (. 'a, 'b) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 100, characters 0-52
  +every2 is never used
  <-- line 100
  [@dead "+every2"] let every2: (t('a), t('b), ('a, 'b) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 102, characters 0-54
  +some2U is never used
  <-- line 102
  [@dead "+some2U"] let some2U: (t('a), t('b), (. 'a, 'b) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 103, characters 0-51
  +some2 is never used
  <-- line 103
  [@dead "+some2"] let some2: (t('a), t('b), ('a, 'b) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 105, characters 0-50
  +cmpU is never used
  <-- line 105
  [@dead "+cmpU"] let cmpU: (t('a), t('a), (. 'a, 'a) => int) => int;

  Warning Dead Value
  File "./ImmutableArray.rei", line 106, characters 0-47
  +cmp is never used
  <-- line 106
  [@dead "+cmp"] let cmp: (t('a), t('a), ('a, 'a) => int) => int;

  Warning Dead Value
  File "./ImmutableArray.rei", line 108, characters 0-51
  +eqU is never used
  <-- line 108
  [@dead "+eqU"] let eqU: (t('a), t('a), (. 'a, 'a) => bool) => bool;

  Warning Dead Value
  File "./ImmutableArray.rei", line 109, characters 0-48
  +eq is never used
  <-- line 109
  [@dead "+eq"] let eq: (t('a), t('a), ('a, 'a) => bool) => bool;

  Warning Dead Module
  File "./ImportHookDefault.re", line 0, characters 0-0
  +ImportHookDefault is a dead module as all its items are dead.

  Warning Dead Type
  File "./ImportHookDefault.re", line 2, characters 2-14
  person.name is a record label never used to read a value
  <-- line 2
    [@dead "person.name"] name: string,

  Warning Dead Type
  File "./ImportHookDefault.re", line 3, characters 2-10
  person.age is a record label never used to read a value
  <-- line 3
    [@dead "person.age"] age: int,

  Warning Dead Module
  File "./ImportHooks.re", line 0, characters 0-0
  +ImportHooks is a dead module as all its items are dead.

  Warning Dead Type
  File "./ImportHooks.re", line 3, characters 2-14
  person.name is a record label never used to read a value
  <-- line 3
    [@dead "person.name"] name: string,

  Warning Dead Type
  File "./ImportHooks.re", line 4, characters 2-10
  person.age is a record label never used to read a value
  <-- line 4
    [@dead "person.age"] age: int,

  Warning Dead Module
  File "./ImportJsValue.re", line 0, characters 0-0
  +ImportJsValue is a dead module as all its items are dead.

  Warning Dead Type
  File "./ImportJsValue.re", line 10, characters 2-8
  point.x is a record label never used to read a value
  <-- line 10
    [@dead "point.x"] x: int,

  Warning Dead Type
  File "./ImportJsValue.re", line 11, characters 2-16
  point.y is a record label never used to read a value
  <-- line 11
    [@dead "point.y"] y: option(int),

  Warning Dead Type
  File "./ImportJsValue.re", line 65, characters 4-10
  variant.I is a variant case which is never constructed
  <-- line 65
    | [@dead "variant.I"] I(int)

  Warning Dead Type
  File "./ImportJsValue.re", line 66, characters 4-13
  variant.S is a variant case which is never constructed
  <-- line 66
    | [@dead "variant.S"] S(string);

  Warning Dead Module
  File "./ImportMyBanner.re", line 0, characters 0-0
  +ImportMyBanner is a dead module as all its items are dead.

  Warning Dead Type
  File "./ImportMyBanner.re", line 6, characters 16-28
  message.text is a record label never used to read a value
  <-- line 6
  type message = {[@dead "message.text"] text: string};

  Warning Dead Value
  File "./ImportMyBanner.re", line 19, characters 0-15
  +make is never used
  <-- line 19
  [@dead "+make"] let make = make;

  Warning Dead Module
  File "./ManyComponents.re", line 3, characters 0-277
  +ManyComponents.InnerComponent is a dead module as all its items are dead.

  Warning Dead Value
  File "./ManyComponents.re", line 4, characters 2-45
  InnerComponent.+someValueSoModuleOffsetsAreShifted is never used
  <-- line 4
    [@dead "InnerComponent.+someValueSoModuleOffsetsAreShifted"] let someValueSoModuleOffsetsAreShifted = 77;

  Warning Dead Module
  File "./ModuleAliases.re", line 2, characters 2-57
  +ModuleAliases.Outer.Inner is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases.re", line 3, characters 19-32
  Outer.Inner.innerT.inner is a record label never used to read a value
  <-- line 3
      type innerT = {[@dead "Outer.Inner.innerT.inner"] inner: string};

  Warning Dead Module
  File "./ModuleAliases.re", line 10, characters 4-62
  +ModuleAliases.Outer2.Inner2.InnerNested is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases.re", line 11, characters 16-27
  Outer2.Inner2.InnerNested.t.nested is a record label never used to read a value
  <-- line 11
        type t = {[@dead "Outer2.Inner2.InnerNested.t.nested"] nested: int};

  Warning Dead Module
  File "./ModuleAliases2.re", line 0, characters 0-0
  +ModuleAliases2 is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases2.re", line 3, characters 2-8
  record.x is a record label never used to read a value
  <-- line 3
    [@dead "record.x"] x: int,

  Warning Dead Type
  File "./ModuleAliases2.re", line 4, characters 2-11
  record.y is a record label never used to read a value
  <-- line 4
    [@dead "record.y"] y: string,

  Warning Dead Module
  File "./ModuleAliases2.re", line 7, characters 0-137
  +ModuleAliases2.Outer is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases2.re", line 9, characters 16-29
  Outer.outer.outer is a record label never used to read a value
  <-- line 9
    type outer = {[@dead "Outer.outer.outer"] outer: string};

  Warning Dead Module
  File "./ModuleAliases2.re", line 11, characters 2-71
  +ModuleAliases2.Outer.Inner is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases2.re", line 13, characters 18-31
  Outer.Inner.inner.inner is a record label never used to read a value
  <-- line 13
      type inner = {[@dead "Outer.Inner.inner.inner"] inner: string};

  Warning Dead Value
  File "./ModuleAliases2.re", line 21, characters 0-10
  +q is never used
  <-- line 21
  [@dead "+q"] let q = 42;

  Warning Dead Module
  File "./NestedModules.re", line 4, characters 0-776
  +NestedModules.Universe is a dead module as all its items are dead.

  Warning Dead Value
  File "./NestedModules.re", line 8, characters 2-22
  Universe.+notExported is never used
  <-- line 8
    [@dead "Universe.+notExported"] let notExported = 33;

  Warning Dead Module
  File "./NestedModules.re", line 13, characters 2-530
  +NestedModules.Universe.Nested2 is a dead module as all its items are dead.

  Warning Dead Value
  File "./NestedModules.re", line 14, characters 4-13
  Universe.Nested2.+x is never used
  <-- line 14
      [@dead "Universe.Nested2.+x"] let x = 0;

  Warning Dead Value
  File "./NestedModules.re", line 19, characters 4-13
  Universe.Nested2.+y is never used
  <-- line 19
      [@dead "Universe.Nested2.+y"] let y = 2;

  Warning Dead Module
  File "./NestedModules.re", line 24, characters 4-296
  +NestedModules.Universe.Nested2.Nested3 is a dead module as all its items are dead.

  Warning Dead Value
  File "./NestedModules.re", line 25, characters 6-15
  Universe.Nested2.Nested3.+x is never used
  <-- line 25
        [@dead "Universe.Nested2.Nested3.+x"] let x = 0;

  Warning Dead Value
  File "./NestedModules.re", line 26, characters 6-15
  Universe.Nested2.Nested3.+y is never used
  <-- line 26
        [@dead "Universe.Nested2.Nested3.+y"] let y = 1;

  Warning Dead Value
  File "./NestedModules.re", line 27, characters 6-15
  Universe.Nested2.Nested3.+z is never used
  <-- line 27
        [@dead "Universe.Nested2.Nested3.+z"] let z = 2;

  Warning Dead Value
  File "./NestedModules.re", line 28, characters 6-15
  Universe.Nested2.Nested3.+w is never used
  <-- line 28
        [@dead "Universe.Nested2.Nested3.+w"] let w = 3;

  Warning Dead Type
  File "./NestedModules.re", line 46, characters 6-7
  Universe.variant.A is a variant case which is never constructed
  <-- line 46
      | [@dead "Universe.variant.A"] A

  Warning Dead Type
  File "./NestedModules.re", line 47, characters 6-15
  Universe.variant.B is a variant case which is never constructed
  <-- line 47
      | [@dead "Universe.variant.B"] B(string);

  Warning Dead Module
  File "./Opaque.re", line 0, characters 0-0
  +Opaque is a dead module as all its items are dead.

  Warning Dead Type
  File "./Opaque.re", line 3, characters 4-20
  opaqueFromRecords.A is a variant case which is never constructed
  <-- line 3
    | [@dead "opaqueFromRecords.A"] A(Records.coord);

  Warning Dead Module
  File "./OptArg.rei", line 0, characters 0-0
  OptArg is a dead module as all its items are dead.

  Warning Dead Value
  File "./OptArg.rei", line 1, characters 0-54
  +foo is never used
  <-- line 1
  [@dead "+foo"] let foo: (~x: int=?, ~y: int=?, ~z: int=?, int) => int;

  Warning Dead Module
  File "./Records.re", line 0, characters 0-0
  +Records is a dead module as all its items are dead.

  Warning Dead Type
  File "./Records.re", line 22, characters 2-14
  person.name is a record label never used to read a value
  <-- line 22
    [@dead "person.name"] name: string,

  Warning Dead Type
  File "./Records.re", line 23, characters 2-10
  person.age is a record label never used to read a value
  <-- line 23
    [@dead "person.age"] age: int,

  Warning Dead Type
  File "./Records.re", line 29, characters 2-14
  business.name is a record label never used to read a value
  <-- line 29
    [@dead "business.name"] name: string,

  Warning Dead Type
  File "./Records.re", line 56, characters 2-10
  payload.num is a record label never used to read a value
  <-- line 56
    [@dead "payload.num"] num: int,

  Warning Dead Type
  File "./Records.re", line 66, characters 2-8
  record.w is a record label never used to read a value
  <-- line 66
    [@dead "record.w"] w: int,

  Warning Dead Type
  File "./Records.re", line 86, characters 2-14
  business2.name is a record label never used to read a value
  <-- line 86
    [@dead "business2.name"] name: string,

  Warning Dead Type
  File "./Records.re", line 87, characters 2-30
  business2.owner is a record label never used to read a value
  <-- line 87
    [@dead "business2.owner"] owner: Js.Nullable.t(person),

  Warning Dead Module
  File "./References.re", line 0, characters 0-0
  +References is a dead module as all its items are dead.

  Warning Dead Type
  File "./References.re", line 39, characters 27-33
  requiresConversion.x is a record label never used to read a value
  <-- line 39
  type requiresConversion = {[@dead "requiresConversion.x"] x: int};

  Warning Dead Module
  File "./RepeatedLabel.re", line 0, characters 0-0
  +RepeatedLabel is a dead module as all its items are dead.

  Warning Dead Type
  File "./RepeatedLabel.re", line 2, characters 2-9
  userData.a is a record label never used to read a value
  <-- line 2
    [@dead "userData.a"] a: bool,

  Warning Dead Type
  File "./RepeatedLabel.re", line 3, characters 2-8
  userData.b is a record label never used to read a value
  <-- line 3
    [@dead "userData.b"] b: int,

  Warning Dead Type
  File "./RepeatedLabel.re", line 9, characters 2-11
  tabState.f is a record label never used to read a value
  <-- line 9
    [@dead "tabState.f"] f: string,

  Warning Dead Module
  File "./RequireCond.re", line 0, characters 0-0
  +RequireCond is a dead module as all its items are dead.

  Warning Dead Value
  File "./RequireCond.re", line 1, characters 0-288
  +make is never used
  <-- line 1
  [@dead "+make"] [@bs.module]

  Warning Dead Value
  File "./RequireCond.re", line 14, characters 0-351
  +either is never used
  <-- line 14
  [@dead "+either"] [@bs.module]

  Warning Dead Module
  File "./Shadow.re", line 7, characters 0-74
  +Shadow.M is a dead module as all its items are dead.

  Warning Dead Value
  File "./Shadow.re", line 11, characters 2-22
  M.+test is never used
  <-- line 11
    [@dead "M.+test"] let test = () => "a";

  Warning Dead Module
  File "./TestImmutableArray.re", line 0, characters 0-0
  +TestImmutableArray is a dead module as all its items are dead.

  Warning Dead Value
  File "./TestImmutableArray.re", line 9, characters 0-43
  +testBeltArrayGet is never used
  <-- line 9
  [@dead "+testBeltArrayGet"] let testBeltArrayGet = arr => Belt.(arr[3]);

  Warning Dead Value
  File "./TestImmutableArray.re", line 11, characters 0-47
  +testBeltArraySet is never used
  <-- line 11
  [@dead "+testBeltArraySet"] let testBeltArraySet = arr => Belt.(arr[3] = 4);

  Warning Dead Module
  File "./TestImport.re", line 0, characters 0-0
  +TestImport is a dead module as all its items are dead.

  Warning Dead Value
  File "./TestImport.re", line 18, characters 0-43
  +innerStuffContents is never used
  <-- line 18
  [@dead "+innerStuffContents"] let innerStuffContents = innerStuffContents;

  Warning Dead Type
  File "./TestImport.re", line 28, characters 16-28
  message.text is a record label never used to read a value
  <-- line 28
  type message = {[@dead "message.text"] text: string};

  Warning Dead Value
  File "./TestImport.re", line 42, characters 0-15
  +make is never used
  <-- line 42
  [@dead "+make"] let make = make;

  Warning Dead Module
  File "./TestPromise.re", line 0, characters 0-0
  +TestPromise is a dead module as all its items are dead.

  Warning Dead Type
  File "./TestPromise.re", line 6, characters 2-8
  fromPayload.x is a record label never used to read a value
  <-- line 6
    [@dead "fromPayload.x"] x: int,

  Warning Dead Type
  File "./TestPromise.re", line 11, characters 18-32
  toPayload.result is a record label never used to read a value
  <-- line 11
  type toPayload = {[@dead "toPayload.result"] result: string};

  Warning Dead Module
  File "./TransitiveType2.re", line 0, characters 0-0
  +TransitiveType2 is a dead module as all its items are dead.

  Warning Dead Value
  File "./TransitiveType2.re", line 7, characters 0-28
  +convertT2 is never used
  <-- line 7
  [@dead "+convertT2"] let convertT2 = (x: t2) => x;

  Warning Dead Module
  File "./TransitiveType3.re", line 0, characters 0-0
  +TransitiveType3 is a dead module as all its items are dead.

  Warning Dead Type
  File "./TransitiveType3.re", line 3, characters 2-8
  t3.i is a record label never used to read a value
  <-- line 3
    [@dead "t3.i"] i: int,

  Warning Dead Type
  File "./TransitiveType3.re", line 4, characters 2-11
  t3.s is a record label never used to read a value
  <-- line 4
    [@dead "t3.s"] s: string,

  Warning Dead Module
  File "./TypeParams1.re", line 0, characters 0-0
  +TypeParams1 is a dead module as all its items are dead.

  Warning Dead Value
  File "./TypeParams1.re", line 4, characters 0-24
  +exportSomething is never used
  <-- line 4
  [@dead "+exportSomething"] let exportSomething = 10;

  Warning Dead Module
  File "./TypeParams2.re", line 0, characters 0-0
  +TypeParams2 is a dead module as all its items are dead.

  Warning Dead Type
  File "./TypeParams2.re", line 2, characters 13-20
  item.id is a record label never used to read a value
  <-- line 2
  type item = {[@dead "item.id"] id: int};

  Warning Dead Value
  File "./TypeParams2.re", line 10, characters 0-24
  +exportSomething is never used
  <-- line 10
  [@dead "+exportSomething"] let exportSomething = 10;

  Warning Dead Module
  File "./Types.re", line 0, characters 0-0
  +Types is a dead module as all its items are dead.

  Warning Dead Type
  File "./Types.re", line 12, characters 4-13
  typeWithVars.A is a variant case which is never constructed
  <-- line 12
    | [@dead "typeWithVars.A"] A('x, 'y)

  Warning Dead Type
  File "./Types.re", line 13, characters 4-9
  typeWithVars.B is a variant case which is never constructed
  <-- line 13
    | [@dead "typeWithVars.B"] B('z);

  Warning Dead Type
  File "./Types.re", line 39, characters 26-47
  mutuallyRecursiveB.a is a record label never used to read a value
  <-- line 39
  and mutuallyRecursiveB = {[@dead "mutuallyRecursiveB.a"] a: mutuallyRecursiveA};

  Warning Dead Type
  File "./Types.re", line 60, characters 4-5
  opaqueVariant.A is a variant case which is never constructed
  <-- line 60
    | [@dead "opaqueVariant.A"] A

  Warning Dead Type
  File "./Types.re", line 61, characters 4-5
  opaqueVariant.B is a variant case which is never constructed
  <-- line 61
    | [@dead "opaqueVariant.B"] B;

  Warning Dead Type
  File "./Types.re", line 91, characters 2-8
  record.i is a record label never used to read a value
  <-- line 91
    [@dead "record.i"] i: int,

  Warning Dead Type
  File "./Types.re", line 92, characters 2-11
  record.s is a record label never used to read a value
  <-- line 92
    [@dead "record.s"] s: string,

  Warning Dead Type
  File "./Types.re", line 139, characters 19-26
  someRecord.id is a record label never used to read a value
  <-- line 139
  type someRecord = {[@dead "someRecord.id"] id: int};

  Warning Dead Module
  File "./Types.re", line 168, characters 0-84
  +Types.ObjectId is a dead module as all its items are dead.

  Warning Dead Value
  File "./Types.re", line 173, characters 2-11
  ObjectId.+x is never used
  <-- line 173
    [@dead "ObjectId.+x"] let x = 1;

  Warning Dead Module
  File "./Unboxed.re", line 0, characters 0-0
  +Unboxed is a dead module as all its items are dead.

  Warning Dead Type
  File "./Unboxed.re", line 4, characters 4-10
  v1.A is a variant case which is never constructed
  <-- line 4
    | [@dead "v1.A"] A(int);

  Warning Dead Type
  File "./Unboxed.re", line 9, characters 4-10
  v2.A is a variant case which is never constructed
  <-- line 9
    | [@dead "v2.A"] A(int);

  Warning Dead Type
  File "./Unboxed.re", line 16, characters 11-17
  r1.x is a record label never used to read a value
  <-- line 16
  type r1 = {[@dead "r1.x"] x: int};

  Warning Dead Type
  File "./Unboxed.re", line 21, characters 4-18
  r2.B is a variant case which is never constructed
  <-- line 21
    | [@dead "r2.B"] B({g: string});

  Warning Dead Module
  File "./Variants.re", line 0, characters 0-0
  +Variants is a dead module as all its items are dead.

  Warning Dead Type
  File "./Variants.re", line 97, characters 4-29
  type_.Type is a variant case which is never constructed
  <-- line 97
    | [@dead "type_.Type"] [@genType.as "type"] Type;

  Warning Dead Type
  File "./Variants.re", line 105, characters 4-10
  result1.Ok is a variant case which is never constructed
  <-- line 105
    | [@dead "result1.Ok"] Ok('a)

  Warning Dead Type
  File "./Variants.re", line 106, characters 4-13
  result1.Error is a variant case which is never constructed
  <-- line 106
    | [@dead "result1.Error"] Error('b);

  Warning Dead Module
  File "./VariantsWithPayload.re", line 0, characters 0-0
  +VariantsWithPayload is a dead module as all its items are dead.

  Warning Dead Type
  File "./VariantsWithPayload.re", line 51, characters 4-5
  simpleVariant.A is a variant case which is never constructed
  <-- line 51
    | [@dead "simpleVariant.A"] A

  Warning Dead Type
  File "./VariantsWithPayload.re", line 52, characters 4-5
  simpleVariant.B is a variant case which is never constructed
  <-- line 52
    | [@dead "simpleVariant.B"] B

  Warning Dead Type
  File "./VariantsWithPayload.re", line 53, characters 4-5
  simpleVariant.C is a variant case which is never constructed
  <-- line 53
    | [@dead "simpleVariant.C"] C;

  Warning Dead Type
  File "./VariantsWithPayload.re", line 60, characters 4-30
  variantWithPayloads.A is a variant case which is never constructed
  <-- line 60
    | [@dead "variantWithPayloads.A"] [@genType.as "ARenamed"] A

  Warning Dead Type
  File "./VariantsWithPayload.re", line 61, characters 4-10
  variantWithPayloads.B is a variant case which is never constructed
  <-- line 61
    | [@dead "variantWithPayloads.B"] B(int)

  Warning Dead Type
  File "./VariantsWithPayload.re", line 62, characters 4-15
  variantWithPayloads.C is a variant case which is never constructed
  <-- line 62
    | [@dead "variantWithPayloads.C"] C(int, int)

  Warning Dead Type
  File "./VariantsWithPayload.re", line 63, characters 4-17
  variantWithPayloads.D is a variant case which is never constructed
  <-- line 63
    | [@dead "variantWithPayloads.D"] D((int, int))

  Warning Dead Type
  File "./VariantsWithPayload.re", line 64, characters 4-23
  variantWithPayloads.E is a variant case which is never constructed
  <-- line 64
    | [@dead "variantWithPayloads.E"] E(int, string, int);

  Warning Dead Type
  File "./VariantsWithPayload.re", line 100, characters 4-10
  variant1Int.R is a variant case which is never constructed
  <-- line 100
    | [@dead "variant1Int.R"] R(int);

  Warning Dead Type
  File "./VariantsWithPayload.re", line 107, characters 4-14
  variant1Object.R is a variant case which is never constructed
  <-- line 107
    | [@dead "variant1Object.R"] R(payload);
  Analysis reported 359 issues (Warning Dead Exception:1, Warning Dead Module:62, Warning Dead Type:81, Warning Dead Value:206, Warning Dead Value With Side Effects:2, Warning Unused Argument:7)
