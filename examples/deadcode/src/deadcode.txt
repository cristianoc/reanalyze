  Scanning AutoAnnotate.cmt Source:AutoAnnotate.res
  addVariantCaseDeclaration R AutoAnnotate.res:1:15 path:+AutoAnnotate.variant
  addRecordLabelDeclaration variant AutoAnnotate.res:3:22 path:+AutoAnnotate.record
  addRecordLabelDeclaration r2 AutoAnnotate.res:5:11 path:+AutoAnnotate.r2
  addRecordLabelDeclaration r3 AutoAnnotate.res:7:11 path:+AutoAnnotate.r3
  addRecordLabelDeclaration r4 AutoAnnotate.res:9:11 path:+AutoAnnotate.r4
  addVariantCaseDeclaration R2 AutoAnnotate.res:12:2 path:+AutoAnnotate.annotatedVariant
  addVariantCaseDeclaration R4 AutoAnnotate.res:13:2 path:+AutoAnnotate.annotatedVariant
  Scanning BootloaderResource.cmt Source:BootloaderResource.res
  addValueDeclaration +read BootloaderResource.res:3:0 path:+BootloaderResource
  addValueDeclaration +read BootloaderResource.res:3:33 path:+BootloaderResource
  Scanning BucklescriptAnnotations.cmt Source:BucklescriptAnnotations.res
  addValueDeclaration +foo BucklescriptAnnotations.res:21:4 path:+BucklescriptAnnotations
  addValueDeclaration +bar BucklescriptAnnotations.res:23:4 path:+BucklescriptAnnotations
  addValueReference BucklescriptAnnotations.res:21:4 --> BucklescriptAnnotations.res:21:11
  addValueDeclaration +f BucklescriptAnnotations.res:24:6 path:+BucklescriptAnnotations
  addValueReference BucklescriptAnnotations.res:24:6 --> BucklescriptAnnotations.res:23:11
  addValueReference BucklescriptAnnotations.res:23:4 --> BucklescriptAnnotations.res:24:6
  Scanning ComponentAsProp.cmt Source:ComponentAsProp.res
  addValueDeclaration +component ComponentAsProp.res:1:4 path:+ComponentAsProp
  addValueDeclaration +make ComponentAsProp.res:7:4 path:+ComponentAsProp
  addValueReference ComponentAsProp.res:1:4 --> ReasonReact.rei:153:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: ComponentAsProp.res:10:5
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: ComponentAsProp.res:11:7
  addValueReference ComponentAsProp.res:7:4 --> ComponentAsProp.res:7:12
  addValueReference ComponentAsProp.res:7:4 --> ComponentAsProp.res:7:20
  addValueReference ComponentAsProp.res:7:4 --> ComponentAsProp.res:15:15
  addValueReference ComponentAsProp.res:7:4 --> ReasonReact.rei:15:0
  addValueReference ComponentAsProp.res:7:4 --> ComponentAsProp.res:7:34
  addValueReference ComponentAsProp.res:7:4 --> ReactDOMRe.re:114:0
  addValueReference ComponentAsProp.res:7:4 --> ReactDOMRe.re:114:0
  addValueReference ComponentAsProp.res:7:4 --> ComponentAsProp.res:1:4
  Scanning CreateErrorHandler1.cmt Source:CreateErrorHandler1.res
  addValueDeclaration +notification CreateErrorHandler1.res:3:6 path:+CreateErrorHandler1.Error1
  addValueReference CreateErrorHandler1.res:3:6 --> CreateErrorHandler1.res:3:21
  addValueReference CreateErrorHandler1.res:3:6 --> CreateErrorHandler1.res:3:21
  addValueReference CreateErrorHandler1.res:8:0 --> ErrorHandler.resi:7:2
  addValueReference ErrorHandler.resi:3:2 --> CreateErrorHandler1.res:3:6
  Scanning CreateErrorHandler2.cmt Source:CreateErrorHandler2.res
  addValueDeclaration +notification CreateErrorHandler2.res:3:6 path:+CreateErrorHandler2.Error2
  addValueReference CreateErrorHandler2.res:3:6 --> CreateErrorHandler2.res:3:21
  addValueReference ErrorHandler.resi:3:2 --> CreateErrorHandler2.res:3:6
  Scanning DeadCodeImplementation.cmt Source:DeadCodeImplementation.res
  addValueDeclaration +x DeadCodeImplementation.res:2:6 path:+DeadCodeImplementation.M
  addValueReference DeadCodeInterface.res:2:2 --> DeadCodeImplementation.res:2:6
  Scanning DeadCodeInterface.cmt Source:DeadCodeInterface.res
  Scanning DeadExn.cmt Source:DeadExn.res
  addValueDeclaration +eToplevel DeadExn.res:8:4 path:+DeadExn
  addValueDeclaration +eInside DeadExn.res:10:4 path:+DeadExn
  addExceptionDeclaration Etoplevel DeadExn.res:1:0 path:+DeadExn
  addExceptionDeclaration Einside DeadExn.res:4:2 path:+DeadExn.Inside
  addExceptionDeclaration DeadE DeadExn.res:7:0 path:+DeadExn
  addValueReference DeadExn.res:8:4 --> DeadExn.res:1:0
  addTypeReference DeadExn.res:8:16 --> DeadExn.res:1:0
  addValueReference DeadExn.res:10:4 --> DeadExn.res:4:2
  addTypeReference DeadExn.res:10:14 --> DeadExn.res:4:2
  addValueReference DeadExn.res:12:7 --> DeadExn.res:10:4
  Scanning DeadExn.cmti Source:DeadExn.resi
  Scanning DeadMl.cmt Source:DeadMl.ml
  addValueDeclaration +thisSpansSeveralLines DeadMl.ml:3:8 path:+DeadMl.QQ
  addValueDeclaration +thisIsInInterface DeadMl.ml:9:2 path:+DeadMl.AA
  addValueDeclaration +thisHasSemicolons DeadMl.ml:15:4 path:+DeadMl
  addValueDeclaration +version DeadMl.ml:26:6 path:+DeadMl.Bs_version
  addValueDeclaration +header DeadMl.ml:26:27 path:+DeadMl.Bs_version
  addValueDeclaration +package_name DeadMl.ml:26:47 path:+DeadMl.Bs_version
  addValueDeclaration +map_split_opt DeadMl.ml:45:8 path:+DeadMl
  addValueDeclaration +inline_threshold DeadMl.ml:56:4 path:+DeadMl
  addValueDeclaration +dead1 DeadMl.ml:59:6 path:+DeadMl.Scope
  addValueDeclaration +deadInner1 DeadMl.ml:62:8 path:+DeadMl.Scope.Inner1
  addValueDeclaration +liveInner2 DeadMl.ml:66:8 path:+DeadMl.Scope.Inner1
  addValueDeclaration +dead2 DeadMl.ml:69:6 path:+DeadMl.Scope
  addValueDeclaration +liveInner3 DeadMl.ml:74:8 path:+DeadMl.Scope.Inner2
  addValueDeclaration +live3 DeadMl.ml:77:6 path:+DeadMl.Scope
  addValueDeclaration +dead4 DeadMl.ml:80:4 path:+DeadMl
  addValueDeclaration +live5 DeadMl.ml:82:4 path:+DeadMl
  addValueDeclaration +dead5 DeadMl.ml:85:4 path:+DeadMl
  addValueDeclaration +live6 DeadMl.ml:87:4 path:+DeadMl
  addValueDeclaration +dead7 DeadMl.ml:90:4 path:+DeadMl
  addValueDeclaration +dead8 DeadMl.ml:94:2 path:+DeadMl.WithSignature
  addValueDeclaration +live9 DeadMl.ml:96:2 path:+DeadMl.WithSignature
  addValueDeclaration +dead10 DeadMl.ml:99:2 path:+DeadMl.WithSignature
  addValueDeclaration +live11 DeadMl.ml:103:2 path:+DeadMl.WithSignature
  addValueDeclaration +foo DeadMl.ml:112:21 path:+DeadMl
  addValueReference DeadMl.ml:3:8 --> DeadMl.ml:4:11
  addValueReference DeadMl.ml:3:8 --> DeadMl.ml:4:20
  addValueDeclaration +thisIsInInterface DeadMl.ml:12:6 path:+DeadMl.AA
  addValueReference DeadMl.ml:12:6 --> DeadMl.ml:12:24
  addVariantCaseDeclaration DeadA DeadMl.ml:17:18 path:+DeadMl.thisIsDead
  addVariantCaseDeclaration DeadB DeadMl.ml:17:26 path:+DeadMl.thisIsDead
  addValueDeclaration +_ DeadMl.ml:21:2 path:+DeadMl
  addValueDeclaration +_ DeadMl.ml:22:2 path:+DeadMl
  addValueDeclaration +version DeadMl.ml:29:8 path:+DeadMl.Bs_version
  addValueDeclaration +header DeadMl.ml:30:8 path:+DeadMl.Bs_version
  addValueDeclaration +package_name DeadMl.ml:31:8 path:+DeadMl.Bs_version
  addVariantCaseDeclaration Lfunction DeadMl.ml:35:2 path:+DeadMl.l
  addRecordLabelDeclaration module_name DeadMl.ml:41:2 path:+DeadMl.module_info
  addRecordLabelDeclaration case DeadMl.ml:42:2 path:+DeadMl.module_info
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:50:4
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:46:19
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:50:7
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:46:19
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:45:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:53:23
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:51:8
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:54:23
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:11
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:52:11
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:51:10
  addValueReference DeadMl.ml:45:8 --> DeadMl.ml:46:3
  addValueDeclaration +dead8 DeadMl.ml:106:6 path:+DeadMl.WithSignature
  addValueDeclaration +live9 DeadMl.ml:107:6 path:+DeadMl.WithSignature
  addValueDeclaration +dead10 DeadMl.ml:108:6 path:+DeadMl.WithSignature
  addValueDeclaration +live11 DeadMl.ml:109:6 path:+DeadMl.WithSignature
  addValueReference DeadMl.ml:112:21 --> DeadMl.ml:112:25
  addValueReference DeadMl.ml:9:2 --> DeadMl.ml:12:6
  addValueReference DeadMl.ml:26:6 --> DeadMl.ml:29:8
  addValueReference DeadMl.ml:26:27 --> DeadMl.ml:30:8
  addValueReference DeadMl.ml:26:47 --> DeadMl.ml:31:8
  addValueReference DeadMl.ml:94:2 --> DeadMl.ml:106:6
  addValueReference DeadMl.ml:96:2 --> DeadMl.ml:107:6
  addValueReference DeadMl.ml:99:2 --> DeadMl.ml:108:6
  addValueReference DeadMl.ml:103:2 --> DeadMl.ml:109:6
<<<<<<< HEAD
  Scanning DeadRT.cmt Source:DeadRT.re
  addValueDeclaration +emitModuleAccessPath DeadRT.re:5:8 path:+DeadRT
  addVariantCaseDeclaration Root DeadRT.re:2:4 path:+DeadRT.moduleAccessPath
  addVariantCaseDeclaration Kaboom DeadRT.re:3:4 path:+DeadRT.moduleAccessPath
  addValueReference DeadRT.re:5:8 --> DeadRT.re:7:9
  addValueReference DeadRT.re:5:8 --> DeadRT.re:5:31
  addTypeReference DeadRT.re:11:16 --> DeadRT.re:3:4
  Scanning DeadRT.cmti Source:DeadRT.rei
  addVariantCaseDeclaration Root DeadRT.rei:2:4 path:DeadRT.moduleAccessPath
  extendTypeDependencies DeadRT.re:2:4 --> DeadRT.rei:2:4
  extendTypeDependencies DeadRT.rei:2:4 --> DeadRT.re:2:4
  addVariantCaseDeclaration Kaboom DeadRT.rei:3:4 path:DeadRT.moduleAccessPath
  extendTypeDependencies DeadRT.re:3:4 --> DeadRT.rei:3:4
  extendTypeDependencies DeadRT.rei:3:4 --> DeadRT.re:3:4
  Scanning DeadTest.cmt Source:DeadTest.re
  addValueDeclaration +fortytwo DeadTest.re:2:4 path:+DeadTest
  addValueDeclaration +fortyTwoButExported DeadTest.re:5:4 path:+DeadTest
  addValueDeclaration +thisIsUsedOnce DeadTest.re:7:4 path:+DeadTest
  addValueDeclaration +thisIsUsedTwice DeadTest.re:10:4 path:+DeadTest
  addValueDeclaration +thisIsKeptAlive DeadTest.re:17:4 path:+DeadTest
  addValueDeclaration +thisIsMarkedLive DeadTest.re:20:4 path:+DeadTest
  addValueDeclaration +a DeadTest.re:37:2 path:+DeadTest.VariantUsedOnlyInImplementation
  addValueDeclaration +x DeadTest.re:62:2 path:+DeadTest.MM
  addValueDeclaration +y DeadTest.re:63:2 path:+DeadTest.MM
  addValueDeclaration +unusedRec DeadTest.re:79:8 path:+DeadTest
  addValueDeclaration +split_map DeadTest.re:81:8 path:+DeadTest
  addValueDeclaration +rec1 DeadTest.re:86:8 path:+DeadTest
  addValueDeclaration +rec2 DeadTest.re:87:4 path:+DeadTest
  addValueDeclaration +recWithCallback DeadTest.re:89:8 path:+DeadTest
  addValueDeclaration +foo DeadTest.re:94:8 path:+DeadTest
  addValueDeclaration +bar DeadTest.re:98:4 path:+DeadTest
  addValueDeclaration +withDefaultValue DeadTest.re:100:4 path:+DeadTest
  addValueDeclaration +unsafe_string1 DeadTest.re:102:0 path:+DeadTest
  addValueDeclaration +unsafe_string2 DeadTest.re:105:2 path:+DeadTest.Ext_buffer
  addValueDeclaration +reasonResource DeadTest.re:112:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +makeProps DeadTest.re:112:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +make DeadTest.re:112:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +reasonResource DeadTest.re:119:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +makeProps DeadTest.re:121:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +make DeadTest.re:122:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +cmp DeadTest.re:132:4 path:+DeadTest
  addValueDeclaration +cmp2 DeadTest.re:134:4 path:+DeadTest
  addValueDeclaration +zzz DeadTest.re:150:4 path:+DeadTest
  addValueDeclaration +second DeadTest.re:159:4 path:+DeadTest
  addValueDeclaration +minute DeadTest.re:160:4 path:+DeadTest
  addValueDeclaration +deadRef DeadTest.re:162:4 path:+DeadTest
  addValueDeclaration +makeSwitch DeadTest.re:164:4 path:+DeadTest
  addValueDeclaration +make DeadTest.re:167:4 path:+DeadTest
  addValueDeclaration +theSideEffectIsLogging DeadTest.re:171:4 path:+DeadTest
  addValueDeclaration +stringLengthNoSideEffects DeadTest.re:173:4 path:+DeadTest
  addValueDeclaration +globallyLive1 DeadTest.re:178:6 path:+DeadTest.GloobLive
  addValueDeclaration +globallyLive2 DeadTest.re:179:6 path:+DeadTest.GloobLive
  addValueDeclaration +globallyLive3 DeadTest.re:180:6 path:+DeadTest.GloobLive
  addValueReference DeadTest.re:1:15 --> ImmutableArray.rei:7:0
  addValueReference DeadTest.re:8:7 --> DeadTest.re:7:4
  addValueReference DeadTest.re:11:7 --> DeadTest.re:10:4
  addValueReference DeadTest.re:12:7 --> DeadTest.re:10:4
  addValueReference DeadTest.re:20:4 --> DeadTest.re:17:4
  addValueDeclaration +thisSignatureItemIsDead DeadTest.re:31:6 path:+DeadTest.M
  addVariantCaseDeclaration A DeadTest.re:36:6 path:+DeadTest.VariantUsedOnlyInImplementation.t
  addVariantCaseDeclaration A DeadTest.re:40:6 path:+DeadTest.VariantUsedOnlyInImplementation.t
  extendTypeDependencies DeadTest.re:40:6 --> DeadTest.re:36:6
  extendTypeDependencies DeadTest.re:36:6 --> DeadTest.re:40:6
  addValueDeclaration +a DeadTest.re:41:6 path:+DeadTest.VariantUsedOnlyInImplementation
  addTypeReference DeadTest.re:41:10 --> DeadTest.re:40:6
  addValueReference DeadTest.re:44:17 --> DeadTest.re:37:2
  addValueReference DeadTest.re:44:14 --> DeadTest.re:44:9
  addValueDeclaration +_ DeadTest.re:46:0 path:+DeadTest
  addTypeReference DeadTest.re:46:8 --> DeadTypeTest.rei:8:4
  addValueDeclaration +_ DeadTest.re:47:0 path:+DeadTest
  addTypeReference DeadTest.re:47:8 --> DeadTypeTest.rei:9:4
  addRecordLabelDeclaration xxx DeadTest.re:50:2 path:+DeadTest.record
  addRecordLabelDeclaration yyy DeadTest.re:51:2 path:+DeadTest.record
  addValueDeclaration +_ DeadTest.re:54:0 path:+DeadTest
  addTypeReference DeadTest.re:54:13 --> DeadTest.re:50:2
  addValueReference DeadTest.re:54:13 --> DeadTest.re:54:8
  addValueDeclaration +_ DeadTest.re:55:0 path:+DeadTest
  addValueReference DeadTest.re:55:19 --> DeadTest.re:55:10
  addTypeReference DeadTest.re:55:9 --> DeadTest.re:51:2
  addValueDeclaration +_ DeadTest.re:58:2 path:+DeadTest.UnderscoreInside
  addValueDeclaration +y DeadTest.re:65:6 path:+DeadTest.MM
  addValueDeclaration +x DeadTest.re:66:6 path:+DeadTest.MM
  addValueReference DeadTest.re:66:6 --> DeadTest.re:65:6
  addValueDeclaration +valueOnlyInImplementation DeadTest.re:69:6 path:+DeadTest.MM
  addValueReference DeadTest.re:73:9 --> DeadTest.re:62:2
  addValueReference DeadTest.re:77:16 --> DeadValueTest.rei:1:0
  addValueReference DeadTest.re:79:8 --> DeadTest.re:79:8
  addValueReference DeadTest.re:81:8 --> DeadTest.re:81:20
  addValueReference DeadTest.re:81:8 --> DeadTest.re:81:8
  addValueReference DeadTest.re:86:8 --> DeadTest.re:87:4
  addValueReference DeadTest.re:87:4 --> DeadTest.re:86:8
  addValueDeclaration +cb DeadTest.re:90:6 path:+DeadTest
  addValueReference DeadTest.re:90:6 --> DeadTest.re:89:8
  addValueReference DeadTest.re:89:8 --> DeadTest.re:90:6
  addValueDeclaration +cb DeadTest.re:95:6 path:+DeadTest
  addValueReference DeadTest.re:95:6 --> DeadTest.re:98:4
  addValueReference DeadTest.re:94:8 --> DeadTest.re:95:6
  addValueReference DeadTest.re:98:4 --> DeadTest.re:94:8
  addValueReference DeadTest.re:100:4 --> DeadTest.re:100:42
  addValueReference DeadTest.re:100:4 --> DeadTest.re:100:25
  addValueReference DeadTest.re:100:4 --> DeadTest.re:100:45
  addTypeReference DeadTest.re:110:16 --> DeadRT.rei:2:4
  addValueReference DeadTest.re:112:40 --> JSResource.re:3:0
  addValueReference DeadTest.re:112:40 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DeadTest.re:112:40 --> DeadTest.re:112:40
  addValueReference DeadTest.re:112:40 --> BootloaderResource.re:3:0
  addValueReference DeadTest.re:112:40 --> DeadTest.re:112:40
  addValueReference DeadTest.re:112:40 --> React.re:18:0
  addValueReference DeadTest.re:119:6 --> JSResource.re:3:0
  addValueReference DeadTest.re:122:6 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DeadTest.re:122:6 --> DeadTest.re:119:6
  addValueReference DeadTest.re:122:6 --> BootloaderResource.re:3:0
  addValueReference DeadTest.re:122:6 --> DeadTest.re:122:13
  addValueReference DeadTest.re:122:6 --> React.re:18:0
  addValueReference DeadTest.re:132:4 --> DeadTest.re:112:40
  DeadOptionalArgs.addReferences LazyDynamicallyLoadedComponent.makeProps called with optional argNames: argNamesMaybe: DeadTest.re:132:11
  addValueReference DeadTest.re:132:4 --> DeadTest.re:112:40
  addValueReference DeadTest.re:132:4 --> React.re:18:0
  addValueReference DeadTest.re:134:4 --> DeadTest.re:122:6
  DeadOptionalArgs.addReferences LazyDynamicallyLoadedComponent2.makeProps called with optional argNames: argNamesMaybe: DeadTest.re:134:18
  addValueReference DeadTest.re:134:4 --> DeadTest.re:121:6
  addValueReference DeadTest.re:134:4 --> React.re:18:0
  addValueReference DeadTest.re:136:16 --> DeadTest.re:132:4
  addValueDeclaration +a1 DeadTest.re:151:6 path:+DeadTest
  addValueDeclaration +a2 DeadTest.re:152:6 path:+DeadTest
  addValueDeclaration +a3 DeadTest.re:153:6 path:+DeadTest
  addValueReference DeadTest.re:157:17 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DeadTest.re:157:17 --> React.re:18:0
  addValueReference DeadTest.re:160:4 --> DeadTest.re:159:4
  addValueReference DeadTest.re:164:4 --> ExportWithRename.res:2:4
  addValueReference DeadTest.re:167:32 --> DeadTest.re:167:13
  addValueReference DeadTest.re:167:19 --> React.re:7:0
  addValueReference DeadTest.re:169:16 --> DeadTest.re:167:4
  addValueReference DeadTest.re:175:30 --> DeadTest.re:175:22
  addTypeReference DeadTest.re:175:21 --> trace.mli:3:11
  addValueReference DeadTest.re:175:0 --> trace.mli:5:0
  addVariantCaseDeclaration A DeadTest.re:185:6 path:+DeadTest.WithInclude.t
  addVariantCaseDeclaration A DeadTest.re:189:8 path:+DeadTest.WithInclude.T.t
  addVariantCaseDeclaration A DeadTest.re:189:8 path:+DeadTest.WithInclude.t
  extendTypeDependencies DeadTest.re:189:8 --> DeadTest.re:185:6
  extendTypeDependencies DeadTest.re:185:6 --> DeadTest.re:189:8
  addTypeReference DeadTest.re:194:7 --> DeadTest.re:185:6
  addValueReference ExportWithRename.res:2:4 --> DynamicallyLoadedComponent.re:2:4
  addValueReference DynamicallyLoadedComponent.re:2:4 --> ExportWithRename.res:2:4
  addValueReference DeadTest.re:37:2 --> DeadTest.re:41:6
  addValueReference DeadTest.re:62:2 --> DeadTest.re:66:6
  addValueReference DeadTest.re:63:2 --> DeadTest.re:65:6
  addValueReference DeadTest.re:105:2 --> DeadTest.re:107:2
  addTypeReference DeadTest.re:189:8 --> DeadTest.re:185:6
  addTypeReference DeadTest.re:185:6 --> DeadTest.re:189:8
  addTypeReference DeadTest.re:40:6 --> DeadTest.re:36:6
  addTypeReference DeadTest.re:36:6 --> DeadTest.re:40:6
  addTypeReference DeadRT.re:3:4 --> DeadRT.rei:3:4
  addTypeReference DeadRT.rei:3:4 --> DeadRT.re:3:4
  addTypeReference DeadRT.re:2:4 --> DeadRT.rei:2:4
  addTypeReference DeadRT.rei:2:4 --> DeadRT.re:2:4
  Scanning DeadTestBlacklist.cmt Source:DeadTestBlacklist.re
  addValueDeclaration +x DeadTestBlacklist.re:1:4 path:+DeadTestBlacklist
  Scanning DeadTestWithInterface.cmt Source:DeadTestWithInterface.re
  addValueDeclaration +x DeadTestWithInterface.re:1:20 path:+DeadTestWithInterface.Ext_buffer
  addValueDeclaration +x DeadTestWithInterface.re:2:6 path:+DeadTestWithInterface.Ext_buffer
  addValueReference DeadTestWithInterface.re:1:20 --> DeadTestWithInterface.re:2:6
=======
  Scanning DeadRT.cmt Source:DeadRT.res
  addValueDeclaration +emitModuleAccessPath DeadRT.res:5:8 path:+DeadRT
  addVariantCaseDeclaration Root DeadRT.res:2:2 path:+DeadRT.moduleAccessPath
  addVariantCaseDeclaration Kaboom DeadRT.res:3:2 path:+DeadRT.moduleAccessPath
  addValueReference DeadRT.res:5:8 --> DeadRT.res:7:9
  addValueReference DeadRT.res:5:8 --> DeadRT.res:5:31
  addTypeReference DeadRT.res:11:16 --> DeadRT.res:3:2
  Scanning DeadRT.cmti Source:DeadRT.resi
  addVariantCaseDeclaration Root DeadRT.resi:2:2 path:DeadRT.moduleAccessPath
  extendTypeDependencies DeadRT.res:2:2 --> DeadRT.resi:2:2
  extendTypeDependencies DeadRT.resi:2:2 --> DeadRT.res:2:2
  addVariantCaseDeclaration Kaboom DeadRT.resi:3:2 path:DeadRT.moduleAccessPath
  extendTypeDependencies DeadRT.res:3:2 --> DeadRT.resi:3:2
  extendTypeDependencies DeadRT.resi:3:2 --> DeadRT.res:3:2
  Scanning DeadTest.cmt Source:DeadTest.res
  addValueDeclaration +fortytwo DeadTest.res:2:4 path:+DeadTest
  addValueDeclaration +fortyTwoButExported DeadTest.res:4:7 path:+DeadTest
  addValueDeclaration +thisIsUsedOnce DeadTest.res:6:4 path:+DeadTest
  addValueDeclaration +thisIsUsedTwice DeadTest.res:9:4 path:+DeadTest
  addValueDeclaration +thisIsKeptAlive DeadTest.res:16:4 path:+DeadTest
  addValueDeclaration +thisIsMarkedLive DeadTest.res:19:4 path:+DeadTest
  addValueDeclaration +a DeadTest.res:35:2 path:+DeadTest.VariantUsedOnlyInImplementation
  addValueDeclaration +x DeadTest.res:59:2 path:+DeadTest.MM
  addValueDeclaration +y DeadTest.res:60:2 path:+DeadTest.MM
  addValueDeclaration +unusedRec DeadTest.res:74:8 path:+DeadTest
  addValueDeclaration +split_map DeadTest.res:76:8 path:+DeadTest
  addValueDeclaration +rec1 DeadTest.res:81:8 path:+DeadTest
  addValueDeclaration +rec2 DeadTest.res:82:4 path:+DeadTest
  addValueDeclaration +recWithCallback DeadTest.res:84:8 path:+DeadTest
  addValueDeclaration +foo DeadTest.res:89:8 path:+DeadTest
  addValueDeclaration +bar DeadTest.res:93:4 path:+DeadTest
  addValueDeclaration +withDefaultValue DeadTest.res:95:4 path:+DeadTest
  addValueDeclaration +unsafe_string1 DeadTest.res:97:0 path:+DeadTest
  addValueDeclaration +unsafe_string2 DeadTest.res:100:2 path:+DeadTest.Ext_buffer
  addValueDeclaration +reasonResource DeadTest.res:107:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +makeProps DeadTest.res:107:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +make DeadTest.res:107:40 path:+DeadTest.LazyDynamicallyLoadedComponent
  addValueDeclaration +reasonResource DeadTest.res:112:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +makeProps DeadTest.res:115:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +make DeadTest.res:116:6 path:+DeadTest.LazyDynamicallyLoadedComponent2
  addValueDeclaration +cmp DeadTest.res:126:4 path:+DeadTest
  addValueDeclaration +cmp2 DeadTest.res:128:4 path:+DeadTest
  addValueDeclaration +zzz DeadTest.res:140:4 path:+DeadTest
  addValueDeclaration +second DeadTest.res:148:4 path:+DeadTest
  addValueDeclaration +minute DeadTest.res:149:4 path:+DeadTest
  addValueDeclaration +deadRef DeadTest.res:151:4 path:+DeadTest
  addValueDeclaration +makeSwitch DeadTest.res:153:4 path:+DeadTest
  addValueDeclaration +make DeadTest.res:156:4 path:+DeadTest
  addValueDeclaration +theSideEffectIsLogging DeadTest.res:160:4 path:+DeadTest
  addValueDeclaration +stringLengthNoSideEffects DeadTest.res:162:4 path:+DeadTest
  addValueDeclaration +globallyLive1 DeadTest.res:167:6 path:+DeadTest.GloobLive
  addValueDeclaration +globallyLive2 DeadTest.res:168:6 path:+DeadTest.GloobLive
  addValueDeclaration +globallyLive3 DeadTest.res:169:6 path:+DeadTest.GloobLive
  addValueReference DeadTest.res:1:15 --> ImmutableArray.resi:9:0
  addValueReference DeadTest.res:7:7 --> DeadTest.res:6:4
  addValueReference DeadTest.res:10:7 --> DeadTest.res:9:4
  addValueReference DeadTest.res:11:7 --> DeadTest.res:9:4
  addValueReference DeadTest.res:19:4 --> DeadTest.res:16:4
  addValueDeclaration +thisSignatureItemIsDead DeadTest.res:30:6 path:+DeadTest.M
  addVariantCaseDeclaration A DeadTest.res:34:11 path:+DeadTest.VariantUsedOnlyInImplementation.t
  addVariantCaseDeclaration A DeadTest.res:37:11 path:+DeadTest.VariantUsedOnlyInImplementation.t
  extendTypeDependencies DeadTest.res:37:11 --> DeadTest.res:34:11
  extendTypeDependencies DeadTest.res:34:11 --> DeadTest.res:37:11
  addValueDeclaration +a DeadTest.res:38:6 path:+DeadTest.VariantUsedOnlyInImplementation
  addTypeReference DeadTest.res:38:10 --> DeadTest.res:37:11
  addValueReference DeadTest.res:41:17 --> DeadTest.res:35:2
  addValueReference DeadTest.res:41:14 --> DeadTest.res:41:9
  addValueDeclaration +_ DeadTest.res:43:0 path:+DeadTest
  addTypeReference DeadTest.res:43:8 --> DeadTypeTest.resi:8:2
  addValueDeclaration +_ DeadTest.res:44:0 path:+DeadTest
  addTypeReference DeadTest.res:44:8 --> DeadTypeTest.resi:9:2
  addRecordLabelDeclaration xxx DeadTest.res:47:2 path:+DeadTest.record
  addRecordLabelDeclaration yyy DeadTest.res:48:2 path:+DeadTest.record
  addValueDeclaration +_ DeadTest.res:51:0 path:+DeadTest
  addTypeReference DeadTest.res:51:13 --> DeadTest.res:47:2
  addValueReference DeadTest.res:51:13 --> DeadTest.res:51:8
  addValueDeclaration +_ DeadTest.res:52:0 path:+DeadTest
  addValueReference DeadTest.res:52:19 --> DeadTest.res:52:10
  addTypeReference DeadTest.res:52:9 --> DeadTest.res:48:2
  addValueDeclaration +_ DeadTest.res:55:2 path:+DeadTest.UnderscoreInside
  addValueDeclaration +y DeadTest.res:62:6 path:+DeadTest.MM
  addValueDeclaration +x DeadTest.res:63:6 path:+DeadTest.MM
  addValueReference DeadTest.res:63:6 --> DeadTest.res:62:6
  addValueDeclaration +valueOnlyInImplementation DeadTest.res:64:6 path:+DeadTest.MM
  addValueReference DeadTest.res:68:9 --> DeadTest.res:59:2
  addValueReference DeadTest.res:72:16 --> DeadValueTest.resi:1:0
  addValueReference DeadTest.res:74:8 --> DeadTest.res:74:8
  addValueReference DeadTest.res:76:8 --> DeadTest.res:76:20
  addValueReference DeadTest.res:76:8 --> DeadTest.res:76:8
  addValueReference DeadTest.res:81:8 --> DeadTest.res:82:4
  addValueReference DeadTest.res:82:4 --> DeadTest.res:81:8
  addValueDeclaration +cb DeadTest.res:85:6 path:+DeadTest
  addValueReference DeadTest.res:85:6 --> DeadTest.res:84:8
  addValueReference DeadTest.res:84:8 --> DeadTest.res:85:6
  addValueDeclaration +cb DeadTest.res:90:6 path:+DeadTest
  addValueReference DeadTest.res:90:6 --> DeadTest.res:93:4
  addValueReference DeadTest.res:89:8 --> DeadTest.res:90:6
  addValueReference DeadTest.res:93:4 --> DeadTest.res:89:8
  addValueReference DeadTest.res:95:4 --> DeadTest.res:95:42
  addValueReference DeadTest.res:95:4 --> DeadTest.res:95:24
  addValueReference DeadTest.res:95:4 --> DeadTest.res:95:45
  addValueDeclaration +unsafe_string2 DeadTest.res:102:2 path:+DeadTest.Ext_buffer
  addTypeReference DeadTest.res:105:16 --> DeadRT.resi:2:2
  addValueReference DeadTest.res:107:40 --> JSResource.res:3:0
  addValueReference DeadTest.res:107:40 --> DynamicallyLoadedComponent.res:2:4
  addValueReference DeadTest.res:107:40 --> DeadTest.res:107:40
  addValueReference DeadTest.res:107:40 --> BootloaderResource.res:3:0
  addValueReference DeadTest.res:107:40 --> DeadTest.res:107:40
  addValueReference DeadTest.res:107:40 --> React.re:18:0
  addValueReference DeadTest.res:114:6 --> JSResource.res:3:0
  addValueReference DeadTest.res:116:6 --> DynamicallyLoadedComponent.res:2:4
  addValueReference DeadTest.res:116:6 --> DeadTest.res:112:6
  addValueReference DeadTest.res:116:6 --> BootloaderResource.res:3:0
  addValueReference DeadTest.res:116:6 --> DeadTest.res:116:13
  addValueReference DeadTest.res:116:6 --> React.re:18:0
  addValueReference DeadTest.res:126:4 --> DeadTest.res:107:40
  DeadOptionalArgs.addReferences LazyDynamicallyLoadedComponent.makeProps called with optional argNames: argNamesMaybe: DeadTest.res:126:11
  addValueReference DeadTest.res:126:4 --> DeadTest.res:107:40
  addValueReference DeadTest.res:126:4 --> React.re:18:0
  addValueReference DeadTest.res:128:4 --> DeadTest.res:116:6
  DeadOptionalArgs.addReferences LazyDynamicallyLoadedComponent2.makeProps called with optional argNames: argNamesMaybe: DeadTest.res:128:18
  addValueReference DeadTest.res:128:4 --> DeadTest.res:115:6
  addValueReference DeadTest.res:128:4 --> React.re:18:0
  addValueReference DeadTest.res:130:16 --> DeadTest.res:126:4
  addValueDeclaration +a1 DeadTest.res:141:6 path:+DeadTest
  addValueDeclaration +a2 DeadTest.res:142:6 path:+DeadTest
  addValueDeclaration +a3 DeadTest.res:143:6 path:+DeadTest
  addValueReference DeadTest.res:146:17 --> DynamicallyLoadedComponent.res:2:4
  addValueReference DeadTest.res:146:17 --> React.re:18:0
  addValueReference DeadTest.res:149:4 --> DeadTest.res:148:4
  addValueReference DeadTest.res:153:4 --> ExportWithRename.res:2:4
  addValueReference DeadTest.res:156:32 --> DeadTest.res:156:12
  addValueReference DeadTest.res:156:19 --> React.re:7:0
  addValueReference DeadTest.res:158:16 --> DeadTest.res:156:4
  addValueReference DeadTest.res:164:30 --> DeadTest.res:164:22
  addTypeReference DeadTest.res:164:21 --> trace.mli:3:11
  addValueReference DeadTest.res:164:0 --> trace.mli:5:0
  addVariantCaseDeclaration A DeadTest.res:173:11 path:+DeadTest.WithInclude.t
  addVariantCaseDeclaration A DeadTest.res:176:13 path:+DeadTest.WithInclude.T.t
  addVariantCaseDeclaration A DeadTest.res:176:13 path:+DeadTest.WithInclude.t
  extendTypeDependencies DeadTest.res:176:13 --> DeadTest.res:173:11
  extendTypeDependencies DeadTest.res:173:11 --> DeadTest.res:176:13
  addTypeReference DeadTest.res:181:7 --> DeadTest.res:173:11
  addValueReference ExportWithRename.res:2:4 --> DynamicallyLoadedComponent.res:2:4
  addValueReference DynamicallyLoadedComponent.res:2:4 --> ExportWithRename.res:2:4
  addValueReference DeadTest.res:35:2 --> DeadTest.res:38:6
  addValueReference DeadTest.res:59:2 --> DeadTest.res:63:6
  addValueReference DeadTest.res:60:2 --> DeadTest.res:62:6
  addValueReference DeadTest.res:100:2 --> DeadTest.res:102:2
  addTypeReference DeadTest.res:176:13 --> DeadTest.res:173:11
  addTypeReference DeadTest.res:173:11 --> DeadTest.res:176:13
  addTypeReference DeadTest.res:37:11 --> DeadTest.res:34:11
  addTypeReference DeadTest.res:34:11 --> DeadTest.res:37:11
  addTypeReference DeadRT.res:3:2 --> DeadRT.resi:3:2
  addTypeReference DeadRT.resi:3:2 --> DeadRT.res:3:2
  addTypeReference DeadRT.res:2:2 --> DeadRT.resi:2:2
  addTypeReference DeadRT.resi:2:2 --> DeadRT.res:2:2
  Scanning DeadTestBlacklist.cmt Source:DeadTestBlacklist.res
  addValueDeclaration +x DeadTestBlacklist.res:1:4 path:+DeadTestBlacklist
  Scanning DeadTestWithInterface.cmt Source:DeadTestWithInterface.res
  addValueDeclaration +x DeadTestWithInterface.res:2:2 path:+DeadTestWithInterface.Ext_buffer
  addValueDeclaration +x DeadTestWithInterface.res:4:6 path:+DeadTestWithInterface.Ext_buffer
  addValueReference DeadTestWithInterface.res:2:2 --> DeadTestWithInterface.res:4:6
>>>>>>> Check differences in DCE analysis after conversion.
  Interface 0
  Scanning DeadTypeTest.cmt Source:DeadTypeTest.res
  addValueDeclaration +a DeadTypeTest.res:4:4 path:+DeadTypeTest
  addVariantCaseDeclaration A DeadTypeTest.res:2:2 path:+DeadTypeTest.t
  addVariantCaseDeclaration B DeadTypeTest.res:3:2 path:+DeadTypeTest.t
  addTypeReference DeadTypeTest.res:4:8 --> DeadTypeTest.res:2:2
  addVariantCaseDeclaration OnlyInImplementation DeadTypeTest.res:7:2 path:+DeadTypeTest.deadType
  addVariantCaseDeclaration OnlyInInterface DeadTypeTest.res:8:2 path:+DeadTypeTest.deadType
  addVariantCaseDeclaration InBoth DeadTypeTest.res:9:2 path:+DeadTypeTest.deadType
  addVariantCaseDeclaration InNeither DeadTypeTest.res:10:2 path:+DeadTypeTest.deadType
  addValueDeclaration +_ DeadTypeTest.res:12:0 path:+DeadTypeTest
  addTypeReference DeadTypeTest.res:12:8 --> DeadTypeTest.res:7:2
  addValueDeclaration +_ DeadTypeTest.res:13:0 path:+DeadTypeTest
  addTypeReference DeadTypeTest.res:13:8 --> DeadTypeTest.res:9:2
  addValueReference DeadTypeTest.resi:4:0 --> DeadTypeTest.res:4:4
  Scanning DeadTypeTest.cmti Source:DeadTypeTest.resi
  addVariantCaseDeclaration A DeadTypeTest.resi:2:2 path:DeadTypeTest.t
  extendTypeDependencies DeadTypeTest.res:2:2 --> DeadTypeTest.resi:2:2
  extendTypeDependencies DeadTypeTest.resi:2:2 --> DeadTypeTest.res:2:2
  addVariantCaseDeclaration B DeadTypeTest.resi:3:2 path:DeadTypeTest.t
  extendTypeDependencies DeadTypeTest.res:3:2 --> DeadTypeTest.resi:3:2
  extendTypeDependencies DeadTypeTest.resi:3:2 --> DeadTypeTest.res:3:2
  addValueDeclaration +a DeadTypeTest.resi:4:0 path:DeadTypeTest
  addVariantCaseDeclaration OnlyInImplementation DeadTypeTest.resi:7:2 path:DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.res:7:2 --> DeadTypeTest.resi:7:2
  extendTypeDependencies DeadTypeTest.resi:7:2 --> DeadTypeTest.res:7:2
  addVariantCaseDeclaration OnlyInInterface DeadTypeTest.resi:8:2 path:DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.res:8:2 --> DeadTypeTest.resi:8:2
  extendTypeDependencies DeadTypeTest.resi:8:2 --> DeadTypeTest.res:8:2
  addVariantCaseDeclaration InBoth DeadTypeTest.resi:9:2 path:DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.res:9:2 --> DeadTypeTest.resi:9:2
  extendTypeDependencies DeadTypeTest.resi:9:2 --> DeadTypeTest.res:9:2
  addVariantCaseDeclaration InNeither DeadTypeTest.resi:10:2 path:DeadTypeTest.deadType
  extendTypeDependencies DeadTypeTest.res:10:2 --> DeadTypeTest.resi:10:2
  extendTypeDependencies DeadTypeTest.resi:10:2 --> DeadTypeTest.res:10:2
  Scanning DeadValueTest.cmt Source:DeadValueTest.res
  addValueDeclaration +valueAlive DeadValueTest.res:1:4 path:+DeadValueTest
  addValueDeclaration +valueDead DeadValueTest.res:2:4 path:+DeadValueTest
  addValueDeclaration +valueOnlyInImplementation DeadValueTest.res:4:4 path:+DeadValueTest
  addValueDeclaration +subList DeadValueTest.res:6:8 path:+DeadValueTest
  addValueDeclaration +tail DeadValueTest.res:10:8 path:+DeadValueTest
  addValueReference DeadValueTest.res:10:8 --> DeadValueTest.res:6:19
  addValueReference DeadValueTest.res:10:8 --> DeadValueTest.res:6:22
  addValueReference DeadValueTest.res:10:8 --> DeadValueTest.res:9:15
  addValueReference DeadValueTest.res:10:8 --> DeadValueTest.res:6:8
  addValueReference DeadValueTest.res:10:8 --> DeadValueTest.res:6:22
  addValueReference DeadValueTest.res:6:8 --> DeadValueTest.res:9:9
  addValueReference DeadValueTest.res:6:8 --> DeadValueTest.res:10:8
  addValueReference DeadValueTest.res:6:8 --> DeadValueTest.res:10:8
  addValueReference DeadValueTest.res:6:8 --> DeadValueTest.res:6:19
  addValueReference DeadValueTest.res:6:8 --> DeadValueTest.res:6:25
  addValueReference DeadValueTest.resi:1:0 --> DeadValueTest.res:1:4
  addValueReference DeadValueTest.resi:2:0 --> DeadValueTest.res:2:4
  addTypeReference DeadTypeTest.res:10:2 --> DeadTypeTest.resi:10:2
  addTypeReference DeadTypeTest.resi:10:2 --> DeadTypeTest.res:10:2
  addTypeReference DeadTypeTest.res:9:2 --> DeadTypeTest.resi:9:2
  addTypeReference DeadTypeTest.resi:9:2 --> DeadTypeTest.res:9:2
  addTypeReference DeadTypeTest.res:8:2 --> DeadTypeTest.resi:8:2
  addTypeReference DeadTypeTest.resi:8:2 --> DeadTypeTest.res:8:2
  addTypeReference DeadTypeTest.res:7:2 --> DeadTypeTest.resi:7:2
  addTypeReference DeadTypeTest.resi:7:2 --> DeadTypeTest.res:7:2
  addTypeReference DeadTypeTest.res:3:2 --> DeadTypeTest.resi:3:2
  addTypeReference DeadTypeTest.resi:3:2 --> DeadTypeTest.res:3:2
  addTypeReference DeadTypeTest.res:2:2 --> DeadTypeTest.resi:2:2
  addTypeReference DeadTypeTest.resi:2:2 --> DeadTypeTest.res:2:2
  Scanning DeadValueTest.cmti Source:DeadValueTest.resi
  addValueDeclaration +valueAlive DeadValueTest.resi:1:0 path:DeadValueTest
  addValueDeclaration +valueDead DeadValueTest.resi:2:0 path:DeadValueTest
  Scanning Docstrings.cmt Source:Docstrings.res
  addValueDeclaration +flat Docstrings.res:2:4 path:+Docstrings
  addValueDeclaration +signMessage Docstrings.res:14:4 path:+Docstrings
  addValueDeclaration +one Docstrings.res:16:7 path:+Docstrings
  addValueDeclaration +two Docstrings.res:18:7 path:+Docstrings
  addValueDeclaration +tree Docstrings.res:20:7 path:+Docstrings
  addValueDeclaration +oneU Docstrings.res:22:7 path:+Docstrings
  addValueDeclaration +twoU Docstrings.res:24:7 path:+Docstrings
  addValueDeclaration +treeU Docstrings.res:26:7 path:+Docstrings
  addValueDeclaration +useParam Docstrings.res:28:7 path:+Docstrings
  addValueDeclaration +useParamU Docstrings.res:30:7 path:+Docstrings
  addValueDeclaration +unnamed1 Docstrings.res:32:7 path:+Docstrings
  addValueDeclaration +unnamed1U Docstrings.res:34:7 path:+Docstrings
  addValueDeclaration +unnamed2 Docstrings.res:36:7 path:+Docstrings
  addValueDeclaration +unnamed2U Docstrings.res:38:7 path:+Docstrings
  addValueDeclaration +grouped Docstrings.res:40:7 path:+Docstrings
  addValueDeclaration +unitArgWithoutConversion Docstrings.res:42:7 path:+Docstrings
  addValueDeclaration +unitArgWithoutConversionU Docstrings.res:44:7 path:+Docstrings
  addValueDeclaration +unitArgWithConversion Docstrings.res:50:7 path:+Docstrings
  addValueDeclaration +unitArgWithConversionU Docstrings.res:52:7 path:+Docstrings
  addValueReference Docstrings.res:14:4 --> Docstrings.res:14:21
  addValueReference Docstrings.res:14:4 --> Docstrings.res:14:30
  addValueReference Docstrings.res:16:7 --> Docstrings.res:16:13
  addValueReference Docstrings.res:18:7 --> Docstrings.res:18:14
  addValueReference Docstrings.res:18:7 --> Docstrings.res:18:17
  addValueReference Docstrings.res:20:7 --> Docstrings.res:20:15
  addValueReference Docstrings.res:20:7 --> Docstrings.res:20:18
  addValueReference Docstrings.res:20:7 --> Docstrings.res:20:21
  addValueReference Docstrings.res:22:7 --> Docstrings.res:22:17
  addValueReference Docstrings.res:24:7 --> Docstrings.res:24:17
  addValueReference Docstrings.res:24:7 --> Docstrings.res:24:20
  addValueReference Docstrings.res:26:7 --> Docstrings.res:26:18
  addValueReference Docstrings.res:26:7 --> Docstrings.res:26:21
  addValueReference Docstrings.res:26:7 --> Docstrings.res:26:24
  addValueReference Docstrings.res:28:7 --> Docstrings.res:28:18
  addValueReference Docstrings.res:30:7 --> Docstrings.res:30:22
  addValueReference Docstrings.res:40:7 --> Docstrings.res:40:18
  addValueReference Docstrings.res:40:7 --> Docstrings.res:40:22
  addValueReference Docstrings.res:40:7 --> Docstrings.res:40:26
  addValueReference Docstrings.res:40:7 --> Docstrings.res:40:29
  addValueReference Docstrings.res:40:7 --> Docstrings.res:40:32
  addValueReference Docstrings.res:40:7 --> Docstrings.res:40:35
  addVariantCaseDeclaration A Docstrings.res:47:2 path:+Docstrings.t
  addVariantCaseDeclaration B Docstrings.res:48:2 path:+Docstrings.t
  addTypeReference Docstrings.res:50:37 --> Docstrings.res:47:2
  addTypeReference Docstrings.res:52:42 --> Docstrings.res:47:2
  Scanning DynamicallyLoadedComponent.cmt Source:DynamicallyLoadedComponent.res
  addValueDeclaration +make DynamicallyLoadedComponent.res:2:4 path:+DynamicallyLoadedComponent
  addValueReference DynamicallyLoadedComponent.res:2:32 --> DynamicallyLoadedComponent.res:2:12
  addValueReference DynamicallyLoadedComponent.res:2:19 --> React.re:7:0
  Scanning ErrorHandler.cmt Source:ErrorHandler.res
  addValueDeclaration +notify ErrorHandler.res:7:6 path:+ErrorHandler.Make
  addValueDeclaration +x ErrorHandler.res:11:7 path:+ErrorHandler
  addValueReference ErrorHandler.res:7:6 --> ErrorHandler.res:7:15
  addValueReference ErrorHandler.res:7:6 --> ErrorHandler.res:3:2
  addValueReference ErrorHandler.resi:3:2 --> ErrorHandler.res:3:2
  addValueReference ErrorHandler.res:3:2 --> ErrorHandler.resi:3:2
  addValueReference ErrorHandler.resi:7:2 --> ErrorHandler.res:7:6
  addValueReference ErrorHandler.resi:10:0 --> ErrorHandler.res:11:7
  Scanning ErrorHandler.cmti Source:ErrorHandler.resi
  addValueDeclaration +notify ErrorHandler.resi:7:2 path:ErrorHandler.Make
  addValueDeclaration +x ErrorHandler.resi:10:0 path:ErrorHandler
  Scanning EverythingLiveHere.cmt Source:EverythingLiveHere.res
  addValueDeclaration +x EverythingLiveHere.res:1:4 path:+EverythingLiveHere
  addValueDeclaration +y EverythingLiveHere.res:3:4 path:+EverythingLiveHere
  addValueDeclaration +z EverythingLiveHere.res:5:4 path:+EverythingLiveHere
  Scanning FirstClassModules.cmt Source:FirstClassModules.res
  addValueDeclaration +y FirstClassModules.res:25:6 path:+FirstClassModules.M
  addValueDeclaration +k FirstClassModules.res:33:8 path:+FirstClassModules.M.InnerModule2
  addValueDeclaration +k3 FirstClassModules.res:37:8 path:+FirstClassModules.M.InnerModule3
  addValueDeclaration +u FirstClassModules.res:44:8 path:+FirstClassModules.M.Z
  addValueDeclaration +f FirstClassModules.res:47:2 path:+FirstClassModules.M
  addValueDeclaration +x FirstClassModules.res:48:6 path:+FirstClassModules.M
  addValueDeclaration +firstClassModule FirstClassModules.res:53:7 path:+FirstClassModules
  addValueDeclaration +testConvert FirstClassModules.res:55:7 path:+FirstClassModules
  addValueDeclaration +someFunctorAsFunction FirstClassModules.res:65:7 path:+FirstClassModules
  addValueReference FirstClassModules.res:37:8 --> FirstClassModules.res:37:13
  addValueDeclaration +f FirstClassModules.res:47:20 path:+FirstClassModules.M
  addValueReference FirstClassModules.res:55:7 --> FirstClassModules.res:55:22
  addValueDeclaration +ww FirstClassModules.res:62:6 path:+FirstClassModules.SomeFunctor
  addValueReference FirstClassModules.res:62:6 --> FirstClassModules.res:22:2
  addValueReference FirstClassModules.res:65:7 --> FirstClassModules.res:65:32
  addValueReference FirstClassModules.res:2:2 --> FirstClassModules.res:48:6
  addValueReference FirstClassModules.res:4:2 --> FirstClassModules.res:47:2
  addValueReference FirstClassModules.res:12:4 --> FirstClassModules.res:33:8
  addValueReference FirstClassModules.res:16:4 --> FirstClassModules.res:37:8
  addValueReference FirstClassModules.res:19:4 --> FirstClassModules.res:41:4
  addValueReference FirstClassModules.res:41:4 --> FirstClassModules.res:19:4
  addValueReference FirstClassModules.res:41:4 --> FirstClassModules.res:44:8
  addValueReference FirstClassModules.res:22:2 --> FirstClassModules.res:25:6
  addValueReference FirstClassModules.res:58:2 --> FirstClassModules.res:62:6
  Scanning FirstClassModulesInterface.cmt Source:FirstClassModulesInterface.res
  addValueDeclaration +r FirstClassModulesInterface.res:6:4 path:+FirstClassModulesInterface
  addRecordLabelDeclaration x FirstClassModulesInterface.res:2:2 path:+FirstClassModulesInterface.record
  addRecordLabelDeclaration y FirstClassModulesInterface.res:3:2 path:+FirstClassModulesInterface.record
  addValueReference FirstClassModulesInterface.resi:6:0 --> FirstClassModulesInterface.res:6:4
  addValueReference FirstClassModulesInterface.resi:10:2 --> FirstClassModulesInterface.res:9:2
  addValueReference FirstClassModulesInterface.res:9:2 --> FirstClassModulesInterface.resi:10:2
  Scanning FirstClassModulesInterface.cmti Source:FirstClassModulesInterface.resi
  addRecordLabelDeclaration x FirstClassModulesInterface.resi:2:2 path:FirstClassModulesInterface.record
  extendTypeDependencies FirstClassModulesInterface.res:2:2 --> FirstClassModulesInterface.resi:2:2
  extendTypeDependencies FirstClassModulesInterface.resi:2:2 --> FirstClassModulesInterface.res:2:2
  addRecordLabelDeclaration y FirstClassModulesInterface.resi:3:2 path:FirstClassModulesInterface.record
  extendTypeDependencies FirstClassModulesInterface.res:3:2 --> FirstClassModulesInterface.resi:3:2
  extendTypeDependencies FirstClassModulesInterface.resi:3:2 --> FirstClassModulesInterface.res:3:2
  addValueDeclaration +r FirstClassModulesInterface.resi:6:0 path:FirstClassModulesInterface
  Scanning Hooks.cmt Source:Hooks.res
  addValueDeclaration +make Hooks.res:4:4 path:+Hooks
  addValueDeclaration +default Hooks.res:24:7 path:+Hooks
  addValueDeclaration +anotherComponent Hooks.res:27:7 path:+Hooks
  addValueDeclaration +make Hooks.res:34:9 path:+Hooks.Inner
  addValueDeclaration +anotherComponent Hooks.res:37:9 path:+Hooks.Inner
  addValueDeclaration +make Hooks.res:42:11 path:+Hooks.Inner.Inner2
  addValueDeclaration +anotherComponent Hooks.res:45:11 path:+Hooks.Inner.Inner2
  addValueDeclaration +make Hooks.res:52:9 path:+Hooks.NoProps
  addValueDeclaration +functionWithRenamedArgs Hooks.res:57:7 path:+Hooks
  addValueDeclaration +componentWithRenamedArgs Hooks.res:63:7 path:+Hooks
  addValueDeclaration +makeWithRef Hooks.res:69:7 path:+Hooks
  addValueDeclaration +testForwardRef Hooks.res:78:7 path:+Hooks
  addValueDeclaration +input Hooks.res:83:7 path:+Hooks
  addValueDeclaration +polymorphicComponent Hooks.res:96:7 path:+Hooks
  addValueDeclaration +functionReturningReactElement Hooks.res:99:7 path:+Hooks
  addValueDeclaration +make Hooks.res:103:9 path:+Hooks.RenderPropRequiresConversion
  addValueDeclaration +aComponentWithChildren Hooks.res:110:7 path:+Hooks
  addRecordLabelDeclaration name Hooks.res:1:16 path:+Hooks.vehicle
  addValueReference Hooks.res:5:26 --> React.re:183:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:7:3
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:8:5
  addTypeReference Hooks.res:10:29 --> Hooks.res:1:16
  addValueReference Hooks.res:10:29 --> Hooks.res:4:12
  addValueReference Hooks.res:10:76 --> Hooks.res:5:7
  addValueReference Hooks.res:9:7 --> React.re:7:0
  addValueReference Hooks.res:8:5 --> ReactDOMRe.re:114:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames:props argNamesMaybe: Hooks.res:13:5
  addValueReference Hooks.res:13:40 --> Hooks.res:5:7
  addValueReference Hooks.res:13:26 --> Hooks.res:5:14
  addValueReference Hooks.res:13:54 --> React.re:7:0
  addValueReference Hooks.res:13:5 --> ReactDOMRe.re:114:0
  addValueReference Hooks.res:14:5 --> ImportHooks.res:9:0
  DeadOptionalArgs.addReferences ImportHooks.makeProps called with optional argNames: argNamesMaybe: Hooks.res:14:5
  addValueReference Hooks.res:14:5 --> React.re:3:0
  addValueReference Hooks.res:14:63 --> React.re:7:0
  addValueReference Hooks.res:14:5 --> ImportHooks.res:8:0
  addValueReference Hooks.res:15:7 --> React.re:7:0
  addValueReference Hooks.res:15:32 --> React.re:7:0
  addValueReference Hooks.res:14:5 --> React.re:25:0
  addValueReference Hooks.res:17:5 --> ImportHookDefault.res:7:0
  DeadOptionalArgs.addReferences ImportHookDefault.makeProps called with optional argNames: argNamesMaybe: Hooks.res:17:5
  addValueReference Hooks.res:17:5 --> React.re:3:0
  addValueReference Hooks.res:18:61 --> React.re:7:0
  addValueReference Hooks.res:17:5 --> ImportHookDefault.res:6:0
  addValueReference Hooks.res:19:7 --> React.re:7:0
  addValueReference Hooks.res:19:32 --> React.re:7:0
  addValueReference Hooks.res:17:5 --> React.re:25:0
  addValueReference Hooks.res:7:3 --> ReactDOMRe.re:114:0
  addValueReference Hooks.res:24:7 --> Hooks.res:4:4
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:29:3
  addTypeReference Hooks.res:29:41 --> Hooks.res:1:16
  addValueReference Hooks.res:29:41 --> Hooks.res:27:27
  addValueReference Hooks.res:29:9 --> React.re:7:0
  addValueReference Hooks.res:29:3 --> ReactDOMRe.re:114:0
  addValueReference Hooks.res:28:2 --> Hooks.res:27:37
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:34:31
  addTypeReference Hooks.res:34:69 --> Hooks.res:1:16
  addValueReference Hooks.res:34:69 --> Hooks.res:34:17
  addValueReference Hooks.res:34:37 --> React.re:7:0
  addValueReference Hooks.res:34:31 --> ReactDOMRe.re:114:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:38:5
  addTypeReference Hooks.res:38:43 --> Hooks.res:1:16
  addValueReference Hooks.res:38:43 --> Hooks.res:37:29
  addValueReference Hooks.res:38:11 --> React.re:7:0
  addValueReference Hooks.res:38:5 --> ReactDOMRe.re:114:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:42:33
  addTypeReference Hooks.res:42:71 --> Hooks.res:1:16
  addValueReference Hooks.res:42:71 --> Hooks.res:42:19
  addValueReference Hooks.res:42:39 --> React.re:7:0
  addValueReference Hooks.res:42:33 --> ReactDOMRe.re:114:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:46:7
  addTypeReference Hooks.res:46:45 --> Hooks.res:1:16
  addValueReference Hooks.res:46:45 --> Hooks.res:45:31
  addValueReference Hooks.res:46:13 --> React.re:7:0
  addValueReference Hooks.res:46:7 --> ReactDOMRe.re:114:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:52:23
  addValueReference Hooks.res:52:28 --> ReasonReact.rei:15:0
  addValueReference Hooks.res:52:23 --> ReactDOMRe.re:114:0
  addTypeReference Hooks.res:59:2 --> Hooks.res:1:16
  addValueReference Hooks.res:57:7 --> Hooks.res:57:34
  addTypeReference Hooks.res:59:14 --> Hooks.res:1:16
  addValueReference Hooks.res:57:7 --> Hooks.res:57:40
  addValueReference Hooks.res:57:7 --> Hooks.res:57:34
  addValueReference Hooks.res:57:7 --> Hooks.res:57:48
  addTypeReference Hooks.res:65:15 --> Hooks.res:1:16
  addValueReference Hooks.res:65:15 --> Hooks.res:63:35
  addTypeReference Hooks.res:65:27 --> Hooks.res:1:16
  addValueReference Hooks.res:65:27 --> Hooks.res:63:41
  addValueReference Hooks.res:65:2 --> React.re:7:0
  addValueReference Hooks.res:64:6 --> Hooks.res:63:35
  addValueReference Hooks.res:64:2 --> Hooks.res:63:49
  addValueDeclaration +_ Hooks.res:70:2 path:+Hooks
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames:props argNamesMaybe: Hooks.res:73:20
  addValueReference Hooks.res:73:54 --> Hooks.res:73:11
  addValueReference Hooks.res:73:32 --> ReactDOMRe.re:108:2
  addTypeReference Hooks.res:73:75 --> Hooks.res:1:16
  addValueReference Hooks.res:73:75 --> Hooks.res:69:22
  addValueReference Hooks.res:73:62 --> React.re:7:0
  addValueReference Hooks.res:73:20 --> ReactDOMRe.re:114:0
  addValueReference Hooks.res:74:14 --> React.re:3:0
  addValueReference Hooks.res:72:11 --> Hooks.res:71:2
  addValueReference Hooks.res:78:7 --> Hooks.res:69:7
  addValueReference Hooks.res:78:7 --> React.re:96:0
  addRecordLabelDeclaration x Hooks.res:80:10 path:+Hooks.r
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames:props argNamesMaybe: Hooks.res:84:3
  addValueReference Hooks.res:84:22 --> Hooks.res:83:41
  addTypeReference Hooks.res:84:43 --> Hooks.res:80:10
  addValueReference Hooks.res:84:43 --> Hooks.res:83:33
  addValueReference Hooks.res:84:30 --> React.re:7:0
  addValueReference Hooks.res:84:3 --> ReactDOMRe.re:114:0
  addValueReference Hooks.res:83:7 --> React.re:96:0
  addTypeReference Hooks.res:96:61 --> Hooks.res:1:16
  addValueReference Hooks.res:96:61 --> Hooks.res:96:38
  addValueReference Hooks.res:96:48 --> React.re:7:0
  addValueReference Hooks.res:99:63 --> Hooks.res:99:40
  addValueReference Hooks.res:99:50 --> React.re:7:0
  addValueDeclaration +car Hooks.res:104:8 path:+Hooks.RenderPropRequiresConversion
  addValueReference Hooks.res:105:30 --> Hooks.res:104:8
  addValueReference Hooks.res:105:18 --> Hooks.res:105:18
  addValueReference Hooks.res:105:4 --> Hooks.res:103:17
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:111:3
  addTypeReference Hooks.res:111:41 --> Hooks.res:1:16
  addValueReference Hooks.res:111:41 --> Hooks.res:110:33
  addValueReference Hooks.res:111:9 --> React.re:7:0
  DeadOptionalArgs.addReferences ReactDOMRe.createDOMElementVariadic called with optional argNames: argNamesMaybe: Hooks.res:111:57
  addValueReference Hooks.res:111:62 --> Hooks.res:110:43
  addValueReference Hooks.res:111:57 --> ReactDOMRe.re:114:0
  addValueReference Hooks.res:111:3 --> ReactDOMRe.re:114:0
  addTypeReference FirstClassModulesInterface.res:3:2 --> FirstClassModulesInterface.resi:3:2
  addTypeReference FirstClassModulesInterface.resi:3:2 --> FirstClassModulesInterface.res:3:2
  addTypeReference FirstClassModulesInterface.res:2:2 --> FirstClassModulesInterface.resi:2:2
  addTypeReference FirstClassModulesInterface.resi:2:2 --> FirstClassModulesInterface.res:2:2
  Scanning IgnoreInterface.cmt Source:IgnoreInterface.res
  Scanning IgnoreInterface.cmti Source:IgnoreInterface.resi
  Scanning ImmutableArray.cmt Source:ImmutableArray.res
  addValueDeclaration +fromT ImmutableArray.res:5:2 path:+ImmutableArray.Array
  addValueDeclaration +fromTp ImmutableArray.res:6:2 path:+ImmutableArray.Array
  addValueDeclaration +fromTT ImmutableArray.res:7:2 path:+ImmutableArray.Array
  addValueDeclaration +toT ImmutableArray.res:8:2 path:+ImmutableArray.Array
  addValueDeclaration +toTp ImmutableArray.res:9:2 path:+ImmutableArray.Array
  addValueDeclaration +toT2 ImmutableArray.res:10:2 path:+ImmutableArray.Array
  addValueDeclaration +fromArray ImmutableArray.res:14:6 path:+ImmutableArray.Array
  addValueDeclaration +toArray ImmutableArray.res:16:6 path:+ImmutableArray.Array
  addValueDeclaration +length ImmutableArray.res:20:6 path:+ImmutableArray.Array
  addValueDeclaration +size ImmutableArray.res:22:6 path:+ImmutableArray.Array
  addValueDeclaration +get ImmutableArray.res:24:6 path:+ImmutableArray.Array
  addValueDeclaration +getExn ImmutableArray.res:26:6 path:+ImmutableArray.Array
  addValueDeclaration +getUnsafe ImmutableArray.res:28:6 path:+ImmutableArray.Array
  addValueDeclaration +getUndefined ImmutableArray.res:30:6 path:+ImmutableArray.Array
  addValueDeclaration +shuffle ImmutableArray.res:32:6 path:+ImmutableArray.Array
  addValueDeclaration +reverse ImmutableArray.res:34:6 path:+ImmutableArray.Array
  addValueDeclaration +makeUninitialized ImmutableArray.res:36:6 path:+ImmutableArray.Array
  addValueDeclaration +makeUninitializedUnsafe ImmutableArray.res:38:6 path:+ImmutableArray.Array
  addValueDeclaration +make ImmutableArray.res:40:6 path:+ImmutableArray.Array
  addValueDeclaration +range ImmutableArray.res:42:6 path:+ImmutableArray.Array
  addValueDeclaration +rangeBy ImmutableArray.res:44:6 path:+ImmutableArray.Array
  addValueDeclaration +makeByU ImmutableArray.res:46:6 path:+ImmutableArray.Array
  addValueDeclaration +makeBy ImmutableArray.res:47:6 path:+ImmutableArray.Array
  addValueDeclaration +makeByAndShuffleU ImmutableArray.res:49:6 path:+ImmutableArray.Array
  addValueDeclaration +makeByAndShuffle ImmutableArray.res:50:6 path:+ImmutableArray.Array
  addValueDeclaration +zip ImmutableArray.res:52:6 path:+ImmutableArray.Array
  addValueDeclaration +zipByU ImmutableArray.res:54:6 path:+ImmutableArray.Array
  addValueDeclaration +zipBy ImmutableArray.res:55:6 path:+ImmutableArray.Array
  addValueDeclaration +unzip ImmutableArray.res:57:6 path:+ImmutableArray.Array
  addValueDeclaration +concat ImmutableArray.res:59:6 path:+ImmutableArray.Array
  addValueDeclaration +concatMany ImmutableArray.res:61:6 path:+ImmutableArray.Array
  addValueDeclaration +slice ImmutableArray.res:63:6 path:+ImmutableArray.Array
  addValueDeclaration +sliceToEnd ImmutableArray.res:65:6 path:+ImmutableArray.Array
  addValueDeclaration +copy ImmutableArray.res:67:6 path:+ImmutableArray.Array
  addValueDeclaration +forEachU ImmutableArray.res:69:6 path:+ImmutableArray.Array
  addValueDeclaration +forEach ImmutableArray.res:70:6 path:+ImmutableArray.Array
  addValueDeclaration +mapU ImmutableArray.res:72:6 path:+ImmutableArray.Array
  addValueDeclaration +map ImmutableArray.res:73:6 path:+ImmutableArray.Array
  addValueDeclaration +keepWithIndexU ImmutableArray.res:75:6 path:+ImmutableArray.Array
  addValueDeclaration +keepWithIndex ImmutableArray.res:76:6 path:+ImmutableArray.Array
  addValueDeclaration +keepMapU ImmutableArray.res:78:6 path:+ImmutableArray.Array
  addValueDeclaration +keepMap ImmutableArray.res:79:6 path:+ImmutableArray.Array
  addValueDeclaration +forEachWithIndexU ImmutableArray.res:81:6 path:+ImmutableArray.Array
  addValueDeclaration +forEachWithIndex ImmutableArray.res:82:6 path:+ImmutableArray.Array
  addValueDeclaration +mapWithIndexU ImmutableArray.res:84:6 path:+ImmutableArray.Array
  addValueDeclaration +mapWithIndex ImmutableArray.res:85:6 path:+ImmutableArray.Array
  addValueDeclaration +partitionU ImmutableArray.res:87:6 path:+ImmutableArray.Array
  addValueDeclaration +partition ImmutableArray.res:88:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceU ImmutableArray.res:90:6 path:+ImmutableArray.Array
  addValueDeclaration +reduce ImmutableArray.res:91:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverseU ImmutableArray.res:93:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverse ImmutableArray.res:94:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverse2U ImmutableArray.res:96:6 path:+ImmutableArray.Array
  addValueDeclaration +reduceReverse2 ImmutableArray.res:97:6 path:+ImmutableArray.Array
  addValueDeclaration +someU ImmutableArray.res:99:6 path:+ImmutableArray.Array
  addValueDeclaration +some ImmutableArray.res:100:6 path:+ImmutableArray.Array
  addValueDeclaration +everyU ImmutableArray.res:102:6 path:+ImmutableArray.Array
  addValueDeclaration +every ImmutableArray.res:103:6 path:+ImmutableArray.Array
  addValueDeclaration +every2U ImmutableArray.res:105:6 path:+ImmutableArray.Array
  addValueDeclaration +every2 ImmutableArray.res:106:6 path:+ImmutableArray.Array
  addValueDeclaration +some2U ImmutableArray.res:108:6 path:+ImmutableArray.Array
  addValueDeclaration +some2 ImmutableArray.res:109:6 path:+ImmutableArray.Array
  addValueDeclaration +cmpU ImmutableArray.res:111:6 path:+ImmutableArray.Array
  addValueDeclaration +cmp ImmutableArray.res:112:6 path:+ImmutableArray.Array
  addValueDeclaration +eqU ImmutableArray.res:114:6 path:+ImmutableArray.Array
  addValueDeclaration +eq ImmutableArray.res:115:6 path:+ImmutableArray.Array
  addValueDeclaration +fromT ImmutableArray.res:5:2 path:+ImmutableArray
  addValueDeclaration +fromTp ImmutableArray.res:6:2 path:+ImmutableArray
  addValueDeclaration +fromTT ImmutableArray.res:7:2 path:+ImmutableArray
  addValueDeclaration +toT ImmutableArray.res:8:2 path:+ImmutableArray
  addValueDeclaration +toTp ImmutableArray.res:9:2 path:+ImmutableArray
  addValueDeclaration +toT2 ImmutableArray.res:10:2 path:+ImmutableArray
  addValueDeclaration +fromArray ImmutableArray.res:14:6 path:+ImmutableArray
  addValueDeclaration +toArray ImmutableArray.res:16:6 path:+ImmutableArray
  addValueDeclaration +length ImmutableArray.res:20:6 path:+ImmutableArray
  addValueDeclaration +size ImmutableArray.res:22:6 path:+ImmutableArray
  addValueDeclaration +get ImmutableArray.res:24:6 path:+ImmutableArray
  addValueDeclaration +getExn ImmutableArray.res:26:6 path:+ImmutableArray
  addValueDeclaration +getUnsafe ImmutableArray.res:28:6 path:+ImmutableArray
  addValueDeclaration +getUndefined ImmutableArray.res:30:6 path:+ImmutableArray
  addValueDeclaration +shuffle ImmutableArray.res:32:6 path:+ImmutableArray
  addValueDeclaration +reverse ImmutableArray.res:34:6 path:+ImmutableArray
  addValueDeclaration +makeUninitialized ImmutableArray.res:36:6 path:+ImmutableArray
  addValueDeclaration +makeUninitializedUnsafe ImmutableArray.res:38:6 path:+ImmutableArray
  addValueDeclaration +make ImmutableArray.res:40:6 path:+ImmutableArray
  addValueDeclaration +range ImmutableArray.res:42:6 path:+ImmutableArray
  addValueDeclaration +rangeBy ImmutableArray.res:44:6 path:+ImmutableArray
  addValueDeclaration +makeByU ImmutableArray.res:46:6 path:+ImmutableArray
  addValueDeclaration +makeBy ImmutableArray.res:47:6 path:+ImmutableArray
  addValueDeclaration +makeByAndShuffleU ImmutableArray.res:49:6 path:+ImmutableArray
  addValueDeclaration +makeByAndShuffle ImmutableArray.res:50:6 path:+ImmutableArray
  addValueDeclaration +zip ImmutableArray.res:52:6 path:+ImmutableArray
  addValueDeclaration +zipByU ImmutableArray.res:54:6 path:+ImmutableArray
  addValueDeclaration +zipBy ImmutableArray.res:55:6 path:+ImmutableArray
  addValueDeclaration +unzip ImmutableArray.res:57:6 path:+ImmutableArray
  addValueDeclaration +concat ImmutableArray.res:59:6 path:+ImmutableArray
  addValueDeclaration +concatMany ImmutableArray.res:61:6 path:+ImmutableArray
  addValueDeclaration +slice ImmutableArray.res:63:6 path:+ImmutableArray
  addValueDeclaration +sliceToEnd ImmutableArray.res:65:6 path:+ImmutableArray
  addValueDeclaration +copy ImmutableArray.res:67:6 path:+ImmutableArray
  addValueDeclaration +forEachU ImmutableArray.res:69:6 path:+ImmutableArray
  addValueDeclaration +forEach ImmutableArray.res:70:6 path:+ImmutableArray
  addValueDeclaration +mapU ImmutableArray.res:72:6 path:+ImmutableArray
  addValueDeclaration +map ImmutableArray.res:73:6 path:+ImmutableArray
  addValueDeclaration +keepWithIndexU ImmutableArray.res:75:6 path:+ImmutableArray
  addValueDeclaration +keepWithIndex ImmutableArray.res:76:6 path:+ImmutableArray
  addValueDeclaration +keepMapU ImmutableArray.res:78:6 path:+ImmutableArray
  addValueDeclaration +keepMap ImmutableArray.res:79:6 path:+ImmutableArray
  addValueDeclaration +forEachWithIndexU ImmutableArray.res:81:6 path:+ImmutableArray
  addValueDeclaration +forEachWithIndex ImmutableArray.res:82:6 path:+ImmutableArray
  addValueDeclaration +mapWithIndexU ImmutableArray.res:84:6 path:+ImmutableArray
  addValueDeclaration +mapWithIndex ImmutableArray.res:85:6 path:+ImmutableArray
  addValueDeclaration +partitionU ImmutableArray.res:87:6 path:+ImmutableArray
  addValueDeclaration +partition ImmutableArray.res:88:6 path:+ImmutableArray
  addValueDeclaration +reduceU ImmutableArray.res:90:6 path:+ImmutableArray
  addValueDeclaration +reduce ImmutableArray.res:91:6 path:+ImmutableArray
  addValueDeclaration +reduceReverseU ImmutableArray.res:93:6 path:+ImmutableArray
  addValueDeclaration +reduceReverse ImmutableArray.res:94:6 path:+ImmutableArray
  addValueDeclaration +reduceReverse2U ImmutableArray.res:96:6 path:+ImmutableArray
  addValueDeclaration +reduceReverse2 ImmutableArray.res:97:6 path:+ImmutableArray
  addValueDeclaration +someU ImmutableArray.res:99:6 path:+ImmutableArray
  addValueDeclaration +some ImmutableArray.res:100:6 path:+ImmutableArray
  addValueDeclaration +everyU ImmutableArray.res:102:6 path:+ImmutableArray
  addValueDeclaration +every ImmutableArray.res:103:6 path:+ImmutableArray
  addValueDeclaration +every2U ImmutableArray.res:105:6 path:+ImmutableArray
  addValueDeclaration +every2 ImmutableArray.res:106:6 path:+ImmutableArray
  addValueDeclaration +some2U ImmutableArray.res:108:6 path:+ImmutableArray
  addValueDeclaration +some2 ImmutableArray.res:109:6 path:+ImmutableArray
  addValueDeclaration +cmpU ImmutableArray.res:111:6 path:+ImmutableArray
  addValueDeclaration +cmp ImmutableArray.res:112:6 path:+ImmutableArray
  addValueDeclaration +eqU ImmutableArray.res:114:6 path:+ImmutableArray
  addValueDeclaration +eq ImmutableArray.res:115:6 path:+ImmutableArray
  addValueReference ImmutableArray.res:14:6 --> ImmutableArray.res:14:18
  addValueReference ImmutableArray.res:14:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:16:6 --> ImmutableArray.res:16:16
  addValueReference ImmutableArray.res:16:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:20:6 --> ImmutableArray.res:20:15
  addValueReference ImmutableArray.res:20:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:22:6 --> ImmutableArray.res:22:13
  addValueReference ImmutableArray.res:22:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:24:6 --> ImmutableArray.res:24:13
  addValueReference ImmutableArray.res:24:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:24:6 --> ImmutableArray.res:24:16
  addValueReference ImmutableArray.res:26:6 --> ImmutableArray.res:26:16
  addValueReference ImmutableArray.res:26:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:26:6 --> ImmutableArray.res:26:19
  addValueReference ImmutableArray.res:28:6 --> ImmutableArray.res:28:19
  addValueReference ImmutableArray.res:28:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:28:6 --> ImmutableArray.res:28:22
  addValueReference ImmutableArray.res:30:6 --> ImmutableArray.res:30:22
  addValueReference ImmutableArray.res:30:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:30:6 --> ImmutableArray.res:30:25
  addValueReference ImmutableArray.res:32:6 --> ImmutableArray.res:32:16
  addValueReference ImmutableArray.res:32:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:32:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:34:6 --> ImmutableArray.res:34:16
  addValueReference ImmutableArray.res:34:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:34:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:36:6 --> ImmutableArray.res:36:26
  addValueReference ImmutableArray.res:36:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:38:6 --> ImmutableArray.res:38:32
  addValueReference ImmutableArray.res:38:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:40:6 --> ImmutableArray.res:40:14
  addValueReference ImmutableArray.res:40:6 --> ImmutableArray.res:40:17
  addValueReference ImmutableArray.res:40:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:42:6 --> ImmutableArray.res:42:15
  addValueReference ImmutableArray.res:42:6 --> ImmutableArray.res:42:18
  addValueReference ImmutableArray.res:42:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:44:6 --> ImmutableArray.res:44:17
  addValueReference ImmutableArray.res:44:6 --> ImmutableArray.res:44:20
  addValueReference ImmutableArray.res:44:6 --> ImmutableArray.res:44:23
  addValueReference ImmutableArray.res:44:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:46:6 --> ImmutableArray.res:46:17
  addValueReference ImmutableArray.res:46:6 --> ImmutableArray.res:46:20
  addValueReference ImmutableArray.res:46:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:47:6 --> ImmutableArray.res:47:16
  addValueReference ImmutableArray.res:47:6 --> ImmutableArray.res:47:19
  addValueReference ImmutableArray.res:47:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:49:6 --> ImmutableArray.res:49:27
  addValueReference ImmutableArray.res:49:6 --> ImmutableArray.res:49:30
  addValueReference ImmutableArray.res:49:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:50:6 --> ImmutableArray.res:50:26
  addValueReference ImmutableArray.res:50:6 --> ImmutableArray.res:50:29
  addValueReference ImmutableArray.res:50:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:52:6 --> ImmutableArray.res:52:13
  addValueReference ImmutableArray.res:52:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:52:6 --> ImmutableArray.res:52:17
  addValueReference ImmutableArray.res:52:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:52:6 --> ImmutableArray.res:9:2
  addValueReference ImmutableArray.res:54:6 --> ImmutableArray.res:54:16
  addValueReference ImmutableArray.res:54:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:54:6 --> ImmutableArray.res:54:20
  addValueReference ImmutableArray.res:54:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:54:6 --> ImmutableArray.res:54:24
  addValueReference ImmutableArray.res:54:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:55:6 --> ImmutableArray.res:55:15
  addValueReference ImmutableArray.res:55:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:55:6 --> ImmutableArray.res:55:19
  addValueReference ImmutableArray.res:55:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:55:6 --> ImmutableArray.res:55:23
  addValueReference ImmutableArray.res:55:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:57:6 --> ImmutableArray.res:57:14
  addValueReference ImmutableArray.res:57:6 --> ImmutableArray.res:6:2
  addValueReference ImmutableArray.res:57:6 --> ImmutableArray.res:10:2
  addValueReference ImmutableArray.res:59:6 --> ImmutableArray.res:59:16
  addValueReference ImmutableArray.res:59:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:59:6 --> ImmutableArray.res:59:20
  addValueReference ImmutableArray.res:59:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:59:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:61:6 --> ImmutableArray.res:61:20
  addValueReference ImmutableArray.res:61:6 --> ImmutableArray.res:7:2
  addValueReference ImmutableArray.res:61:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:63:6 --> ImmutableArray.res:63:15
  addValueReference ImmutableArray.res:63:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:63:6 --> ImmutableArray.res:63:18
  addValueReference ImmutableArray.res:63:6 --> ImmutableArray.res:63:27
  addValueReference ImmutableArray.res:63:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:65:6 --> ImmutableArray.res:65:20
  addValueReference ImmutableArray.res:65:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:65:6 --> ImmutableArray.res:65:23
  addValueReference ImmutableArray.res:65:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:67:6 --> ImmutableArray.res:67:13
  addValueReference ImmutableArray.res:67:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:67:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:69:6 --> ImmutableArray.res:69:18
  addValueReference ImmutableArray.res:69:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:69:6 --> ImmutableArray.res:69:21
  addValueReference ImmutableArray.res:70:6 --> ImmutableArray.res:70:17
  addValueReference ImmutableArray.res:70:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:70:6 --> ImmutableArray.res:70:20
  addValueReference ImmutableArray.res:72:6 --> ImmutableArray.res:72:14
  addValueReference ImmutableArray.res:72:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:72:6 --> ImmutableArray.res:72:17
  addValueReference ImmutableArray.res:72:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:73:6 --> ImmutableArray.res:73:13
  addValueReference ImmutableArray.res:73:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:73:6 --> ImmutableArray.res:73:16
  addValueReference ImmutableArray.res:73:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:75:6 --> ImmutableArray.res:75:24
  addValueReference ImmutableArray.res:75:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:75:6 --> ImmutableArray.res:75:27
  addValueReference ImmutableArray.res:75:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:76:6 --> ImmutableArray.res:76:23
  addValueReference ImmutableArray.res:76:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:76:6 --> ImmutableArray.res:76:26
  addValueReference ImmutableArray.res:76:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:78:6 --> ImmutableArray.res:78:18
  addValueReference ImmutableArray.res:78:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:78:6 --> ImmutableArray.res:78:21
  addValueReference ImmutableArray.res:78:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:79:6 --> ImmutableArray.res:79:17
  addValueReference ImmutableArray.res:79:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:79:6 --> ImmutableArray.res:79:20
  addValueReference ImmutableArray.res:79:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:81:6 --> ImmutableArray.res:81:27
  addValueReference ImmutableArray.res:81:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:81:6 --> ImmutableArray.res:81:30
  addValueReference ImmutableArray.res:82:6 --> ImmutableArray.res:82:26
  addValueReference ImmutableArray.res:82:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:82:6 --> ImmutableArray.res:82:29
  addValueReference ImmutableArray.res:84:6 --> ImmutableArray.res:84:23
  addValueReference ImmutableArray.res:84:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:84:6 --> ImmutableArray.res:84:26
  addValueReference ImmutableArray.res:84:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:85:6 --> ImmutableArray.res:85:22
  addValueReference ImmutableArray.res:85:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:85:6 --> ImmutableArray.res:85:25
  addValueReference ImmutableArray.res:85:6 --> ImmutableArray.res:8:2
  addValueReference ImmutableArray.res:87:6 --> ImmutableArray.res:87:20
  addValueReference ImmutableArray.res:87:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:87:6 --> ImmutableArray.res:87:23
  addValueReference ImmutableArray.res:87:6 --> ImmutableArray.res:10:2
  addValueReference ImmutableArray.res:88:6 --> ImmutableArray.res:88:19
  addValueReference ImmutableArray.res:88:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:88:6 --> ImmutableArray.res:88:22
  addValueReference ImmutableArray.res:88:6 --> ImmutableArray.res:10:2
  addValueReference ImmutableArray.res:90:6 --> ImmutableArray.res:90:17
  addValueReference ImmutableArray.res:90:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:90:6 --> ImmutableArray.res:90:20
  addValueReference ImmutableArray.res:90:6 --> ImmutableArray.res:90:23
  addValueReference ImmutableArray.res:91:6 --> ImmutableArray.res:91:16
  addValueReference ImmutableArray.res:91:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:91:6 --> ImmutableArray.res:91:19
  addValueReference ImmutableArray.res:91:6 --> ImmutableArray.res:91:22
  addValueReference ImmutableArray.res:93:6 --> ImmutableArray.res:93:24
  addValueReference ImmutableArray.res:93:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:93:6 --> ImmutableArray.res:93:27
  addValueReference ImmutableArray.res:93:6 --> ImmutableArray.res:93:30
  addValueReference ImmutableArray.res:94:6 --> ImmutableArray.res:94:23
  addValueReference ImmutableArray.res:94:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:94:6 --> ImmutableArray.res:94:26
  addValueReference ImmutableArray.res:94:6 --> ImmutableArray.res:94:29
  addValueReference ImmutableArray.res:96:6 --> ImmutableArray.res:96:25
  addValueReference ImmutableArray.res:96:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:96:6 --> ImmutableArray.res:96:29
  addValueReference ImmutableArray.res:96:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:96:6 --> ImmutableArray.res:96:33
  addValueReference ImmutableArray.res:96:6 --> ImmutableArray.res:96:36
  addValueReference ImmutableArray.res:97:6 --> ImmutableArray.res:97:24
  addValueReference ImmutableArray.res:97:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:97:6 --> ImmutableArray.res:97:28
  addValueReference ImmutableArray.res:97:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:97:6 --> ImmutableArray.res:97:32
  addValueReference ImmutableArray.res:97:6 --> ImmutableArray.res:97:35
  addValueReference ImmutableArray.res:99:6 --> ImmutableArray.res:99:15
  addValueReference ImmutableArray.res:99:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:99:6 --> ImmutableArray.res:99:18
  addValueReference ImmutableArray.res:100:6 --> ImmutableArray.res:100:14
  addValueReference ImmutableArray.res:100:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:100:6 --> ImmutableArray.res:100:17
  addValueReference ImmutableArray.res:102:6 --> ImmutableArray.res:102:16
  addValueReference ImmutableArray.res:102:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:102:6 --> ImmutableArray.res:102:19
  addValueReference ImmutableArray.res:103:6 --> ImmutableArray.res:103:15
  addValueReference ImmutableArray.res:103:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:103:6 --> ImmutableArray.res:103:18
  addValueReference ImmutableArray.res:105:6 --> ImmutableArray.res:105:17
  addValueReference ImmutableArray.res:105:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:105:6 --> ImmutableArray.res:105:21
  addValueReference ImmutableArray.res:105:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:105:6 --> ImmutableArray.res:105:25
  addValueReference ImmutableArray.res:106:6 --> ImmutableArray.res:106:16
  addValueReference ImmutableArray.res:106:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:106:6 --> ImmutableArray.res:106:20
  addValueReference ImmutableArray.res:106:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:106:6 --> ImmutableArray.res:106:24
  addValueReference ImmutableArray.res:108:6 --> ImmutableArray.res:108:16
  addValueReference ImmutableArray.res:108:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:108:6 --> ImmutableArray.res:108:20
  addValueReference ImmutableArray.res:108:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:108:6 --> ImmutableArray.res:108:24
  addValueReference ImmutableArray.res:109:6 --> ImmutableArray.res:109:15
  addValueReference ImmutableArray.res:109:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:109:6 --> ImmutableArray.res:109:19
  addValueReference ImmutableArray.res:109:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:109:6 --> ImmutableArray.res:109:23
  addValueReference ImmutableArray.res:111:6 --> ImmutableArray.res:111:14
  addValueReference ImmutableArray.res:111:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:111:6 --> ImmutableArray.res:111:18
  addValueReference ImmutableArray.res:111:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:111:6 --> ImmutableArray.res:111:22
  addValueReference ImmutableArray.res:112:6 --> ImmutableArray.res:112:13
  addValueReference ImmutableArray.res:112:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:112:6 --> ImmutableArray.res:112:17
  addValueReference ImmutableArray.res:112:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:112:6 --> ImmutableArray.res:112:21
  addValueReference ImmutableArray.res:114:6 --> ImmutableArray.res:114:13
  addValueReference ImmutableArray.res:114:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:114:6 --> ImmutableArray.res:114:17
  addValueReference ImmutableArray.res:114:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:114:6 --> ImmutableArray.res:114:21
  addValueReference ImmutableArray.res:115:6 --> ImmutableArray.res:115:12
  addValueReference ImmutableArray.res:115:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:115:6 --> ImmutableArray.res:115:16
  addValueReference ImmutableArray.res:115:6 --> ImmutableArray.res:5:2
  addValueReference ImmutableArray.res:115:6 --> ImmutableArray.res:115:20
  addValueReference ImmutableArray.resi:6:2 --> ImmutableArray.res:24:6
  addValueReference ImmutableArray.resi:9:0 --> ImmutableArray.res:14:6
  addValueReference ImmutableArray.resi:12:0 --> ImmutableArray.res:16:6
  addValueReference ImmutableArray.resi:14:0 --> ImmutableArray.res:20:6
  addValueReference ImmutableArray.resi:17:0 --> ImmutableArray.res:22:6
  addValueReference ImmutableArray.resi:19:0 --> ImmutableArray.res:24:6
  addValueReference ImmutableArray.resi:21:0 --> ImmutableArray.res:26:6
  addValueReference ImmutableArray.resi:23:0 --> ImmutableArray.res:28:6
  addValueReference ImmutableArray.resi:25:0 --> ImmutableArray.res:30:6
  addValueReference ImmutableArray.resi:27:0 --> ImmutableArray.res:32:6
  addValueReference ImmutableArray.resi:29:0 --> ImmutableArray.res:34:6
  addValueReference ImmutableArray.resi:31:0 --> ImmutableArray.res:36:6
  addValueReference ImmutableArray.resi:33:0 --> ImmutableArray.res:38:6
  addValueReference ImmutableArray.resi:35:0 --> ImmutableArray.res:40:6
  addValueReference ImmutableArray.resi:37:0 --> ImmutableArray.res:42:6
  addValueReference ImmutableArray.resi:39:0 --> ImmutableArray.res:44:6
  addValueReference ImmutableArray.resi:41:0 --> ImmutableArray.res:46:6
  addValueReference ImmutableArray.resi:42:0 --> ImmutableArray.res:47:6
  addValueReference ImmutableArray.resi:44:0 --> ImmutableArray.res:49:6
  addValueReference ImmutableArray.resi:45:0 --> ImmutableArray.res:50:6
  addValueReference ImmutableArray.resi:47:0 --> ImmutableArray.res:52:6
  addValueReference ImmutableArray.resi:49:0 --> ImmutableArray.res:54:6
  addValueReference ImmutableArray.resi:50:0 --> ImmutableArray.res:55:6
  addValueReference ImmutableArray.resi:52:0 --> ImmutableArray.res:57:6
  addValueReference ImmutableArray.resi:54:0 --> ImmutableArray.res:59:6
  addValueReference ImmutableArray.resi:56:0 --> ImmutableArray.res:61:6
  addValueReference ImmutableArray.resi:58:0 --> ImmutableArray.res:63:6
  addValueReference ImmutableArray.resi:60:0 --> ImmutableArray.res:65:6
  addValueReference ImmutableArray.resi:62:0 --> ImmutableArray.res:67:6
  addValueReference ImmutableArray.resi:64:0 --> ImmutableArray.res:69:6
  addValueReference ImmutableArray.resi:65:0 --> ImmutableArray.res:70:6
  addValueReference ImmutableArray.resi:67:0 --> ImmutableArray.res:72:6
  addValueReference ImmutableArray.resi:68:0 --> ImmutableArray.res:73:6
  addValueReference ImmutableArray.resi:70:0 --> ImmutableArray.res:75:6
  addValueReference ImmutableArray.resi:71:0 --> ImmutableArray.res:76:6
  addValueReference ImmutableArray.resi:73:0 --> ImmutableArray.res:78:6
  addValueReference ImmutableArray.resi:74:0 --> ImmutableArray.res:79:6
  addValueReference ImmutableArray.resi:76:0 --> ImmutableArray.res:81:6
  addValueReference ImmutableArray.resi:77:0 --> ImmutableArray.res:82:6
  addValueReference ImmutableArray.resi:79:0 --> ImmutableArray.res:84:6
  addValueReference ImmutableArray.resi:80:0 --> ImmutableArray.res:85:6
  addValueReference ImmutableArray.resi:82:0 --> ImmutableArray.res:87:6
  addValueReference ImmutableArray.resi:83:0 --> ImmutableArray.res:88:6
  addValueReference ImmutableArray.resi:85:0 --> ImmutableArray.res:90:6
  addValueReference ImmutableArray.resi:86:0 --> ImmutableArray.res:91:6
  addValueReference ImmutableArray.resi:88:0 --> ImmutableArray.res:93:6
  addValueReference ImmutableArray.resi:89:0 --> ImmutableArray.res:94:6
  addValueReference ImmutableArray.resi:91:0 --> ImmutableArray.res:96:6
  addValueReference ImmutableArray.resi:92:0 --> ImmutableArray.res:97:6
  addValueReference ImmutableArray.resi:94:0 --> ImmutableArray.res:99:6
  addValueReference ImmutableArray.resi:95:0 --> ImmutableArray.res:100:6
  addValueReference ImmutableArray.resi:97:0 --> ImmutableArray.res:102:6
  addValueReference ImmutableArray.resi:98:0 --> ImmutableArray.res:103:6
  addValueReference ImmutableArray.resi:100:0 --> ImmutableArray.res:105:6
  addValueReference ImmutableArray.resi:101:0 --> ImmutableArray.res:106:6
  addValueReference ImmutableArray.resi:103:0 --> ImmutableArray.res:108:6
  addValueReference ImmutableArray.resi:104:0 --> ImmutableArray.res:109:6
  addValueReference ImmutableArray.resi:106:0 --> ImmutableArray.res:111:6
  addValueReference ImmutableArray.resi:107:0 --> ImmutableArray.res:112:6
  addValueReference ImmutableArray.resi:109:0 --> ImmutableArray.res:114:6
  addValueReference ImmutableArray.resi:110:0 --> ImmutableArray.res:115:6
  Scanning ImmutableArray.cmti Source:ImmutableArray.resi
  addValueDeclaration +get ImmutableArray.resi:6:2 path:ImmutableArray.Array
  addValueDeclaration +fromArray ImmutableArray.resi:9:0 path:ImmutableArray
  addValueDeclaration +toArray ImmutableArray.resi:12:0 path:ImmutableArray
  addValueDeclaration +length ImmutableArray.resi:14:0 path:ImmutableArray
  addValueDeclaration +size ImmutableArray.resi:17:0 path:ImmutableArray
  addValueDeclaration +get ImmutableArray.resi:19:0 path:ImmutableArray
  addValueDeclaration +getExn ImmutableArray.resi:21:0 path:ImmutableArray
  addValueDeclaration +getUnsafe ImmutableArray.resi:23:0 path:ImmutableArray
  addValueDeclaration +getUndefined ImmutableArray.resi:25:0 path:ImmutableArray
  addValueDeclaration +shuffle ImmutableArray.resi:27:0 path:ImmutableArray
  addValueDeclaration +reverse ImmutableArray.resi:29:0 path:ImmutableArray
  addValueDeclaration +makeUninitialized ImmutableArray.resi:31:0 path:ImmutableArray
  addValueDeclaration +makeUninitializedUnsafe ImmutableArray.resi:33:0 path:ImmutableArray
  addValueDeclaration +make ImmutableArray.resi:35:0 path:ImmutableArray
  addValueDeclaration +range ImmutableArray.resi:37:0 path:ImmutableArray
  addValueDeclaration +rangeBy ImmutableArray.resi:39:0 path:ImmutableArray
  addValueDeclaration +makeByU ImmutableArray.resi:41:0 path:ImmutableArray
  addValueDeclaration +makeBy ImmutableArray.resi:42:0 path:ImmutableArray
  addValueDeclaration +makeByAndShuffleU ImmutableArray.resi:44:0 path:ImmutableArray
  addValueDeclaration +makeByAndShuffle ImmutableArray.resi:45:0 path:ImmutableArray
  addValueDeclaration +zip ImmutableArray.resi:47:0 path:ImmutableArray
  addValueDeclaration +zipByU ImmutableArray.resi:49:0 path:ImmutableArray
  addValueDeclaration +zipBy ImmutableArray.resi:50:0 path:ImmutableArray
  addValueDeclaration +unzip ImmutableArray.resi:52:0 path:ImmutableArray
  addValueDeclaration +concat ImmutableArray.resi:54:0 path:ImmutableArray
  addValueDeclaration +concatMany ImmutableArray.resi:56:0 path:ImmutableArray
  addValueDeclaration +slice ImmutableArray.resi:58:0 path:ImmutableArray
  addValueDeclaration +sliceToEnd ImmutableArray.resi:60:0 path:ImmutableArray
  addValueDeclaration +copy ImmutableArray.resi:62:0 path:ImmutableArray
  addValueDeclaration +forEachU ImmutableArray.resi:64:0 path:ImmutableArray
  addValueDeclaration +forEach ImmutableArray.resi:65:0 path:ImmutableArray
  addValueDeclaration +mapU ImmutableArray.resi:67:0 path:ImmutableArray
  addValueDeclaration +map ImmutableArray.resi:68:0 path:ImmutableArray
  addValueDeclaration +keepWithIndexU ImmutableArray.resi:70:0 path:ImmutableArray
  addValueDeclaration +keepWithIndex ImmutableArray.resi:71:0 path:ImmutableArray
  addValueDeclaration +keepMapU ImmutableArray.resi:73:0 path:ImmutableArray
  addValueDeclaration +keepMap ImmutableArray.resi:74:0 path:ImmutableArray
  addValueDeclaration +forEachWithIndexU ImmutableArray.resi:76:0 path:ImmutableArray
  addValueDeclaration +forEachWithIndex ImmutableArray.resi:77:0 path:ImmutableArray
  addValueDeclaration +mapWithIndexU ImmutableArray.resi:79:0 path:ImmutableArray
  addValueDeclaration +mapWithIndex ImmutableArray.resi:80:0 path:ImmutableArray
  addValueDeclaration +partitionU ImmutableArray.resi:82:0 path:ImmutableArray
  addValueDeclaration +partition ImmutableArray.resi:83:0 path:ImmutableArray
  addValueDeclaration +reduceU ImmutableArray.resi:85:0 path:ImmutableArray
  addValueDeclaration +reduce ImmutableArray.resi:86:0 path:ImmutableArray
  addValueDeclaration +reduceReverseU ImmutableArray.resi:88:0 path:ImmutableArray
  addValueDeclaration +reduceReverse ImmutableArray.resi:89:0 path:ImmutableArray
  addValueDeclaration +reduceReverse2U ImmutableArray.resi:91:0 path:ImmutableArray
  addValueDeclaration +reduceReverse2 ImmutableArray.resi:92:0 path:ImmutableArray
  addValueDeclaration +someU ImmutableArray.resi:94:0 path:ImmutableArray
  addValueDeclaration +some ImmutableArray.resi:95:0 path:ImmutableArray
  addValueDeclaration +everyU ImmutableArray.resi:97:0 path:ImmutableArray
  addValueDeclaration +every ImmutableArray.resi:98:0 path:ImmutableArray
  addValueDeclaration +every2U ImmutableArray.resi:100:0 path:ImmutableArray
  addValueDeclaration +every2 ImmutableArray.resi:101:0 path:ImmutableArray
  addValueDeclaration +some2U ImmutableArray.resi:103:0 path:ImmutableArray
  addValueDeclaration +some2 ImmutableArray.resi:104:0 path:ImmutableArray
  addValueDeclaration +cmpU ImmutableArray.resi:106:0 path:ImmutableArray
  addValueDeclaration +cmp ImmutableArray.resi:107:0 path:ImmutableArray
  addValueDeclaration +eqU ImmutableArray.resi:109:0 path:ImmutableArray
  addValueDeclaration +eq ImmutableArray.resi:110:0 path:ImmutableArray
  Scanning ImportHookDefault.cmt Source:ImportHookDefault.res
  addValueDeclaration +makeProps ImportHookDefault.res:6:0 path:+ImportHookDefault
  addValueDeclaration +make ImportHookDefault.res:7:0 path:+ImportHookDefault
  addValueDeclaration +make2Props ImportHookDefault.res:13:0 path:+ImportHookDefault
  addValueDeclaration +make2 ImportHookDefault.res:14:0 path:+ImportHookDefault
  addRecordLabelDeclaration name ImportHookDefault.res:2:2 path:+ImportHookDefault.person
  addRecordLabelDeclaration age ImportHookDefault.res:3:2 path:+ImportHookDefault.person
  addValueReference ImportHookDefault.res:7:0 --> ImportHookDefault.res:6:0
  OptionalArgs.addFunctionReference ImportHookDefault.res:7:0 ImportHookDefault.res:6:0
  addValueReference ImportHookDefault.res:14:0 --> ImportHookDefault.res:13:0
  OptionalArgs.addFunctionReference ImportHookDefault.res:14:0 ImportHookDefault.res:13:0
  Scanning ImportHooks.cmt Source:ImportHooks.res
  addValueDeclaration +makeProps ImportHooks.res:8:0 path:+ImportHooks
  addValueDeclaration +make ImportHooks.res:9:0 path:+ImportHooks
  addValueDeclaration +foo ImportHooks.res:15:33 path:+ImportHooks
  addRecordLabelDeclaration name ImportHooks.res:2:2 path:+ImportHooks.person
  addRecordLabelDeclaration age ImportHooks.res:3:2 path:+ImportHooks.person
  addValueReference ImportHooks.res:9:0 --> ImportHooks.res:8:0
  OptionalArgs.addFunctionReference ImportHooks.res:9:0 ImportHooks.res:8:0
  addValueReference ImportHooks.res:15:33 --> ImportHooks.res:15:0
  Scanning ImportIndex.cmt Source:ImportIndex.res
  addValueDeclaration +makeProps ImportIndex.res:2:0 path:+ImportIndex
  addValueDeclaration +make ImportIndex.res:3:0 path:+ImportIndex
  addValueReference ImportIndex.res:3:0 --> ImportIndex.res:2:0
  OptionalArgs.addFunctionReference ImportIndex.res:3:0 ImportIndex.res:2:0
  Scanning ImportJsValue.cmt Source:ImportJsValue.res
  addValueDeclaration +round ImportJsValue.res:4:0 path:+ImportJsValue
  addValueDeclaration +area ImportJsValue.res:14:0 path:+ImportJsValue
  addValueDeclaration +returnMixedArray ImportJsValue.res:22:0 path:+ImportJsValue
  addValueDeclaration +roundedNumber ImportJsValue.res:24:7 path:+ImportJsValue
  addValueDeclaration +areaValue ImportJsValue.res:26:7 path:+ImportJsValue
  addValueDeclaration +getProp ImportJsValue.res:33:2 path:+ImportJsValue.AbsoluteValue
  addValueDeclaration +getAbs ImportJsValue.res:36:6 path:+ImportJsValue.AbsoluteValue
  addValueDeclaration +useGetProp ImportJsValue.res:42:7 path:+ImportJsValue
  addValueDeclaration +useGetAbs ImportJsValue.res:44:7 path:+ImportJsValue
  addValueDeclaration +useColor ImportJsValue.res:51:28 path:+ImportJsValue
  addValueDeclaration +higherOrder ImportJsValue.res:53:28 path:+ImportJsValue
  addValueDeclaration +returnedFromHigherOrder ImportJsValue.res:55:7 path:+ImportJsValue
  addValueDeclaration +convertVariant ImportJsValue.res:61:28 path:+ImportJsValue
  addValueDeclaration +polymorphic ImportJsValue.res:63:28 path:+ImportJsValue
  addValueDeclaration +default ImportJsValue.res:65:28 path:+ImportJsValue
  addRecordLabelDeclaration x ImportJsValue.res:9:2 path:+ImportJsValue.point
  addRecordLabelDeclaration y ImportJsValue.res:10:2 path:+ImportJsValue.point
  addValueReference ImportJsValue.res:24:7 --> ImportJsValue.res:4:0
  addValueReference ImportJsValue.res:26:7 --> ImportJsValue.res:14:0
  addValueDeclaration +getProp ImportJsValue.res:33:11 path:+ImportJsValue.AbsoluteValue
  addValueDeclaration +getAbs ImportJsValue.res:37:8 path:+ImportJsValue.AbsoluteValue
  addValueReference ImportJsValue.res:37:8 --> ImportJsValue.res:36:16
  addValueReference ImportJsValue.res:36:6 --> ImportJsValue.res:37:8
  addValueReference ImportJsValue.res:42:7 --> ImportJsValue.res:42:21
  addValueReference ImportJsValue.res:42:7 --> ImportJsValue.res:33:2
  addValueReference ImportJsValue.res:44:7 --> ImportJsValue.res:44:20
  addValueReference ImportJsValue.res:44:7 --> ImportJsValue.res:36:6
  addValueReference ImportJsValue.res:55:7 --> ImportJsValue.res:53:28
  addVariantCaseDeclaration I ImportJsValue.res:58:2 path:+ImportJsValue.variant
  addVariantCaseDeclaration S ImportJsValue.res:59:2 path:+ImportJsValue.variant
  addValueReference ImportJsValue.res:4:0 --> ImportJsValue.res:1:0
  addValueReference ImportJsValue.res:14:0 --> ImportJsValue.res:13:0
  addValueReference ImportJsValue.res:22:0 --> ImportJsValue.res:21:0
  addValueReference ImportJsValue.res:51:28 --> ImportJsValue.res:51:0
  addValueReference ImportJsValue.res:53:28 --> ImportJsValue.res:53:0
  addValueReference ImportJsValue.res:61:28 --> ImportJsValue.res:61:0
  addValueReference ImportJsValue.res:63:28 --> ImportJsValue.res:63:0
  addValueReference ImportJsValue.res:65:28 --> ImportJsValue.res:65:0
  Scanning ImportMyBanner.cmt Source:ImportMyBanner.res
  addValueDeclaration +make ImportMyBanner.res:7:0 path:+ImportMyBanner
  addValueDeclaration +make ImportMyBanner.res:19:4 path:+ImportMyBanner
  addRecordLabelDeclaration text ImportMyBanner.res:4:16 path:+ImportMyBanner.message
  addValueReference ImportMyBanner.res:19:4 --> ImportMyBanner.res:7:0
  addValueReference ImportMyBanner.res:7:0 --> ImportMyBanner.res:6:0
  Scanning JSResource.cmt Source:JSResource.res
  addValueDeclaration +jSResource JSResource.res:3:0 path:+JSResource
  addValueDeclaration +jSResource JSResource.res:3:11 path:+JSResource
  Scanning LetPrivate.cmt Source:LetPrivate.res
  addValueDeclaration +y LetPrivate.res:5:7 path:+LetPrivate
  addValueDeclaration +x LetPrivate.res:2:9 path:+LetPrivate.local_1
  addValueReference LetPrivate.res:5:7 --> LetPrivate.res:2:9
  Scanning ModuleAliases.cmt Source:ModuleAliases.res
  addValueDeclaration +testNested ModuleAliases.res:21:7 path:+ModuleAliases
  addValueDeclaration +testInner ModuleAliases.res:23:7 path:+ModuleAliases
  addValueDeclaration +testInner2 ModuleAliases.res:25:7 path:+ModuleAliases
  addRecordLabelDeclaration inner ModuleAliases.res:3:19 path:+ModuleAliases.Outer.Inner.innerT
  addRecordLabelDeclaration nested ModuleAliases.res:11:16 path:+ModuleAliases.Outer2.Inner2.InnerNested.t
  addValueReference ModuleAliases.res:21:7 --> ModuleAliases.res:21:21
  addValueReference ModuleAliases.res:23:7 --> ModuleAliases.res:23:20
  addValueReference ModuleAliases.res:25:7 --> ModuleAliases.res:25:21
  Scanning ModuleAliases2.cmt Source:ModuleAliases2.res
  addValueDeclaration +q ModuleAliases2.res:18:4 path:+ModuleAliases2
  addRecordLabelDeclaration x ModuleAliases2.res:2:2 path:+ModuleAliases2.record
  addRecordLabelDeclaration y ModuleAliases2.res:3:2 path:+ModuleAliases2.record
  addRecordLabelDeclaration outer ModuleAliases2.res:7:23 path:+ModuleAliases2.Outer.outer
  addRecordLabelDeclaration inner ModuleAliases2.res:10:25 path:+ModuleAliases2.Outer.Inner.inner
  Scanning NestedModules.cmt Source:NestedModules.res
  addValueDeclaration +notNested NestedModules.res:1:7 path:+NestedModules
  addValueDeclaration +theAnswer NestedModules.res:4:9 path:+NestedModules.Universe
  addValueDeclaration +notExported NestedModules.res:6:6 path:+NestedModules.Universe
  addValueDeclaration +x NestedModules.res:11:8 path:+NestedModules.Universe.Nested2
  addValueDeclaration +nested2Value NestedModules.res:13:11 path:+NestedModules.Universe.Nested2
  addValueDeclaration +y NestedModules.res:15:8 path:+NestedModules.Universe.Nested2
  addValueDeclaration +x NestedModules.res:20:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +y NestedModules.res:21:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +z NestedModules.res:22:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +w NestedModules.res:23:10 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +nested3Value NestedModules.res:27:13 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +nested3Function NestedModules.res:29:13 path:+NestedModules.Universe.Nested2.Nested3
  addValueDeclaration +nested2Function NestedModules.res:32:11 path:+NestedModules.Universe.Nested2
  addValueDeclaration +someString NestedModules.res:39:9 path:+NestedModules.Universe
  addValueReference NestedModules.res:29:13 --> NestedModules.res:29:32
  addValueReference NestedModules.res:32:11 --> NestedModules.res:32:30
  addVariantCaseDeclaration A NestedModules.res:36:4 path:+NestedModules.Universe.variant
  addVariantCaseDeclaration B NestedModules.res:37:4 path:+NestedModules.Universe.variant
  Scanning NestedModulesInSignature.cmt Source:NestedModulesInSignature.res
  addValueDeclaration +theAnswer NestedModulesInSignature.res:2:6 path:+NestedModulesInSignature.Universe
  addValueReference NestedModulesInSignature.resi:2:2 --> NestedModulesInSignature.res:2:6
  Scanning NestedModulesInSignature.cmti Source:NestedModulesInSignature.resi
  addValueDeclaration +theAnswer NestedModulesInSignature.resi:2:2 path:NestedModulesInSignature.Universe
  Scanning Newsyntax.cmt Source:Newsyntax.res
  addValueDeclaration +x Newsyntax.res:1:4 path:+Newsyntax
  addValueDeclaration +y Newsyntax.res:3:4 path:+Newsyntax
  addRecordLabelDeclaration xxx Newsyntax.res:6:2 path:+Newsyntax.record
  addRecordLabelDeclaration yyy Newsyntax.res:7:2 path:+Newsyntax.record
  addVariantCaseDeclaration A Newsyntax.res:10:15 path:+Newsyntax.variant
  addVariantCaseDeclaration B Newsyntax.res:10:17 path:+Newsyntax.variant
  addVariantCaseDeclaration C Newsyntax.res:10:25 path:+Newsyntax.variant
  addRecordLabelDeclaration xx Newsyntax.res:12:16 path:+Newsyntax.record2
  addRecordLabelDeclaration yy Newsyntax.res:12:23 path:+Newsyntax.record2
  Scanning Newton.cmt Source:Newton.res
  addValueDeclaration +- Newton.res:1:4 path:+Newton
  addValueDeclaration ++ Newton.res:2:4 path:+Newton
  addValueDeclaration +* Newton.res:3:4 path:+Newton
  addValueDeclaration +/ Newton.res:4:4 path:+Newton
  addValueDeclaration +newton Newton.res:6:4 path:+Newton
  addValueDeclaration +f Newton.res:25:4 path:+Newton
  addValueDeclaration +fPrimed Newton.res:27:4 path:+Newton
  addValueDeclaration +result Newton.res:29:4 path:+Newton
  addValueDeclaration +current Newton.res:7:6 path:+Newton
  addValueReference Newton.res:7:6 --> Newton.res:6:28
  addValueDeclaration +iterateMore Newton.res:8:6 path:+Newton
  addValueDeclaration +delta Newton.res:9:8 path:+Newton
  addValueReference Newton.res:9:8 --> Newton.res:8:21
  addValueReference Newton.res:9:8 --> Newton.res:8:31
  addValueReference Newton.res:9:8 --> Newton.res:1:4
  addValueReference Newton.res:9:8 --> Newton.res:8:31
  addValueReference Newton.res:9:8 --> Newton.res:8:21
  addValueReference Newton.res:9:8 --> Newton.res:1:4
  addValueReference Newton.res:9:8 --> Newton.res:8:31
  addValueReference Newton.res:9:8 --> Newton.res:8:21
  addValueReference Newton.res:8:6 --> Newton.res:9:8
  addValueReference Newton.res:8:6 --> Newton.res:6:38
  addValueReference Newton.res:8:6 --> Newton.res:7:6
  addValueReference Newton.res:8:6 --> Newton.res:8:31
  addValueDeclaration +loop Newton.res:14:10 path:+Newton
  addValueDeclaration +previous Newton.res:15:8 path:+Newton
  addValueReference Newton.res:15:8 --> Newton.res:7:6
  addValueDeclaration +next Newton.res:16:8 path:+Newton
  addValueReference Newton.res:16:8 --> Newton.res:15:8
  addValueReference Newton.res:16:8 --> Newton.res:15:8
  addValueReference Newton.res:16:8 --> Newton.res:6:14
  addValueReference Newton.res:16:8 --> Newton.res:15:8
  addValueReference Newton.res:16:8 --> Newton.res:6:18
  addValueReference Newton.res:16:8 --> Newton.res:4:4
  addValueReference Newton.res:16:8 --> Newton.res:1:4
  addValueReference Newton.res:14:10 --> Newton.res:7:6
  addValueReference Newton.res:14:10 --> Newton.res:14:10
  addValueReference Newton.res:14:10 --> Newton.res:15:8
  addValueReference Newton.res:14:10 --> Newton.res:16:8
  addValueReference Newton.res:14:10 --> Newton.res:8:6
  addValueReference Newton.res:6:4 --> Newton.res:14:10
  addValueReference Newton.res:25:4 --> Newton.res:25:8
  addValueReference Newton.res:25:4 --> Newton.res:25:8
  addValueReference Newton.res:25:4 --> Newton.res:3:4
  addValueReference Newton.res:25:4 --> Newton.res:25:8
  addValueReference Newton.res:25:4 --> Newton.res:3:4
  addValueReference Newton.res:25:4 --> Newton.res:25:8
  addValueReference Newton.res:25:4 --> Newton.res:3:4
  addValueReference Newton.res:25:4 --> Newton.res:25:8
  addValueReference Newton.res:25:4 --> Newton.res:3:4
  addValueReference Newton.res:25:4 --> Newton.res:1:4
  addValueReference Newton.res:25:4 --> Newton.res:25:8
  addValueReference Newton.res:25:4 --> Newton.res:3:4
  addValueReference Newton.res:25:4 --> Newton.res:1:4
  addValueReference Newton.res:25:4 --> Newton.res:2:4
  addValueReference Newton.res:27:4 --> Newton.res:27:14
  addValueReference Newton.res:27:4 --> Newton.res:3:4
  addValueReference Newton.res:27:4 --> Newton.res:27:14
  addValueReference Newton.res:27:4 --> Newton.res:3:4
  addValueReference Newton.res:27:4 --> Newton.res:27:14
  addValueReference Newton.res:27:4 --> Newton.res:3:4
  addValueReference Newton.res:27:4 --> Newton.res:1:4
  addValueReference Newton.res:27:4 --> Newton.res:1:4
  addValueReference Newton.res:29:4 --> Newton.res:25:4
  addValueReference Newton.res:29:4 --> Newton.res:27:4
  addValueReference Newton.res:29:4 --> Newton.res:6:4
  addValueReference Newton.res:31:8 --> Newton.res:29:4
  addValueReference Newton.res:31:18 --> Newton.res:29:4
  addValueReference Newton.res:31:16 --> Newton.res:25:4
  Scanning Opaque.cmt Source:Opaque.res
  addValueDeclaration +noConversion Opaque.res:4:7 path:+Opaque
  addValueDeclaration +testConvertNestedRecordFromOtherFile Opaque.res:8:7 path:+Opaque
  addVariantCaseDeclaration A Opaque.res:2:25 path:+Opaque.opaqueFromRecords
  addValueReference Opaque.res:4:7 --> Opaque.res:4:23
  addValueReference Opaque.res:8:7 --> Opaque.res:8:47
  Scanning OptArg.cmt Source:OptArg.res
  addValueDeclaration +foo OptArg.res:1:4 path:+OptArg
  addValueDeclaration +bar OptArg.res:3:4 path:+OptArg
  addValueDeclaration +threeArgs OptArg.res:9:4 path:+OptArg
  addValueDeclaration +twoArgs OptArg.res:14:4 path:+OptArg
  addValueDeclaration +oneArg OptArg.res:18:4 path:+OptArg
  addValueDeclaration +wrapOneArg OptArg.res:20:4 path:+OptArg
  addValueDeclaration +fourArgs OptArg.res:24:4 path:+OptArg
  addValueDeclaration +wrapfourArgs OptArg.res:26:4 path:+OptArg
  addValueReference OptArg.res:1:4 --> OptArg.res:1:14
  addValueReference OptArg.res:1:4 --> OptArg.res:1:20
  addValueReference OptArg.res:1:4 --> OptArg.res:1:26
  addValueReference OptArg.res:1:4 --> OptArg.res:1:11
  addValueReference OptArg.res:1:4 --> OptArg.res:1:17
  addValueReference OptArg.res:1:4 --> OptArg.res:1:23
  addValueReference OptArg.res:1:4 --> OptArg.res:1:29
  addValueReference OptArg.res:3:4 --> OptArg.res:3:17
  addValueReference OptArg.res:3:4 --> OptArg.res:3:27
  DeadOptionalArgs.addReferences foo called with optional argNames:x argNamesMaybe: OptArg.res:5:7
  addValueReference OptArg.res:5:7 --> OptArg.res:1:4
  DeadOptionalArgs.addReferences bar called with optional argNames: argNamesMaybe: OptArg.res:7:7
  addValueReference OptArg.res:7:7 --> OptArg.res:3:4
  addValueReference OptArg.res:9:4 --> OptArg.res:9:20
  addValueReference OptArg.res:9:4 --> OptArg.res:9:26
  addValueReference OptArg.res:9:4 --> OptArg.res:9:32
  addValueReference OptArg.res:9:4 --> OptArg.res:9:17
  addValueReference OptArg.res:9:4 --> OptArg.res:9:23
  addValueReference OptArg.res:9:4 --> OptArg.res:9:29
  addValueReference OptArg.res:9:4 --> OptArg.res:9:35
  DeadOptionalArgs.addReferences threeArgs called with optional argNames:c, a argNamesMaybe: OptArg.res:11:7
  addValueReference OptArg.res:11:7 --> OptArg.res:9:4
  DeadOptionalArgs.addReferences threeArgs called with optional argNames:a argNamesMaybe: OptArg.res:12:7
  addValueReference OptArg.res:12:7 --> OptArg.res:9:4
  addValueReference OptArg.res:14:4 --> OptArg.res:14:18
  addValueReference OptArg.res:14:4 --> OptArg.res:14:24
  addValueReference OptArg.res:14:4 --> OptArg.res:14:15
  addValueReference OptArg.res:14:4 --> OptArg.res:14:21
  addValueReference OptArg.res:14:4 --> OptArg.res:14:27
  DeadOptionalArgs.addReferences twoArgs called with optional argNames: argNamesMaybe: OptArg.res:16:12
  addValueReference OptArg.res:16:12 --> OptArg.res:14:4
  addValueReference OptArg.res:18:4 --> OptArg.res:18:17
  addValueReference OptArg.res:18:4 --> OptArg.res:18:14
  addValueReference OptArg.res:18:4 --> OptArg.res:18:24
  DeadOptionalArgs.addReferences oneArg called with optional argNames:a argNamesMaybe:a OptArg.res:20:30
  addValueReference OptArg.res:20:4 --> OptArg.res:20:18
  addValueReference OptArg.res:20:4 --> OptArg.res:20:24
  addValueReference OptArg.res:20:4 --> OptArg.res:18:4
  DeadOptionalArgs.addReferences wrapOneArg called with optional argNames:a argNamesMaybe: OptArg.res:22:7
  addValueReference OptArg.res:22:7 --> OptArg.res:20:4
  addValueReference OptArg.res:24:4 --> OptArg.res:24:19
  addValueReference OptArg.res:24:4 --> OptArg.res:24:25
  addValueReference OptArg.res:24:4 --> OptArg.res:24:31
  addValueReference OptArg.res:24:4 --> OptArg.res:24:37
  addValueReference OptArg.res:24:4 --> OptArg.res:24:16
  addValueReference OptArg.res:24:4 --> OptArg.res:24:22
  addValueReference OptArg.res:24:4 --> OptArg.res:24:28
  addValueReference OptArg.res:24:4 --> OptArg.res:24:34
  addValueReference OptArg.res:24:4 --> OptArg.res:24:40
  DeadOptionalArgs.addReferences fourArgs called with optional argNames:c, b, a argNamesMaybe:c, b, a OptArg.res:26:44
  addValueReference OptArg.res:26:4 --> OptArg.res:26:20
  addValueReference OptArg.res:26:4 --> OptArg.res:26:26
  addValueReference OptArg.res:26:4 --> OptArg.res:26:32
  addValueReference OptArg.res:26:4 --> OptArg.res:26:38
  addValueReference OptArg.res:26:4 --> OptArg.res:24:4
  DeadOptionalArgs.addReferences wrapfourArgs called with optional argNames:c, a argNamesMaybe: OptArg.res:28:7
  addValueReference OptArg.res:28:7 --> OptArg.res:26:4
  DeadOptionalArgs.addReferences wrapfourArgs called with optional argNames:c, b argNamesMaybe: OptArg.res:29:7
  addValueReference OptArg.res:29:7 --> OptArg.res:26:4
  addValueReference OptArg.resi:1:0 --> OptArg.res:1:4
  OptionalArgs.addFunctionReference OptArg.resi:1:0 OptArg.res:1:4
  addValueReference OptArg.resi:2:0 --> OptArg.res:3:4
  OptionalArgs.addFunctionReference OptArg.resi:2:0 OptArg.res:3:4
  Scanning OptArg.cmti Source:OptArg.resi
  addValueDeclaration +foo OptArg.resi:1:0 path:OptArg
  addValueDeclaration +bar OptArg.resi:2:0 path:OptArg
  Scanning Records.cmt Source:Records.res
  addValueDeclaration +origin Records.res:9:7 path:+Records
  addValueDeclaration +computeArea Records.res:11:7 path:+Records
  addValueDeclaration +coord2d Records.res:16:7 path:+Records
  addValueDeclaration +getOpt Records.res:30:4 path:+Records
  addValueDeclaration +findAddress Records.res:32:7 path:+Records
  addValueDeclaration +someBusiness Records.res:35:7 path:+Records
  addValueDeclaration +findAllAddresses Records.res:37:7 path:+Records
  addValueDeclaration +getPayload Records.res:54:7 path:+Records
  addValueDeclaration +getPayloadRecord Records.res:61:7 path:+Records
  addValueDeclaration +recordValue Records.res:63:7 path:+Records
  addValueDeclaration +payloadValue Records.res:65:7 path:+Records
  addValueDeclaration +getPayloadRecordPlusOne Records.res:67:7 path:+Records
  addValueDeclaration +findAddress2 Records.res:78:7 path:+Records
  addValueDeclaration +someBusiness2 Records.res:81:7 path:+Records
  addValueDeclaration +computeArea3 Records.res:87:7 path:+Records
  addValueDeclaration +computeArea4 Records.res:90:7 path:+Records
  addValueDeclaration +testMyRec Records.res:102:7 path:+Records
  addValueDeclaration +testMyRec2 Records.res:104:7 path:+Records
  addValueDeclaration +testMyObj Records.res:106:7 path:+Records
  addValueDeclaration +testMyObj2 Records.res:108:7 path:+Records
  addValueDeclaration +testMyRecBsAs Records.res:115:7 path:+Records
  addValueDeclaration +testMyRecBsAs2 Records.res:117:7 path:+Records
  addRecordLabelDeclaration x Records.res:4:2 path:+Records.coord
  addRecordLabelDeclaration y Records.res:5:2 path:+Records.coord
  addRecordLabelDeclaration z Records.res:6:2 path:+Records.coord
  addValueReference Records.res:11:7 --> Records.res:11:23
  addValueReference Records.res:11:7 --> Records.res:11:26
  addValueReference Records.res:11:7 --> Records.res:11:29
  addValueReference Records.res:11:7 --> Records.res:13:31
  addTypeReference Records.res:11:22 --> Records.res:4:2
  addTypeReference Records.res:11:22 --> Records.res:5:2
  addTypeReference Records.res:11:22 --> Records.res:6:2
  addValueReference Records.res:16:7 --> Records.res:16:18
  addValueReference Records.res:16:7 --> Records.res:16:21
  addRecordLabelDeclaration name Records.res:19:2 path:+Records.person
  addRecordLabelDeclaration age Records.res:20:2 path:+Records.person
  addRecordLabelDeclaration address Records.res:21:2 path:+Records.person
  addRecordLabelDeclaration name Records.res:25:2 path:+Records.business
  addRecordLabelDeclaration owner Records.res:26:2 path:+Records.business
  addRecordLabelDeclaration address Records.res:27:2 path:+Records.business
  addValueReference Records.res:30:4 --> Records.res:30:14
  addValueReference Records.res:30:4 --> Records.res:30:19
  addValueReference Records.res:30:4 --> Records.res:30:28
  addTypeReference Records.res:33:2 --> Records.res:27:2
  addValueReference Records.res:32:7 --> Records.res:32:22
  addValueReference Records.res:32:7 --> Records.res:33:35
  addValueReference Records.res:32:7 --> Records.res:30:4
  addValueReference Records.res:37:7 --> Records.res:37:27
  addTypeReference Records.res:41:6 --> Records.res:27:2
  addValueReference Records.res:37:7 --> Records.res:39:14
  addValueReference Records.res:37:7 --> Records.res:41:39
  addValueReference Records.res:37:7 --> Records.res:30:4
  addTypeReference Records.res:42:6 --> Records.res:26:2
  addValueReference Records.res:37:7 --> Records.res:39:14
  addTypeReference Records.res:42:42 --> Records.res:21:2
  addValueReference Records.res:37:7 --> Records.res:42:37
  addValueReference Records.res:37:7 --> Records.res:42:68
  addValueReference Records.res:37:7 --> Records.res:30:4
  addValueReference Records.res:37:7 --> Records.res:30:4
  addRecordLabelDeclaration num Records.res:50:2 path:+Records.payload
  addRecordLabelDeclaration payload Records.res:51:2 path:+Records.payload
  addValueReference Records.res:54:7 --> Records.res:54:22
  addTypeReference Records.res:54:21 --> Records.res:51:2
  addRecordLabelDeclaration v Records.res:57:2 path:+Records.record
  addRecordLabelDeclaration w Records.res:58:2 path:+Records.record
  addValueReference Records.res:61:7 --> Records.res:61:28
  addTypeReference Records.res:61:27 --> Records.res:51:2
  addValueReference Records.res:65:7 --> Records.res:63:7
  addTypeReference Records.res:69:5 --> Records.res:57:2
  addValueReference Records.res:67:7 --> Records.res:67:35
  addValueReference Records.res:67:7 --> Records.res:67:35
  addTypeReference Records.res:67:34 --> Records.res:51:2
  addRecordLabelDeclaration name Records.res:73:2 path:+Records.business2
  addRecordLabelDeclaration owner Records.res:74:2 path:+Records.business2
  addRecordLabelDeclaration address2 Records.res:75:2 path:+Records.business2
  addTypeReference Records.res:79:2 --> Records.res:75:2
  addValueReference Records.res:78:7 --> Records.res:78:23
  addValueReference Records.res:78:7 --> Records.res:79:58
  addValueReference Records.res:78:7 --> Records.res:30:4
  addValueReference Records.res:87:7 --> Records.res:87:23
  addValueReference Records.res:87:7 --> Records.res:87:23
  addValueReference Records.res:87:7 --> Records.res:87:23
  addValueReference Records.res:87:7 --> Records.res:88:75
  addValueReference Records.res:90:7 --> Records.res:90:23
  addValueReference Records.res:90:7 --> Records.res:90:23
  addValueReference Records.res:90:7 --> Records.res:90:23
  addValueReference Records.res:90:7 --> Records.res:91:53
  addRecordLabelDeclaration type_ Records.res:96:3 path:+Records.myRec
  addTypeReference Records.res:102:33 --> Records.res:96:3
  addValueReference Records.res:102:7 --> Records.res:102:20
  addValueReference Records.res:104:7 --> Records.res:104:21
  addValueReference Records.res:106:7 --> Records.res:106:20
  addValueReference Records.res:108:7 --> Records.res:108:21
  addRecordLabelDeclaration type_ Records.res:111:3 path:+Records.myRecBsAs
  addTypeReference Records.res:115:41 --> Records.res:111:3
  addValueReference Records.res:115:7 --> Records.res:115:24
  addValueReference Records.res:117:7 --> Records.res:117:25
  Scanning References.cmt Source:References.res
  addValueDeclaration +create References.res:3:7 path:+References
  addValueDeclaration +access References.res:5:7 path:+References
  addValueDeclaration +update References.res:7:7 path:+References
  addValueDeclaration +get References.res:13:2 path:+References.R
  addValueDeclaration +make References.res:14:2 path:+References.R
  addValueDeclaration +set References.res:15:2 path:+References.R
  addValueDeclaration +get References.res:25:7 path:+References
  addValueDeclaration +make References.res:28:4 path:+References
  addValueDeclaration +set References.res:30:7 path:+References
  addValueDeclaration +destroysRefIdentity References.res:35:7 path:+References
  addValueDeclaration +preserveRefIdentity References.res:38:7 path:+References
  addValueReference References.res:3:7 --> References.res:3:17
  addValueReference References.res:5:7 --> References.res:5:16
  addValueReference References.res:7:7 --> References.res:7:16
  addValueReference References.res:7:7 --> References.res:7:16
  addValueDeclaration +get References.res:18:6 path:+References.R
  addValueReference References.res:18:6 --> References.res:18:12
  addValueDeclaration +make References.res:19:6 path:+References.R
  addValueDeclaration +set References.res:20:6 path:+References.R
  addValueReference References.res:20:6 --> References.res:20:16
  addValueReference References.res:20:6 --> References.res:20:13
  addValueReference References.res:25:7 --> References.res:13:2
  addValueReference References.res:28:4 --> References.res:14:2
  addValueReference References.res:30:7 --> References.res:15:2
  addRecordLabelDeclaration x References.res:32:27 path:+References.requiresConversion
  addValueReference References.res:35:7 --> References.res:35:30
  addValueReference References.res:38:7 --> References.res:38:30
  addValueReference References.res:13:2 --> References.res:18:6
  addValueReference References.res:14:2 --> References.res:19:6
  addValueReference References.res:15:2 --> References.res:20:6
  Scanning RepeatedLabel.cmt Source:RepeatedLabel.res
  addValueDeclaration +userData RepeatedLabel.res:12:4 path:+RepeatedLabel
  addRecordLabelDeclaration a RepeatedLabel.res:2:2 path:+RepeatedLabel.userData
  addRecordLabelDeclaration b RepeatedLabel.res:3:2 path:+RepeatedLabel.userData
  addRecordLabelDeclaration a RepeatedLabel.res:7:2 path:+RepeatedLabel.tabState
  addRecordLabelDeclaration b RepeatedLabel.res:8:2 path:+RepeatedLabel.tabState
  addRecordLabelDeclaration f RepeatedLabel.res:9:2 path:+RepeatedLabel.tabState
  addValueReference RepeatedLabel.res:12:4 --> RepeatedLabel.res:12:17
  addValueReference RepeatedLabel.res:12:4 --> RepeatedLabel.res:12:20
  addTypeReference RepeatedLabel.res:12:16 --> RepeatedLabel.res:7:2
  addTypeReference RepeatedLabel.res:12:16 --> RepeatedLabel.res:8:2
  addValueReference RepeatedLabel.res:14:7 --> RepeatedLabel.res:12:4
  Scanning RequireCond.cmt Source:RequireCond.res
  addValueDeclaration +make RequireCond.res:1:0 path:+RequireCond
  addValueDeclaration +either RequireCond.res:11:0 path:+RequireCond
  addValueDeclaration +make RequireCond.res:5:0 path:+RequireCond
  addValueDeclaration +either RequireCond.res:15:0 path:+RequireCond
  Scanning Shadow.cmt Source:Shadow.res
  addValueDeclaration +test Shadow.res:1:7 path:+Shadow
  addValueDeclaration +test Shadow.res:3:7 path:+Shadow
  addValueDeclaration +test Shadow.res:8:6 path:+Shadow.M
  addValueDeclaration +test Shadow.res:6:9 path:+Shadow.M
  Scanning TestDeadExn.cmt Source:TestDeadExn.res
  Scanning TestEmitInnerModules.cmt Source:TestEmitInnerModules.res
  addValueDeclaration +x TestEmitInnerModules.res:2:9 path:+TestEmitInnerModules.Inner
  addValueDeclaration +y TestEmitInnerModules.res:3:9 path:+TestEmitInnerModules.Inner
  addValueDeclaration +y TestEmitInnerModules.res:9:13 path:+TestEmitInnerModules.Outer.Medium.Inner
  Scanning TestFirstClassModules.cmt Source:TestFirstClassModules.res
  addValueDeclaration +convert TestFirstClassModules.res:1:7 path:+TestFirstClassModules
  addValueDeclaration +convertInterface TestFirstClassModules.res:3:7 path:+TestFirstClassModules
  addValueDeclaration +convertRecord TestFirstClassModules.res:5:7 path:+TestFirstClassModules
  addValueDeclaration +convertFirstClassModuleWithTypeEquations TestFirstClassModules.res:22:7 path:+TestFirstClassModules
  addValueReference TestFirstClassModules.res:1:7 --> TestFirstClassModules.res:1:18
  addValueReference TestFirstClassModules.res:3:7 --> TestFirstClassModules.res:3:27
  addValueReference TestFirstClassModules.res:5:7 --> TestFirstClassModules.res:5:24
  addValueReference TestFirstClassModules.res:22:7 --> TestFirstClassModules.res:24:2
  Scanning TestImmutableArray.cmt Source:TestImmutableArray.res
  addValueDeclaration +testImmutableArrayGet TestImmutableArray.res:1:7 path:+TestImmutableArray
  addValueDeclaration +testBeltArrayGet TestImmutableArray.res:11:4 path:+TestImmutableArray
  addValueDeclaration +testBeltArraySet TestImmutableArray.res:16:4 path:+TestImmutableArray
  addValueReference TestImmutableArray.res:1:7 --> TestImmutableArray.res:1:31
  addValueReference TestImmutableArray.res:1:7 --> ImmutableArray.resi:6:2
  addValueReference TestImmutableArray.res:11:4 --> TestImmutableArray.res:11:23
  addValueReference TestImmutableArray.res:16:4 --> TestImmutableArray.res:16:23
  Scanning TestImport.cmt Source:TestImport.res
  addValueDeclaration +innerStuffContents TestImport.res:4:0 path:+TestImport
  addValueDeclaration +innerStuffContentsAsEmptyObject TestImport.res:9:0 path:+TestImport
  addValueDeclaration +innerStuffContents TestImport.res:11:4 path:+TestImport
  addValueDeclaration +valueStartingWithUpperCaseLetter TestImport.res:14:0 path:+TestImport
  addValueDeclaration +defaultValue TestImport.res:16:53 path:+TestImport
  addValueDeclaration +make TestImport.res:21:0 path:+TestImport
  addValueDeclaration +make TestImport.res:31:4 path:+TestImport
  addValueDeclaration +defaultValue2 TestImport.res:33:53 path:+TestImport
  addValueReference TestImport.res:11:4 --> TestImport.res:4:0
  addRecordLabelDeclaration text TestImport.res:18:23 path:+TestImport.message
  addValueReference TestImport.res:31:4 --> TestImport.res:21:0
  addValueReference TestImport.res:4:0 --> TestImport.res:1:0
  addValueReference TestImport.res:9:0 --> TestImport.res:6:0
  addValueReference TestImport.res:14:0 --> TestImport.res:13:0
  addValueReference TestImport.res:16:53 --> TestImport.res:16:0
  addValueReference TestImport.res:21:0 --> TestImport.res:20:0
  addValueReference TestImport.res:33:53 --> TestImport.res:33:0
  Scanning TestModuleAliases.cmt Source:TestModuleAliases.res
  addValueDeclaration +testInner1 TestModuleAliases.res:24:7 path:+TestModuleAliases
  addValueDeclaration +testInner1Expanded TestModuleAliases.res:26:7 path:+TestModuleAliases
  addValueDeclaration +testInner2 TestModuleAliases.res:28:7 path:+TestModuleAliases
  addValueDeclaration +testInner2Expanded TestModuleAliases.res:30:7 path:+TestModuleAliases
  addValueReference TestModuleAliases.res:24:7 --> TestModuleAliases.res:24:21
  addValueReference TestModuleAliases.res:26:7 --> TestModuleAliases.res:26:29
  addValueReference TestModuleAliases.res:28:7 --> TestModuleAliases.res:28:21
  addValueReference TestModuleAliases.res:30:7 --> TestModuleAliases.res:30:29
  Scanning TestOptArg.cmt Source:TestOptArg.res
  addValueDeclaration +foo TestOptArg.res:3:4 path:+TestOptArg
  addValueDeclaration +bar TestOptArg.res:5:4 path:+TestOptArg
  DeadOptionalArgs.addReferences OptArg.bar called with optional argNames:z argNamesMaybe: TestOptArg.res:1:7
  addValueReference TestOptArg.res:1:7 --> OptArg.resi:2:0
  addValueReference TestOptArg.res:3:4 --> TestOptArg.res:3:14
  addValueReference TestOptArg.res:3:4 --> TestOptArg.res:3:11
  addValueReference TestOptArg.res:3:4 --> TestOptArg.res:3:17
  DeadOptionalArgs.addReferences foo called with optional argNames:x argNamesMaybe: TestOptArg.res:5:16
  addValueReference TestOptArg.res:5:4 --> TestOptArg.res:3:4
  addValueReference TestOptArg.res:7:7 --> TestOptArg.res:5:4
  Scanning TestPromise.cmt Source:TestPromise.res
  addValueDeclaration +convert TestPromise.res:10:7 path:+TestPromise
  addRecordLabelDeclaration x TestPromise.res:4:2 path:+TestPromise.fromPayload
  addRecordLabelDeclaration s TestPromise.res:5:2 path:+TestPromise.fromPayload
  addRecordLabelDeclaration result TestPromise.res:8:25 path:+TestPromise.toPayload
  addValueReference TestPromise.res:10:7 --> TestPromise.res:10:36
  addTypeReference TestPromise.res:10:35 --> TestPromise.res:5:2
  Scanning TransitiveType1.cmt Source:TransitiveType1.res
  addValueDeclaration +convert TransitiveType1.res:1:7 path:+TransitiveType1
  addValueDeclaration +convertAlias TransitiveType1.res:3:7 path:+TransitiveType1
  addValueReference TransitiveType1.res:1:7 --> TransitiveType1.res:1:18
  addValueReference TransitiveType1.res:3:7 --> TransitiveType1.res:3:23
  Scanning TransitiveType2.cmt Source:TransitiveType2.res
  addValueDeclaration +convertT2 TransitiveType2.res:5:4 path:+TransitiveType2
  addValueReference TransitiveType2.res:5:4 --> TransitiveType2.res:5:17
  Scanning TransitiveType3.cmt Source:TransitiveType3.res
  addValueDeclaration +convertT3 TransitiveType3.res:6:7 path:+TransitiveType3
  addRecordLabelDeclaration i TransitiveType3.res:2:2 path:+TransitiveType3.t3
  addRecordLabelDeclaration s TransitiveType3.res:3:2 path:+TransitiveType3.t3
  addValueReference TransitiveType3.res:6:7 --> TransitiveType3.res:6:20
  Scanning Tuples.cmt Source:Tuples.res
  addValueDeclaration +testTuple Tuples.res:3:7 path:+Tuples
  addValueDeclaration +origin Tuples.res:7:7 path:+Tuples
  addValueDeclaration +computeArea Tuples.res:9:7 path:+Tuples
  addValueDeclaration +computeAreaWithIdent Tuples.res:14:7 path:+Tuples
  addValueDeclaration +computeAreaNoConverters Tuples.res:19:7 path:+Tuples
  addValueDeclaration +coord2d Tuples.res:21:7 path:+Tuples
  addValueDeclaration +getFirstName Tuples.res:32:7 path:+Tuples
  addValueDeclaration +marry Tuples.res:34:7 path:+Tuples
  addValueDeclaration +changeSecondAge Tuples.res:36:7 path:+Tuples
  addValueReference Tuples.res:3:7 --> Tuples.res:3:21
  addValueReference Tuples.res:3:7 --> Tuples.res:3:24
  addValueReference Tuples.res:9:7 --> Tuples.res:9:23
  addValueReference Tuples.res:9:7 --> Tuples.res:9:26
  addValueReference Tuples.res:9:7 --> Tuples.res:9:29
  addValueReference Tuples.res:9:7 --> Tuples.res:11:31
  addValueReference Tuples.res:14:7 --> Tuples.res:14:32
  addValueReference Tuples.res:14:7 --> Tuples.res:14:35
  addValueReference Tuples.res:14:7 --> Tuples.res:14:38
  addValueReference Tuples.res:14:7 --> Tuples.res:16:31
  addValueReference Tuples.res:19:7 --> Tuples.res:19:35
  addValueReference Tuples.res:19:7 --> Tuples.res:19:43
  addValueReference Tuples.res:21:7 --> Tuples.res:21:18
  addValueReference Tuples.res:21:7 --> Tuples.res:21:21
  addRecordLabelDeclaration name Tuples.res:26:2 path:+Tuples.person
  addRecordLabelDeclaration age Tuples.res:27:2 path:+Tuples.person
  addTypeReference Tuples.res:32:52 --> Tuples.res:26:2
  addValueReference Tuples.res:32:7 --> Tuples.res:32:24
  addValueReference Tuples.res:34:7 --> Tuples.res:34:16
  addValueReference Tuples.res:34:7 --> Tuples.res:34:23
  addValueReference Tuples.res:36:7 --> Tuples.res:36:27
  addTypeReference Tuples.res:38:19 --> Tuples.res:27:2
  addValueReference Tuples.res:36:7 --> Tuples.res:36:34
  addValueReference Tuples.res:36:7 --> Tuples.res:36:34
  Scanning TypeParams1.cmt Source:TypeParams1.res
  addValueDeclaration +exportSomething TypeParams1.res:4:4 path:+TypeParams1
  Scanning TypeParams2.cmt Source:TypeParams2.res
  addValueDeclaration +exportSomething TypeParams2.res:7:4 path:+TypeParams2
  addRecordLabelDeclaration id TypeParams2.res:1:20 path:+TypeParams2.item
  Scanning TypeParams3.cmt Source:TypeParams3.res
  addValueDeclaration +test TypeParams3.res:1:7 path:+TypeParams3
  addValueDeclaration +test2 TypeParams3.res:3:7 path:+TypeParams3
  addValueReference TypeParams3.res:1:7 --> TypeParams3.res:1:15
  addValueReference TypeParams3.res:3:7 --> TypeParams3.res:3:16
  Scanning Types.cmt Source:Types.res
  addValueDeclaration +someIntList Types.res:3:7 path:+Types
  addValueDeclaration +map Types.res:5:7 path:+Types
  addValueDeclaration +swap Types.res:17:11 path:+Types
  addValueDeclaration +selfRecursiveConverter Types.res:33:7 path:+Types
  addValueDeclaration +mutuallyRecursiveConverter Types.res:39:7 path:+Types
  addValueDeclaration +testFunctionOnOptionsAsArgument Types.res:41:7 path:+Types
  addValueDeclaration +stringT Types.res:48:7 path:+Types
  addValueDeclaration +jsStringT Types.res:50:7 path:+Types
  addValueDeclaration +jsString2T Types.res:52:7 path:+Types
  addValueDeclaration +jsonStringify Types.res:61:7 path:+Types
  addValueDeclaration +testConvertNull Types.res:72:7 path:+Types
  addValueDeclaration +testMarshalFields Types.res:89:7 path:+Types
  addValueDeclaration +setMatch Types.res:103:7 path:+Types
  addValueDeclaration +testInstantiateTypeParameter Types.res:112:7 path:+Types
  addValueDeclaration +currentTime Types.res:119:7 path:+Types
  addValueDeclaration +i64Const Types.res:125:7 path:+Types
  addValueDeclaration +optFunction Types.res:127:7 path:+Types
  addVariantCaseDeclaration A Types.res:8:2 path:+Types.typeWithVars
  addVariantCaseDeclaration B Types.res:9:2 path:+Types.typeWithVars
  addValueReference Types.res:17:11 --> Types.res:17:19
  addValueReference Types.res:17:11 --> Types.res:17:19
  addValueReference Types.res:17:11 --> Types.res:17:11
  addValueReference Types.res:17:11 --> Types.res:17:19
  addValueReference Types.res:17:11 --> Types.res:17:11
  addValueReference Types.res:17:11 --> Types.res:18:2
  addRecordLabelDeclaration self Types.res:24:33 path:+Types.selfRecursive
  addRecordLabelDeclaration b Types.res:26:38 path:+Types.mutuallyRecursiveA
  addRecordLabelDeclaration a Types.res:27:26 path:+Types.mutuallyRecursiveB
  addValueReference Types.res:33:7 --> Types.res:33:34
  addTypeReference Types.res:33:33 --> Types.res:24:33
  addValueReference Types.res:39:7 --> Types.res:39:38
  addTypeReference Types.res:39:37 --> Types.res:26:38
  addValueReference Types.res:41:7 --> Types.res:41:42
  addValueReference Types.res:41:7 --> Types.res:41:57
  addVariantCaseDeclaration A Types.res:45:2 path:+Types.opaqueVariant
  addVariantCaseDeclaration B Types.res:46:2 path:+Types.opaqueVariant
  addRecordLabelDeclaration i Types.res:68:2 path:+Types.record
  addRecordLabelDeclaration s Types.res:69:2 path:+Types.record
  addValueReference Types.res:72:7 --> Types.res:72:26
  addValueReference Types.res:89:42 --> Types.res:89:42
  addValueReference Types.res:103:7 --> Types.res:103:19
  addRecordLabelDeclaration id Types.res:108:19 path:+Types.someRecord
  addValueReference Types.res:112:7 --> Types.res:112:39
  addValueDeclaration +x Types.res:133:6 path:+Types.ObjectId
  Scanning Unboxed.cmt Source:Unboxed.res
  addValueDeclaration +testV1 Unboxed.res:7:7 path:+Unboxed
  addValueDeclaration +r2Test Unboxed.res:15:7 path:+Unboxed
  addVariantCaseDeclaration A Unboxed.res:2:17 path:+Unboxed.v1
  addVariantCaseDeclaration A Unboxed.res:5:17 path:+Unboxed.v2
  addValueReference Unboxed.res:7:7 --> Unboxed.res:7:17
  addRecordLabelDeclaration x Unboxed.res:10:18 path:+Unboxed.r1
  addVariantCaseDeclaration B Unboxed.res:13:17 path:+Unboxed.r2
  addValueReference Unboxed.res:15:7 --> Unboxed.res:15:17
  Scanning Uncurried.cmt Source:Uncurried.res
  addValueDeclaration +uncurried0 Uncurried.res:9:7 path:+Uncurried
  addValueDeclaration +uncurried1 Uncurried.res:11:7 path:+Uncurried
  addValueDeclaration +uncurried2 Uncurried.res:13:7 path:+Uncurried
  addValueDeclaration +uncurried3 Uncurried.res:15:7 path:+Uncurried
  addValueDeclaration +curried3 Uncurried.res:17:7 path:+Uncurried
  addValueDeclaration +callback Uncurried.res:19:7 path:+Uncurried
  addValueDeclaration +callback2 Uncurried.res:24:7 path:+Uncurried
  addValueDeclaration +callback2U Uncurried.res:26:7 path:+Uncurried
  addValueDeclaration +sumU Uncurried.res:28:7 path:+Uncurried
  addValueDeclaration +sumU2 Uncurried.res:30:7 path:+Uncurried
  addValueDeclaration +sumCurried Uncurried.res:32:7 path:+Uncurried
  addValueDeclaration +sumLblCurried Uncurried.res:37:7 path:+Uncurried
  addValueReference Uncurried.res:11:7 --> Uncurried.res:11:23
  addValueReference Uncurried.res:13:7 --> Uncurried.res:13:23
  addValueReference Uncurried.res:13:7 --> Uncurried.res:13:26
  addValueReference Uncurried.res:15:7 --> Uncurried.res:15:23
  addValueReference Uncurried.res:15:7 --> Uncurried.res:15:26
  addValueReference Uncurried.res:15:7 --> Uncurried.res:15:29
  addValueReference Uncurried.res:17:7 --> Uncurried.res:17:19
  addValueReference Uncurried.res:17:7 --> Uncurried.res:17:22
  addValueReference Uncurried.res:17:7 --> Uncurried.res:17:25
  addValueReference Uncurried.res:19:7 --> Uncurried.res:19:18
  addRecordLabelDeclaration login Uncurried.res:21:13 path:+Uncurried.auth
  addRecordLabelDeclaration loginU Uncurried.res:22:14 path:+Uncurried.authU
  addTypeReference Uncurried.res:24:27 --> Uncurried.res:21:13
  addValueReference Uncurried.res:24:7 --> Uncurried.res:24:19
  addTypeReference Uncurried.res:26:28 --> Uncurried.res:22:14
  addValueReference Uncurried.res:26:7 --> Uncurried.res:26:20
  addValueReference Uncurried.res:28:7 --> Uncurried.res:28:20
  addValueReference Uncurried.res:28:7 --> Uncurried.res:28:17
  addValueReference Uncurried.res:28:7 --> Uncurried.res:28:20
  addValueReference Uncurried.res:30:7 --> Uncurried.res:30:23
  addValueReference Uncurried.res:30:7 --> Uncurried.res:30:18
  addValueReference Uncurried.res:30:7 --> Uncurried.res:30:23
  addValueReference Uncurried.res:32:7 --> Uncurried.res:34:2
  addValueReference Uncurried.res:32:7 --> Uncurried.res:32:20
  addValueReference Uncurried.res:32:7 --> Uncurried.res:34:2
  addValueReference Uncurried.res:32:7 --> Uncurried.res:32:20
  addValueReference Uncurried.res:37:7 --> Uncurried.res:39:3
  addValueReference Uncurried.res:37:7 --> Uncurried.res:37:35
  addValueReference Uncurried.res:37:7 --> Uncurried.res:39:3
  addValueReference Uncurried.res:37:7 --> Uncurried.res:37:24
  addValueReference Uncurried.res:37:7 --> Uncurried.res:37:35
  Scanning Unison.cmt Source:Unison.res
  addValueDeclaration +group Unison.res:17:4 path:+Unison
  addValueDeclaration +fits Unison.res:19:8 path:+Unison
  addValueDeclaration +toString Unison.res:26:8 path:+Unison
  addVariantCaseDeclaration IfNeed Unison.res:4:2 path:+Unison.break
  addVariantCaseDeclaration Never Unison.res:5:2 path:+Unison.break
  addVariantCaseDeclaration Always Unison.res:6:2 path:+Unison.break
  addRecordLabelDeclaration break Unison.res:9:2 path:+Unison.t
  addRecordLabelDeclaration doc Unison.res:10:2 path:+Unison.t
  addVariantCaseDeclaration Empty Unison.res:14:2 path:+Unison.stack
  addVariantCaseDeclaration Cons Unison.res:15:2 path:+Unison.stack
  addValueReference Unison.res:17:4 --> Unison.res:17:20
  addTypeReference Unison.res:17:20 --> Unison.res:4:2
  addValueReference Unison.res:17:4 --> Unison.res:17:13
  addValueReference Unison.res:17:4 --> Unison.res:17:28
  addValueReference Unison.res:19:8 --> Unison.res:19:16
  addValueReference Unison.res:19:8 --> Unison.res:19:16
  addValueReference Unison.res:19:8 --> Unison.res:23:10
  addValueReference Unison.res:19:8 --> Unison.res:23:16
  addValueReference Unison.res:19:8 --> Unison.res:19:8
  addTypeReference Unison.res:23:9 --> Unison.res:10:2
  addValueReference Unison.res:19:8 --> Unison.res:19:19
  addValueReference Unison.res:26:8 --> Unison.res:26:20
  addValueReference Unison.res:26:8 --> Unison.res:28:23
  addValueReference Unison.res:26:8 --> Unison.res:19:8
  addValueReference Unison.res:26:8 --> Unison.res:28:23
  addValueReference Unison.res:26:8 --> Unison.res:26:20
  addValueReference Unison.res:26:8 --> Unison.res:26:8
  addValueReference Unison.res:26:8 --> Unison.res:28:17
  addValueReference Unison.res:26:8 --> Unison.res:28:23
  addValueReference Unison.res:26:8 --> Unison.res:26:20
  addValueReference Unison.res:26:8 --> Unison.res:26:8
  addValueReference Unison.res:26:8 --> Unison.res:28:17
  addValueReference Unison.res:26:8 --> Unison.res:28:23
  addValueReference Unison.res:26:8 --> Unison.res:26:20
  addValueReference Unison.res:26:8 --> Unison.res:26:8
  addValueReference Unison.res:26:8 --> Unison.res:28:10
  addTypeReference Unison.res:28:9 --> Unison.res:9:2
  addTypeReference Unison.res:28:9 --> Unison.res:10:2
  addValueReference Unison.res:26:8 --> Unison.res:26:28
  addTypeReference Unison.res:37:20 --> Unison.res:14:2
  addValueReference Unison.res:37:0 --> Unison.res:26:8
  addTypeReference Unison.res:38:20 --> Unison.res:15:2
  DeadOptionalArgs.addReferences group called with optional argNames:break argNamesMaybe: Unison.res:38:25
  addTypeReference Unison.res:38:38 --> Unison.res:5:2
  addValueReference Unison.res:38:25 --> Unison.res:17:4
  addTypeReference Unison.res:38:53 --> Unison.res:14:2
  addValueReference Unison.res:38:0 --> Unison.res:26:8
  addTypeReference Unison.res:39:20 --> Unison.res:15:2
  DeadOptionalArgs.addReferences group called with optional argNames:break argNamesMaybe: Unison.res:39:25
  addTypeReference Unison.res:39:38 --> Unison.res:6:2
  addValueReference Unison.res:39:25 --> Unison.res:17:4
  addTypeReference Unison.res:39:52 --> Unison.res:14:2
  addValueReference Unison.res:39:0 --> Unison.res:26:8
  Scanning UseImportJsValue.cmt Source:UseImportJsValue.res
  addValueDeclaration +useGetProp UseImportJsValue.res:1:7 path:+UseImportJsValue
  addValueDeclaration +useTypeImportedInOtherModule UseImportJsValue.res:3:7 path:+UseImportJsValue
  addValueReference UseImportJsValue.res:1:7 --> UseImportJsValue.res:1:21
  addValueReference UseImportJsValue.res:1:7 --> ImportJsValue.res:33:2
  addValueReference UseImportJsValue.res:3:7 --> UseImportJsValue.res:3:39
  Scanning Variants.cmt Source:Variants.res
  addValueDeclaration +isWeekend Variants.res:11:7 path:+Variants
  addValueDeclaration +monday Variants.res:17:7 path:+Variants
  addValueDeclaration +saturday Variants.res:18:7 path:+Variants
  addValueDeclaration +sunday Variants.res:19:7 path:+Variants
  addValueDeclaration +onlySunday Variants.res:21:7 path:+Variants
  addValueDeclaration +swap Variants.res:23:7 path:+Variants
  addValueDeclaration +testConvert Variants.res:38:7 path:+Variants
  addValueDeclaration +fortytwoOK Variants.res:40:7 path:+Variants
  addValueDeclaration +fortytwoBAD Variants.res:43:7 path:+Variants
  addValueDeclaration +testConvert2 Variants.res:56:7 path:+Variants
  addValueDeclaration +testConvert3 Variants.res:69:7 path:+Variants
  addValueDeclaration +testConvert2to3 Variants.res:72:7 path:+Variants
  addValueDeclaration +id1 Variants.res:78:7 path:+Variants
  addValueDeclaration +id2 Variants.res:80:7 path:+Variants
  addValueDeclaration +polyWithOpt Variants.res:85:7 path:+Variants
  addValueDeclaration +restResult1 Variants.res:101:7 path:+Variants
  addValueDeclaration +restResult2 Variants.res:103:7 path:+Variants
  addValueDeclaration +restResult3 Variants.res:105:7 path:+Variants
  addValueReference Variants.res:11:7 --> Variants.res:11:20
  addValueReference Variants.res:23:7 --> Variants.res:23:14
  addValueReference Variants.res:38:7 --> Variants.res:38:22
  addValueReference Variants.res:56:7 --> Variants.res:56:23
  addValueReference Variants.res:69:7 --> Variants.res:69:23
  addValueReference Variants.res:72:7 --> Variants.res:72:26
  addValueReference Variants.res:78:7 --> Variants.res:78:14
  addValueReference Variants.res:80:7 --> Variants.res:80:14
  addVariantCaseDeclaration Type Variants.res:83:20 path:+Variants.type_
  addValueReference Variants.res:85:7 --> Variants.res:85:21
  addValueReference Variants.res:85:7 --> Variants.res:85:21
  addValueReference Variants.res:85:7 --> Variants.res:85:21
  addVariantCaseDeclaration Ok Variants.res:94:2 path:+Variants.result1
  addVariantCaseDeclaration Error Variants.res:95:2 path:+Variants.result1
  addValueReference Variants.res:101:7 --> Variants.res:101:22
  addValueReference Variants.res:103:7 --> Variants.res:103:22
  addValueReference Variants.res:105:7 --> Variants.res:105:22
  Scanning VariantsWithPayload.cmt Source:VariantsWithPayload.res
  addValueDeclaration +testWithPayload VariantsWithPayload.res:19:7 path:+VariantsWithPayload
  addValueDeclaration +printVariantWithPayload VariantsWithPayload.res:21:7 path:+VariantsWithPayload
  addValueDeclaration +testManyPayloads VariantsWithPayload.res:37:7 path:+VariantsWithPayload
  addValueDeclaration +printManyPayloads VariantsWithPayload.res:39:7 path:+VariantsWithPayload
  addValueDeclaration +testSimpleVariant VariantsWithPayload.res:51:7 path:+VariantsWithPayload
  addValueDeclaration +testVariantWithPayloads VariantsWithPayload.res:60:7 path:+VariantsWithPayload
  addValueDeclaration +printVariantWithPayloads VariantsWithPayload.res:62:7 path:+VariantsWithPayload
  addValueDeclaration +testVariant1Int VariantsWithPayload.res:85:7 path:+VariantsWithPayload
  addValueDeclaration +testVariant1Object VariantsWithPayload.res:89:7 path:+VariantsWithPayload
  addRecordLabelDeclaration x VariantsWithPayload.res:2:2 path:+VariantsWithPayload.payload
  addRecordLabelDeclaration y VariantsWithPayload.res:3:2 path:+VariantsWithPayload.payload
  addValueReference VariantsWithPayload.res:19:7 --> VariantsWithPayload.res:19:26
  addTypeReference VariantsWithPayload.res:28:57 --> VariantsWithPayload.res:2:2
  addValueReference VariantsWithPayload.res:21:7 --> VariantsWithPayload.res:28:7
  addTypeReference VariantsWithPayload.res:28:74 --> VariantsWithPayload.res:3:2
  addValueReference VariantsWithPayload.res:21:7 --> VariantsWithPayload.res:28:7
  addValueReference VariantsWithPayload.res:21:7 --> VariantsWithPayload.res:21:34
  addValueReference VariantsWithPayload.res:37:7 --> VariantsWithPayload.res:37:27
  addValueReference VariantsWithPayload.res:39:7 --> VariantsWithPayload.res:41:9
  addValueReference VariantsWithPayload.res:39:7 --> VariantsWithPayload.res:42:9
  addValueReference VariantsWithPayload.res:39:7 --> VariantsWithPayload.res:42:13
  addTypeReference VariantsWithPayload.res:43:55 --> VariantsWithPayload.res:2:2
  addValueReference VariantsWithPayload.res:39:7 --> VariantsWithPayload.res:43:11
  addTypeReference VariantsWithPayload.res:43:72 --> VariantsWithPayload.res:3:2
  addValueReference VariantsWithPayload.res:39:7 --> VariantsWithPayload.res:43:11
  addValueReference VariantsWithPayload.res:39:7 --> VariantsWithPayload.res:39:28
  addVariantCaseDeclaration A VariantsWithPayload.res:47:2 path:+VariantsWithPayload.simpleVariant
  addVariantCaseDeclaration B VariantsWithPayload.res:48:2 path:+VariantsWithPayload.simpleVariant
  addVariantCaseDeclaration C VariantsWithPayload.res:49:2 path:+VariantsWithPayload.simpleVariant
  addValueReference VariantsWithPayload.res:51:7 --> VariantsWithPayload.res:51:28
  addVariantCaseDeclaration A VariantsWithPayload.res:54:2 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration B VariantsWithPayload.res:55:2 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration C VariantsWithPayload.res:56:2 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration D VariantsWithPayload.res:57:2 path:+VariantsWithPayload.variantWithPayloads
  addVariantCaseDeclaration E VariantsWithPayload.res:58:2 path:+VariantsWithPayload.variantWithPayloads
  addValueReference VariantsWithPayload.res:60:7 --> VariantsWithPayload.res:60:34
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:65:6
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:66:6
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:66:9
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:71:7
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:71:10
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:76:6
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:76:9
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:76:12
  addValueReference VariantsWithPayload.res:62:7 --> VariantsWithPayload.res:62:34
  addVariantCaseDeclaration R VariantsWithPayload.res:83:26 path:+VariantsWithPayload.variant1Int
  addValueReference VariantsWithPayload.res:85:7 --> VariantsWithPayload.res:85:26
  addVariantCaseDeclaration R VariantsWithPayload.res:87:29 path:+VariantsWithPayload.variant1Object
  addValueReference VariantsWithPayload.res:89:7 --> VariantsWithPayload.res:89:29
  Scanning trace.cmt Source:trace.ml
  addValueDeclaration +infok trace.ml:5:4 path:+trace
  addRecordLabelDeclaration pf trace.ml:3:11 path:+trace.pf
  addValueReference trace.ml:5:4 --> trace.ml:5:30
  addValueReference trace.mli:5:0 --> trace.ml:5:4
  Scanning trace.cmti Source:trace.mli
  addRecordLabelDeclaration pf trace.mli:3:11 path:trace.pf
  extendTypeDependencies trace.ml:3:11 --> trace.mli:3:11
  extendTypeDependencies trace.mli:3:11 --> trace.ml:3:11
  addValueDeclaration +infok trace.mli:5:0 path:trace
  addValueReference TestDeadExn.res:1:7 --> DeadExn.res:1:0
  
File References

  AutoAnnotate.res -->> 
  BootloaderResource.res -->> 
  BucklescriptAnnotations.res -->> 
  ComponentAsProp.res -->> ReactDOMRe.re, ReasonReact.rei
  CreateErrorHandler1.res -->> ErrorHandler.resi
  CreateErrorHandler2.res -->> 
  DeadCodeImplementation.res -->> 
  DeadCodeInterface.res -->> 
  DeadExn.res -->> 
  DeadExn.resi -->> 
  DeadMl.ml -->> 
  DeadRT.res -->> 
  DeadRT.resi -->> 
  DeadTest.res -->> React.re, BootloaderResource.res, DeadValueTest.resi, DynamicallyLoadedComponent.res, ImmutableArray.resi, JSResource.res, ExportWithRename.res, trace.mli
  DeadTestBlacklist.res -->> 
  DeadTestWithInterface.res -->> 
  DeadTypeTest.res -->> 
  DeadTypeTest.resi -->> DeadTypeTest.res
  DeadValueTest.res -->> 
  DeadValueTest.resi -->> DeadValueTest.res
  Docstrings.res -->> 
  DynamicallyLoadedComponent.res -->> React.re
  ErrorHandler.res -->> 
  ErrorHandler.resi -->> ErrorHandler.res
  EverythingLiveHere.res -->> 
  FirstClassModules.res -->> 
  FirstClassModulesInterface.res -->> 
  FirstClassModulesInterface.resi -->> FirstClassModulesInterface.res
  Hooks.res -->> React.re, ReactDOMRe.re, ReasonReact.rei, ImportHookDefault.res, ImportHooks.res
  IgnoreInterface.res -->> 
  IgnoreInterface.resi -->> 
  ImmutableArray.res -->> 
  ImmutableArray.resi -->> ImmutableArray.res
  ImportHookDefault.res -->> 
  ImportHooks.res -->> 
  ImportIndex.res -->> 
  ImportJsValue.res -->> 
  ImportMyBanner.res -->> 
  JSResource.res -->> 
  LetPrivate.res -->> 
  ModuleAliases.res -->> 
  ModuleAliases2.res -->> 
  NestedModules.res -->> 
  NestedModulesInSignature.res -->> 
  NestedModulesInSignature.resi -->> NestedModulesInSignature.res
  Newsyntax.res -->> 
  Newton.res -->> 
  Opaque.res -->> 
  OptArg.res -->> 
  OptArg.resi -->> OptArg.res
  Records.res -->> 
  References.res -->> 
  RepeatedLabel.res -->> 
  RequireCond.res -->> 
  Shadow.res -->> 
  TestDeadExn.res -->> DeadExn.res
  TestEmitInnerModules.res -->> 
  TestFirstClassModules.res -->> 
  TestImmutableArray.res -->> ImmutableArray.resi
  TestImport.res -->> 
  TestModuleAliases.res -->> 
  TestOptArg.res -->> OptArg.resi
  TestPromise.res -->> 
  TransitiveType1.res -->> 
  TransitiveType2.res -->> 
  TransitiveType3.res -->> 
  Tuples.res -->> 
  TypeParams1.res -->> 
  TypeParams2.res -->> 
  TypeParams3.res -->> 
  Types.res -->> 
  Unboxed.res -->> 
  Uncurried.res -->> 
  Unison.res -->> 
  UseImportJsValue.res -->> ImportJsValue.res
  Variants.res -->> 
  VariantsWithPayload.res -->> 
  trace.ml -->> 
  trace.mli -->> trace.ml
  Dead VariantCase +AutoAnnotate.annotatedVariant.R4: 0 references () [0]
  Dead VariantCase +AutoAnnotate.annotatedVariant.R2: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.r4.r4: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.r3.r3: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.r2.r2: 0 references () [0]
  Dead RecordLabel +AutoAnnotate.record.variant: 0 references () [0]
  Dead VariantCase +AutoAnnotate.variant.R: 0 references () [0]
  Dead Value +BucklescriptAnnotations.+bar: 0 references () [1]
  Dead Value +BucklescriptAnnotations.+f: 0 references () [0]
  Dead Value +BucklescriptAnnotations.+foo: 0 references () [0]

  Warning Unused Argument
  File "./ComponentAsProp.res", line 7, characters 0-282
  optional argument button of function +make is never used
  Live Value +ComponentAsProp.+make: 0 references () [0]
  Live Value +ComponentAsProp.+component: 1 references (ComponentAsProp.res:7:4) [0]
  Live Value +CreateErrorHandler1.Error1.+notification: 1 references (ErrorHandler.resi:3:2) [0]
  Live Value +CreateErrorHandler2.Error2.+notification: 1 references (ErrorHandler.resi:3:2) [0]
  Live Value +DeadCodeImplementation.M.+x: 1 references (DeadCodeInterface.res:2:2) [0]
  Live Value +DeadMl.+foo: 0 references () [0]
  Live Value +DeadMl.WithSignature.+live11: 0 references () [1]
  Live Value +DeadMl.WithSignature.+live11: 1 references (DeadMl.ml:103:2) [0]
  Dead Value +DeadMl.WithSignature.+dead10: 0 references () [1]
  Dead Value +DeadMl.WithSignature.+dead10: 0 references () [0]
  Live Value +DeadMl.WithSignature.+live9: 0 references () [1]
  Live Value +DeadMl.WithSignature.+live9: 1 references (DeadMl.ml:96:2) [0]
  Dead Value +DeadMl.WithSignature.+dead8: 0 references () [1]
  Dead Value +DeadMl.WithSignature.+dead8: 0 references () [0]
  Dead Value +DeadMl.+dead7: 0 references () [0]
  Live Value +DeadMl.+live6: 0 references () [0]
  Dead Value +DeadMl.+dead5: 0 references () [0]
  Live Value +DeadMl.+live5: 0 references () [0]
  Dead Value +DeadMl.+dead4: 0 references () [0]
  Live Value +DeadMl.Scope.+live3: 0 references () [0]
  Live Value +DeadMl.Scope.Inner2.+liveInner3: 0 references () [0]
  Dead Value +DeadMl.Scope.+dead2: 0 references () [0]
  Live Value +DeadMl.Scope.Inner1.+liveInner2: 0 references () [0]
  Dead Value +DeadMl.Scope.Inner1.+deadInner1: 0 references () [0]
  Dead Value +DeadMl.Scope.+dead1: 0 references () [0]
  Dead Value +DeadMl.+inline_threshold: 0 references () [0]
  Dead Value +DeadMl.+map_split_opt: 0 references () [0]
  Dead RecordLabel +DeadMl.module_info.case: 0 references () [0]
  Dead RecordLabel +DeadMl.module_info.module_name: 0 references () [0]
  Dead VariantCase +DeadMl.l.Lfunction: 0 references () [0]
  Dead Value +DeadMl.Bs_version.+package_name: 0 references () [1]
  Dead Value +DeadMl.Bs_version.+package_name: 0 references () [0]
  Dead Value +DeadMl.Bs_version.+header: 0 references () [1]
  Dead Value +DeadMl.Bs_version.+header: 0 references () [0]
  Dead Value +DeadMl.Bs_version.+version: 0 references () [1]
  Dead Value +DeadMl.Bs_version.+version: 0 references () [0]
  Dead Value +DeadMl.+_: 0 references () [0]
  Dead Value +DeadMl.+_: 0 references () [0]
  Dead VariantCase +DeadMl.thisIsDead.DeadB: 0 references () [0]
  Dead VariantCase +DeadMl.thisIsDead.DeadA: 0 references () [0]
  Dead Value +DeadMl.+thisHasSemicolons: 0 references () [0]
  Dead Value +DeadMl.AA.+thisIsInInterface: 0 references () [1]
  Dead Value +DeadMl.AA.+thisIsInInterface: 0 references () [0]
  Dead Value +DeadMl.QQ.+thisSpansSeveralLines: 0 references () [0]
  Dead Value +DeadRT.+emitModuleAccessPath: 0 references () [0]
  Live VariantCase +DeadRT.moduleAccessPath.Kaboom: 1 references (DeadRT.res:11:16) [0]
  Live VariantCase DeadRT.moduleAccessPath.Root: 1 references (DeadTest.res:105:16) [1]
  Live VariantCase +DeadRT.moduleAccessPath.Root: 1 references (DeadRT.resi:2:2) [0]
  Live VariantCase DeadRT.moduleAccessPath.Kaboom: 1 references (DeadRT.res:3:2) [0]
  Live VariantCase +DeadTest.WithInclude.t.A: 1 references (DeadTest.res:181:7) [1]
  Live VariantCase +DeadTest.WithInclude.t.A: 1 references (DeadTest.res:173:11) [0]
  Live Value +DeadTest.GloobLive.+globallyLive3: 0 references () [0]
  Live Value +DeadTest.GloobLive.+globallyLive2: 0 references () [0]
  Live Value +DeadTest.GloobLive.+globallyLive1: 0 references () [0]
  Dead Value +DeadTest.+stringLengthNoSideEffects: 0 references () [0]
  Dead Value +DeadTest.+theSideEffectIsLogging: 0 references () [0]
  Live Value +DeadTest.+make: 1 references (DeadTest.res:158:16) [0]
  Dead Value +DeadTest.+makeSwitch: 0 references () [0]
  Dead Value +DeadTest.+deadRef: 0 references () [0]
  Dead Value +DeadTest.+minute: 0 references () [0]
  Dead Value +DeadTest.+second: 0 references () [0]
  Dead Value +DeadTest.+a3: 0 references () [0]
  Dead Value +DeadTest.+a2: 0 references () [0]
  Dead Value +DeadTest.+a1: 0 references () [0]
  Dead Value +DeadTest.+zzz: 0 references () [0]
  Dead Value +DeadTest.+cmp2: 0 references () [0]
  Live Value +DeadTest.+cmp: 1 references (DeadTest.res:130:16) [0]
  Dead Value +DeadTest.LazyDynamicallyLoadedComponent2.+make: 0 references () [0]
  Dead Value +DeadTest.LazyDynamicallyLoadedComponent2.+makeProps: 0 references () [0]
  Dead Value +DeadTest.LazyDynamicallyLoadedComponent2.+reasonResource: 0 references () [0]
<<<<<<< HEAD
  Live Value +DeadTest.LazyDynamicallyLoadedComponent.+make: 1 references (DeadTest.re:132:4) [0]
=======
  Live Value +DeadTest.LazyDynamicallyLoadedComponent.+make: 1 references (DeadTest.res:126:4) [0]
  Dead Value +DeadTest.Ext_buffer.+unsafe_string2: 0 references () [1]
>>>>>>> Check differences in DCE analysis after conversion.
  Dead Value +DeadTest.Ext_buffer.+unsafe_string2: 0 references () [0]
  Dead Value +DeadTest.+unsafe_string1: 0 references () [0]
  Dead Value +DeadTest.+withDefaultValue: 0 references () [0]
  Dead Value +DeadTest.+bar: 0 references () [0]
  Dead Value +DeadTest.+foo: 0 references () [1]
  Dead Value +DeadTest.+cb: 0 references () [0]
  Dead Value +DeadTest.+cb: 0 references () [0]
  Dead Value +DeadTest.+recWithCallback: 0 references () [0]
  Dead Value +DeadTest.+rec2: 0 references () [0]
  Dead Value +DeadTest.+rec1: 0 references () [0]
  Dead Value +DeadTest.+split_map: 0 references () [0]
  Dead Value +DeadTest.+unusedRec: 0 references () [0]
  Dead Value +DeadTest.MM.+valueOnlyInImplementation: 0 references () [0]
  Live Value +DeadTest.MM.+x: 1 references (DeadTest.res:68:9) [1]
  Live Value +DeadTest.MM.+x: 1 references (DeadTest.res:59:2) [0]
  Dead Value +DeadTest.MM.+y: 0 references () [1]
  Live Value +DeadTest.MM.+y: 1 references (DeadTest.res:63:6) [0]
  Dead Value +DeadTest.UnderscoreInside.+_: 0 references () [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Live RecordLabel +DeadTest.record.yyy: 1 references (DeadTest.res:52:9) [0]
  Live RecordLabel +DeadTest.record.xxx: 1 references (DeadTest.res:51:13) [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Dead Value +DeadTest.+_: 0 references () [0]
  Live Value +DeadTest.VariantUsedOnlyInImplementation.+a: 1 references (DeadTest.res:41:17) [1]
  Live Value +DeadTest.VariantUsedOnlyInImplementation.+a: 1 references (DeadTest.res:35:2) [0]
  Live VariantCase +DeadTest.VariantUsedOnlyInImplementation.t.A: 1 references (DeadTest.res:38:10) [0]
  Live VariantCase +DeadTest.VariantUsedOnlyInImplementation.t.A: 1 references (DeadTest.res:37:11) [0]
  Dead Value +DeadTest.M.+thisSignatureItemIsDead: 0 references () [0]
  Live Value +DeadTest.+thisIsMarkedLive: 0 references () [0]
  Live Value +DeadTest.+thisIsKeptAlive: 1 references (DeadTest.res:19:4) [0]
  Live Value +DeadTest.+thisIsUsedTwice: 2 references (DeadTest.res:10:7, DeadTest.res:11:7) [0]
  Live Value +DeadTest.+thisIsUsedOnce: 1 references (DeadTest.res:7:7) [0]
  Live Value +DeadTest.+fortyTwoButExported: 0 references () [0]
  Dead Value +DeadTest.+fortytwo: 0 references () [0]
  Dead Value +DeadTestBlacklist.+x: 0 references () [0]
  Dead Value +DeadTestWithInterface.Ext_buffer.+x: 0 references () [1]
  Dead Value +DeadTestWithInterface.Ext_buffer.+x: 0 references () [0]
  Dead VariantCase DeadTypeTest.deadType.InNeither: 0 references () [0]
  Live VariantCase +DeadTypeTest.deadType.InBoth: 1 references (DeadTypeTest.res:13:8) [1]
  Live VariantCase DeadTypeTest.deadType.InBoth: 2 references (DeadTest.res:44:8, DeadTypeTest.res:9:2) [0]
  Live VariantCase DeadTypeTest.deadType.OnlyInInterface: 1 references (DeadTest.res:43:8) [0]
  Live VariantCase +DeadTypeTest.deadType.OnlyInImplementation: 1 references (DeadTypeTest.res:12:8) [1]
  Live VariantCase DeadTypeTest.deadType.OnlyInImplementation: 1 references (DeadTypeTest.res:7:2) [0]
  Dead Value DeadTypeTest.+a: 0 references () [0]
  Dead VariantCase DeadTypeTest.t.B: 0 references () [0]
  Live VariantCase +DeadTypeTest.t.A: 1 references (DeadTypeTest.res:4:8) [1]
  Live VariantCase DeadTypeTest.t.A: 1 references (DeadTypeTest.res:2:2) [0]
  Live Value +Docstrings.+unitArgWithConversionU: 0 references () [0]
  Live Value +Docstrings.+unitArgWithConversion: 0 references () [0]
  Dead VariantCase +Docstrings.t.B: 0 references () [0]
  Live VariantCase +Docstrings.t.A: 2 references (Docstrings.res:50:37, Docstrings.res:52:42) [0]
  Live Value +Docstrings.+unitArgWithoutConversionU: 0 references () [0]
  Live Value +Docstrings.+unitArgWithoutConversion: 0 references () [0]
  Live Value +Docstrings.+grouped: 0 references () [0]
  Live Value +Docstrings.+unnamed2U: 0 references () [0]
  Live Value +Docstrings.+unnamed2: 0 references () [0]
  Live Value +Docstrings.+unnamed1U: 0 references () [0]
  Live Value +Docstrings.+unnamed1: 0 references () [0]
  Live Value +Docstrings.+useParamU: 0 references () [0]
  Live Value +Docstrings.+useParam: 0 references () [0]
  Live Value +Docstrings.+treeU: 0 references () [0]
  Live Value +Docstrings.+twoU: 0 references () [0]
  Live Value +Docstrings.+oneU: 0 references () [0]
  Live Value +Docstrings.+tree: 0 references () [0]
  Live Value +Docstrings.+two: 0 references () [0]
  Live Value +Docstrings.+one: 0 references () [0]
  Live Value +Docstrings.+signMessage: 0 references () [0]
  Live Value +Docstrings.+flat: 0 references () [0]
  Dead Value +EverythingLiveHere.+z: 0 references () [0]
  Dead Value +EverythingLiveHere.+y: 0 references () [0]
  Dead Value +EverythingLiveHere.+x: 0 references () [0]
  Live Value +FirstClassModules.+someFunctorAsFunction: 0 references () [0]
  Live Value +FirstClassModules.SomeFunctor.+ww: 1 references (FirstClassModules.res:58:2) [0]
  Live Value +FirstClassModules.+testConvert: 0 references () [0]
  Dead Value +FirstClassModules.+firstClassModule: 0 references () [0]
  Live Value +FirstClassModules.M.+x: 1 references (FirstClassModules.res:2:2) [0]
  Dead Value +FirstClassModules.M.+f: 0 references () [0]
  Live Value +FirstClassModules.M.+f: 1 references (FirstClassModules.res:4:2) [0]
  Live Value +FirstClassModules.M.Z.+u: 1 references (FirstClassModules.res:41:4) [0]
  Live Value +FirstClassModules.M.InnerModule3.+k3: 1 references (FirstClassModules.res:16:4) [0]
  Live Value +FirstClassModules.M.InnerModule2.+k: 1 references (FirstClassModules.res:12:4) [0]
  Live Value +FirstClassModules.M.+y: 1 references (FirstClassModules.res:22:2) [0]
  Dead Value FirstClassModulesInterface.+r: 0 references () [0]
  Dead RecordLabel FirstClassModulesInterface.record.y: 0 references () [0]
  Dead RecordLabel FirstClassModulesInterface.record.x: 0 references () [0]
  Live Value +Hooks.+aComponentWithChildren: 0 references () [0]
  Live Value +Hooks.RenderPropRequiresConversion.+car: 1 references (Hooks.res:105:30) [0]
  Live Value +Hooks.RenderPropRequiresConversion.+make: 0 references () [0]
  Live Value +Hooks.+functionReturningReactElement: 0 references () [0]
  Live Value +Hooks.+polymorphicComponent: 0 references () [0]
  Live Value +Hooks.+input: 0 references () [0]
  Live RecordLabel +Hooks.r.x: 1 references (Hooks.res:84:43) [0]
  Live Value +Hooks.+testForwardRef: 0 references () [0]
  Dead Value +Hooks.+_: 0 references () [0]
  Live Value +Hooks.+makeWithRef: 1 references (Hooks.res:78:7) [0]
  Live Value +Hooks.+componentWithRenamedArgs: 0 references () [0]
  Live Value +Hooks.+functionWithRenamedArgs: 0 references () [0]
  Live Value +Hooks.NoProps.+make: 0 references () [0]
  Live Value +Hooks.Inner.Inner2.+anotherComponent: 0 references () [0]
  Live Value +Hooks.Inner.Inner2.+make: 0 references () [0]
  Live Value +Hooks.Inner.+anotherComponent: 0 references () [0]
  Live Value +Hooks.Inner.+make: 0 references () [0]
  Live Value +Hooks.+anotherComponent: 0 references () [0]
  Live Value +Hooks.+default: 0 references () [0]
  Live Value +Hooks.+make: 1 references (Hooks.res:24:7) [0]
  Live RecordLabel +Hooks.vehicle.name: 13 references (Hooks.res:10:29, Hooks.res:29:41, Hooks.res:34:69, Hooks.res:38:43, Hooks.res:42:71, Hooks.res:46:45, Hooks.res:59:2, Hooks.res:59:14, Hooks.res:65:15, Hooks.res:65:27, Hooks.res:73:75, Hooks.res:96:61, Hooks.res:111:41) [0]
  Live Value +ImportIndex.+make: 0 references () [0]
  Live Value +ImportIndex.+makeProps: 1 references (ImportIndex.res:3:0) [0]
  Dead Value +ImportMyBanner.+make: 0 references () [0]

  Warning Unused Argument
  File "./ImportMyBanner.res", line 7, characters 0-317
  optional argument message of function +make is never used
  Live Value +ImportMyBanner.+make: 0 references () [0]
  Dead RecordLabel +ImportMyBanner.message.text: 0 references () [0]
  Live Value +LetPrivate.+y: 0 references () [0]
  Live Value +LetPrivate.local_1.+x: 1 references (LetPrivate.res:5:7) [0]
  Live Value +ModuleAliases.+testInner2: 0 references () [0]
  Live Value +ModuleAliases.+testInner: 0 references () [0]
  Live Value +ModuleAliases.+testNested: 0 references () [0]
  Dead RecordLabel +ModuleAliases.Outer2.Inner2.InnerNested.t.nested: 0 references () [0]
  Dead RecordLabel +ModuleAliases.Outer.Inner.innerT.inner: 0 references () [0]
  Dead Value +ModuleAliases2.+q: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.Outer.Inner.inner.inner: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.Outer.outer.outer: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.record.y: 0 references () [0]
  Dead RecordLabel +ModuleAliases2.record.x: 0 references () [0]
  Live Value +NestedModules.Universe.+someString: 0 references () [0]
  Dead VariantCase +NestedModules.Universe.variant.B: 0 references () [0]
  Dead VariantCase +NestedModules.Universe.variant.A: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.+nested2Function: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.Nested3.+nested3Function: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.Nested3.+nested3Value: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+w: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+z: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+y: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.Nested3.+x: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.+y: 0 references () [0]
  Live Value +NestedModules.Universe.Nested2.+nested2Value: 0 references () [0]
  Dead Value +NestedModules.Universe.Nested2.+x: 0 references () [0]
  Dead Value +NestedModules.Universe.+notExported: 0 references () [0]
  Live Value +NestedModules.Universe.+theAnswer: 0 references () [0]
  Live Value +NestedModules.+notNested: 0 references () [0]
  Live Value NestedModulesInSignature.Universe.+theAnswer: 0 references () [0]
  Dead RecordLabel +Newsyntax.record2.yy: 0 references () [0]
  Dead RecordLabel +Newsyntax.record2.xx: 0 references () [0]
  Dead VariantCase +Newsyntax.variant.C: 0 references () [0]
  Dead VariantCase +Newsyntax.variant.B: 0 references () [0]
  Dead VariantCase +Newsyntax.variant.A: 0 references () [0]
  Dead RecordLabel +Newsyntax.record.yyy: 0 references () [0]
  Dead RecordLabel +Newsyntax.record.xxx: 0 references () [0]
  Dead Value +Newsyntax.+y: 0 references () [0]
  Dead Value +Newsyntax.+x: 0 references () [0]
  Live Value +Newton.+result: 2 references (Newton.res:31:8, Newton.res:31:18) [0]
  Live Value +Newton.+fPrimed: 1 references (Newton.res:29:4) [0]
  Live Value +Newton.+f: 2 references (Newton.res:29:4, Newton.res:31:16) [0]
  Live Value +Newton.+newton: 1 references (Newton.res:29:4) [2]
  Live Value +Newton.+loop: 1 references (Newton.res:6:4) [1]
  Live Value +Newton.+next: 1 references (Newton.res:14:10) [0]
  Live Value +Newton.+previous: 2 references (Newton.res:14:10, Newton.res:16:8) [0]
  Live Value +Newton.+iterateMore: 1 references (Newton.res:14:10) [1]
  Live Value +Newton.+delta: 1 references (Newton.res:8:6) [0]
  Live Value +Newton.+current: 3 references (Newton.res:8:6, Newton.res:14:10, Newton.res:15:8) [0]
  Live Value +Newton.+/: 1 references (Newton.res:16:8) [0]
  Live Value +Newton.+*: 2 references (Newton.res:25:4, Newton.res:27:4) [0]
  Live Value +Newton.++: 1 references (Newton.res:25:4) [0]
  Live Value +Newton.+-: 4 references (Newton.res:9:8, Newton.res:16:8, Newton.res:25:4, Newton.res:27:4) [0]
  Live Value +Opaque.+testConvertNestedRecordFromOtherFile: 0 references () [0]
  Live Value +Opaque.+noConversion: 0 references () [0]
  Dead VariantCase +Opaque.opaqueFromRecords.A: 0 references () [0]
  Live Value +Records.+testMyRecBsAs2: 0 references () [0]
  Live Value +Records.+testMyRecBsAs: 0 references () [0]
  Live RecordLabel +Records.myRecBsAs.type_: 1 references (Records.res:115:41) [0]
  Live Value +Records.+testMyObj2: 0 references () [0]
  Live Value +Records.+testMyObj: 0 references () [0]
  Live Value +Records.+testMyRec2: 0 references () [0]
  Live Value +Records.+testMyRec: 0 references () [0]
  Live RecordLabel +Records.myRec.type_: 1 references (Records.res:102:33) [0]
  Live Value +Records.+computeArea4: 0 references () [0]
  Live Value +Records.+computeArea3: 0 references () [0]
  Live Value +Records.+someBusiness2: 0 references () [0]
  Live Value +Records.+findAddress2: 0 references () [0]
  Live RecordLabel +Records.business2.address2: 1 references (Records.res:79:2) [0]
  Dead RecordLabel +Records.business2.owner: 0 references () [0]
  Dead RecordLabel +Records.business2.name: 0 references () [0]
  Live Value +Records.+getPayloadRecordPlusOne: 0 references () [0]
  Live Value +Records.+payloadValue: 0 references () [0]
  Live Value +Records.+recordValue: 1 references (Records.res:65:7) [0]
  Live Value +Records.+getPayloadRecord: 0 references () [0]
  Dead RecordLabel +Records.record.w: 0 references () [0]
  Live RecordLabel +Records.record.v: 1 references (Records.res:69:5) [0]
  Live Value +Records.+getPayload: 0 references () [0]
  Live RecordLabel +Records.payload.payload: 3 references (Records.res:54:21, Records.res:61:27, Records.res:67:34) [0]
  Dead RecordLabel +Records.payload.num: 0 references () [0]
  Live Value +Records.+findAllAddresses: 0 references () [0]
  Live Value +Records.+someBusiness: 0 references () [0]
  Live Value +Records.+findAddress: 0 references () [0]
  Live Value +Records.+getOpt: 3 references (Records.res:32:7, Records.res:37:7, Records.res:78:7) [0]
  Live RecordLabel +Records.business.address: 2 references (Records.res:33:2, Records.res:41:6) [0]
  Live RecordLabel +Records.business.owner: 1 references (Records.res:42:6) [0]
  Dead RecordLabel +Records.business.name: 0 references () [0]
  Live RecordLabel +Records.person.address: 1 references (Records.res:42:42) [0]
  Dead RecordLabel +Records.person.age: 0 references () [0]
  Dead RecordLabel +Records.person.name: 0 references () [0]
  Live Value +Records.+coord2d: 0 references () [0]
  Live Value +Records.+computeArea: 0 references () [0]
  Live Value +Records.+origin: 0 references () [0]
  Live RecordLabel +Records.coord.z: 1 references (Records.res:11:22) [0]
  Live RecordLabel +Records.coord.y: 1 references (Records.res:11:22) [0]
  Live RecordLabel +Records.coord.x: 1 references (Records.res:11:22) [0]
  Live Value +References.+preserveRefIdentity: 0 references () [0]
  Live Value +References.+destroysRefIdentity: 0 references () [0]
  Dead RecordLabel +References.requiresConversion.x: 0 references () [0]
  Live Value +References.+set: 0 references () [0]
  Live Value +References.+make: 0 references () [0]
  Live Value +References.+get: 0 references () [0]
  Live Value +References.R.+set: 1 references (References.res:30:7) [1]
  Live Value +References.R.+set: 1 references (References.res:15:2) [0]
  Live Value +References.R.+make: 1 references (References.res:28:4) [1]
  Live Value +References.R.+make: 1 references (References.res:14:2) [0]
  Live Value +References.R.+get: 1 references (References.res:25:7) [1]
  Live Value +References.R.+get: 1 references (References.res:13:2) [0]
  Live Value +References.+update: 0 references () [0]
  Live Value +References.+access: 0 references () [0]
  Live Value +References.+create: 0 references () [0]
  Live Value +RepeatedLabel.+userData: 1 references (RepeatedLabel.res:14:7) [0]
  Dead RecordLabel +RepeatedLabel.tabState.f: 0 references () [0]
  Live RecordLabel +RepeatedLabel.tabState.b: 1 references (RepeatedLabel.res:12:16) [0]
  Live RecordLabel +RepeatedLabel.tabState.a: 1 references (RepeatedLabel.res:12:16) [0]
  Dead RecordLabel +RepeatedLabel.userData.b: 0 references () [0]
  Dead RecordLabel +RepeatedLabel.userData.a: 0 references () [0]
  Dead Value +RequireCond.+either: 0 references () [0]
  Dead Value +RequireCond.+either: 0 references () [0]
  Dead Value +RequireCond.+make: 0 references () [0]
  Dead Value +RequireCond.+make: 0 references () [0]
  Dead Value +Shadow.M.+test: 0 references () [0]
  Live Value +Shadow.M.+test: 0 references () [0]
  Live Value +Shadow.+test: 0 references () [0]
  Live Value +Shadow.+test: 0 references () [0]
  Live Value +TestEmitInnerModules.Outer.Medium.Inner.+y: 0 references () [0]
  Live Value +TestEmitInnerModules.Inner.+y: 0 references () [0]
  Live Value +TestEmitInnerModules.Inner.+x: 0 references () [0]
  Live Value +TestFirstClassModules.+convertFirstClassModuleWithTypeEquations: 0 references () [0]
  Live Value +TestFirstClassModules.+convertRecord: 0 references () [0]
  Live Value +TestFirstClassModules.+convertInterface: 0 references () [0]
  Live Value +TestFirstClassModules.+convert: 0 references () [0]
  Dead Value +TestImmutableArray.+testBeltArraySet: 0 references () [0]
  Dead Value +TestImmutableArray.+testBeltArrayGet: 0 references () [0]
  Live Value +TestImmutableArray.+testImmutableArrayGet: 0 references () [0]
  Live Value +TestImport.+defaultValue2: 0 references () [0]
  Dead Value +TestImport.+make: 0 references () [0]

  Warning Unused Argument
  File "./TestImport.res", line 21, characters 0-189
  optional argument message of function +make is never used
  Live Value +TestImport.+make: 0 references () [0]
  Dead RecordLabel +TestImport.message.text: 0 references () [0]
  Live Value +TestImport.+defaultValue: 0 references () [0]
  Live Value +TestImport.+valueStartingWithUpperCaseLetter: 0 references () [0]
  Dead Value +TestImport.+innerStuffContents: 0 references () [0]
  Live Value +TestImport.+innerStuffContentsAsEmptyObject: 0 references () [0]
  Live Value +TestImport.+innerStuffContents: 0 references () [0]
  Live Value +TestModuleAliases.+testInner2Expanded: 0 references () [0]
  Live Value +TestModuleAliases.+testInner2: 0 references () [0]
  Live Value +TestModuleAliases.+testInner1Expanded: 0 references () [0]
  Live Value +TestModuleAliases.+testInner1: 0 references () [0]
  Live Value +TestOptArg.+bar: 1 references (TestOptArg.res:7:7) [0]

  Warning Redundant Optional Argument
  File "./TestOptArg.res", line 3, characters 0-28
  optional argument x of function +foo is always supplied (1 calls)
  Live Value +TestOptArg.+foo: 1 references (TestOptArg.res:5:4) [0]
  Live Value +TestPromise.+convert: 0 references () [0]
  Dead RecordLabel +TestPromise.toPayload.result: 0 references () [0]
  Live RecordLabel +TestPromise.fromPayload.s: 1 references (TestPromise.res:10:35) [0]
  Dead RecordLabel +TestPromise.fromPayload.x: 0 references () [0]
  Live Value +TransitiveType1.+convertAlias: 0 references () [0]
  Live Value +TransitiveType1.+convert: 0 references () [0]
  Dead Value +TransitiveType2.+convertT2: 0 references () [0]
  Live Value +TransitiveType3.+convertT3: 0 references () [0]
  Dead RecordLabel +TransitiveType3.t3.s: 0 references () [0]
  Dead RecordLabel +TransitiveType3.t3.i: 0 references () [0]
  Live Value +Tuples.+changeSecondAge: 0 references () [0]
  Live Value +Tuples.+marry: 0 references () [0]
  Live Value +Tuples.+getFirstName: 0 references () [0]
  Live RecordLabel +Tuples.person.age: 1 references (Tuples.res:38:19) [0]
  Live RecordLabel +Tuples.person.name: 1 references (Tuples.res:32:52) [0]
  Live Value +Tuples.+coord2d: 0 references () [0]
  Live Value +Tuples.+computeAreaNoConverters: 0 references () [0]
  Live Value +Tuples.+computeAreaWithIdent: 0 references () [0]
  Live Value +Tuples.+computeArea: 0 references () [0]
  Live Value +Tuples.+origin: 0 references () [0]
  Live Value +Tuples.+testTuple: 0 references () [0]
  Dead Value +TypeParams1.+exportSomething: 0 references () [0]
  Dead Value +TypeParams2.+exportSomething: 0 references () [0]
  Dead RecordLabel +TypeParams2.item.id: 0 references () [0]
  Live Value +TypeParams3.+test2: 0 references () [0]
  Live Value +TypeParams3.+test: 0 references () [0]
  Dead Value +Types.ObjectId.+x: 0 references () [0]
  Live Value +Types.+optFunction: 0 references () [0]
  Dead Value +Types.+i64Const: 0 references () [0]
  Live Value +Types.+currentTime: 0 references () [0]
  Live Value +Types.+testInstantiateTypeParameter: 0 references () [0]
  Dead RecordLabel +Types.someRecord.id: 0 references () [0]
  Live Value +Types.+setMatch: 0 references () [0]
  Dead Value +Types.+testMarshalFields: 0 references () [0]
  Live Value +Types.+testConvertNull: 0 references () [0]
  Dead RecordLabel +Types.record.s: 0 references () [0]
  Dead RecordLabel +Types.record.i: 0 references () [0]
  Live Value +Types.+jsonStringify: 0 references () [0]
  Dead Value +Types.+jsString2T: 0 references () [0]
  Dead Value +Types.+jsStringT: 0 references () [0]
  Dead Value +Types.+stringT: 0 references () [0]
  Dead VariantCase +Types.opaqueVariant.B: 0 references () [0]
  Dead VariantCase +Types.opaqueVariant.A: 0 references () [0]
  Live Value +Types.+testFunctionOnOptionsAsArgument: 0 references () [0]
  Live Value +Types.+mutuallyRecursiveConverter: 0 references () [0]
  Live Value +Types.+selfRecursiveConverter: 0 references () [0]
  Dead RecordLabel +Types.mutuallyRecursiveB.a: 0 references () [0]
  Live RecordLabel +Types.mutuallyRecursiveA.b: 1 references (Types.res:39:37) [0]
  Live RecordLabel +Types.selfRecursive.self: 1 references (Types.res:33:33) [0]
  Live Value +Types.+swap: 0 references () [0]
  Dead VariantCase +Types.typeWithVars.B: 0 references () [0]
  Dead VariantCase +Types.typeWithVars.A: 0 references () [0]
  Live Value +Types.+map: 0 references () [0]
  Live Value +Types.+someIntList: 0 references () [0]
  Live Value +Unboxed.+r2Test: 0 references () [0]
  Dead VariantCase +Unboxed.r2.B: 0 references () [0]
  Dead RecordLabel +Unboxed.r1.x: 0 references () [0]
  Live Value +Unboxed.+testV1: 0 references () [0]
  Dead VariantCase +Unboxed.v2.A: 0 references () [0]
  Dead VariantCase +Unboxed.v1.A: 0 references () [0]
  Live Value +Uncurried.+sumLblCurried: 0 references () [0]
  Live Value +Uncurried.+sumCurried: 0 references () [0]
  Live Value +Uncurried.+sumU2: 0 references () [0]
  Live Value +Uncurried.+sumU: 0 references () [0]
  Live Value +Uncurried.+callback2U: 0 references () [0]
  Live Value +Uncurried.+callback2: 0 references () [0]
  Live RecordLabel +Uncurried.authU.loginU: 1 references (Uncurried.res:26:28) [0]
  Live RecordLabel +Uncurried.auth.login: 1 references (Uncurried.res:24:27) [0]
  Live Value +Uncurried.+callback: 0 references () [0]
  Live Value +Uncurried.+curried3: 0 references () [0]
  Live Value +Uncurried.+uncurried3: 0 references () [0]
  Live Value +Uncurried.+uncurried2: 0 references () [0]
  Live Value +Uncurried.+uncurried1: 0 references () [0]
  Live Value +Uncurried.+uncurried0: 0 references () [0]
  Live Value +Unison.+toString: 3 references (Unison.res:37:0, Unison.res:38:0, Unison.res:39:0) [0]
  Live Value +Unison.+fits: 1 references (Unison.res:26:8) [0]

  Warning Redundant Optional Argument
  File "./Unison.res", line 17, characters 0-60
  optional argument break of function +group is always supplied (2 calls)
  Live Value +Unison.+group: 2 references (Unison.res:38:25, Unison.res:39:25) [0]
  Live VariantCase +Unison.stack.Cons: 2 references (Unison.res:38:20, Unison.res:39:20) [0]
  Live VariantCase +Unison.stack.Empty: 3 references (Unison.res:37:20, Unison.res:38:53, Unison.res:39:52) [0]
  Live RecordLabel +Unison.t.doc: 2 references (Unison.res:23:9, Unison.res:28:9) [0]
  Live RecordLabel +Unison.t.break: 1 references (Unison.res:28:9) [0]
  Live VariantCase +Unison.break.Always: 1 references (Unison.res:39:38) [0]
  Live VariantCase +Unison.break.Never: 1 references (Unison.res:38:38) [0]
  Live VariantCase +Unison.break.IfNeed: 1 references (Unison.res:17:20) [0]
  Live Value +UseImportJsValue.+useTypeImportedInOtherModule: 0 references () [0]
  Live Value +UseImportJsValue.+useGetProp: 0 references () [0]
  Live Value +Variants.+restResult3: 0 references () [0]
  Live Value +Variants.+restResult2: 0 references () [0]
  Live Value +Variants.+restResult1: 0 references () [0]
  Dead VariantCase +Variants.result1.Error: 0 references () [0]
  Dead VariantCase +Variants.result1.Ok: 0 references () [0]
  Live Value +Variants.+polyWithOpt: 0 references () [0]
  Dead VariantCase +Variants.type_.Type: 0 references () [0]
  Live Value +Variants.+id2: 0 references () [0]
  Live Value +Variants.+id1: 0 references () [0]
  Live Value +Variants.+testConvert2to3: 0 references () [0]
  Live Value +Variants.+testConvert3: 0 references () [0]
  Live Value +Variants.+testConvert2: 0 references () [0]
  Live Value +Variants.+fortytwoBAD: 0 references () [0]
  Dead Value +Variants.+fortytwoOK: 0 references () [0]
  Live Value +Variants.+testConvert: 0 references () [0]
  Live Value +Variants.+swap: 0 references () [0]
  Live Value +Variants.+onlySunday: 0 references () [0]
  Live Value +Variants.+sunday: 0 references () [0]
  Live Value +Variants.+saturday: 0 references () [0]
  Live Value +Variants.+monday: 0 references () [0]
  Live Value +Variants.+isWeekend: 0 references () [0]
  Live Value +VariantsWithPayload.+testVariant1Object: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variant1Object.R: 0 references () [0]
  Live Value +VariantsWithPayload.+testVariant1Int: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variant1Int.R: 0 references () [0]
  Live Value +VariantsWithPayload.+printVariantWithPayloads: 0 references () [0]
  Live Value +VariantsWithPayload.+testVariantWithPayloads: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.E: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.D: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.C: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.B: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.variantWithPayloads.A: 0 references () [0]
  Live Value +VariantsWithPayload.+testSimpleVariant: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.simpleVariant.C: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.simpleVariant.B: 0 references () [0]
  Dead VariantCase +VariantsWithPayload.simpleVariant.A: 0 references () [0]
  Live Value +VariantsWithPayload.+printManyPayloads: 0 references () [0]
  Live Value +VariantsWithPayload.+testManyPayloads: 0 references () [0]
  Live Value +VariantsWithPayload.+printVariantWithPayload: 0 references () [0]
  Live Value +VariantsWithPayload.+testWithPayload: 0 references () [0]
  Live RecordLabel +VariantsWithPayload.payload.y: 2 references (VariantsWithPayload.res:28:74, VariantsWithPayload.res:43:72) [0]
  Live RecordLabel +VariantsWithPayload.payload.x: 2 references (VariantsWithPayload.res:28:57, VariantsWithPayload.res:43:55) [0]
  Dead Value +BootloaderResource.+read: 0 references () [0]
  Live Value +BootloaderResource.+read: 1 references (DeadTest.res:107:40) [0]
  Live Value +DeadExn.+eInside: 1 references (DeadExn.res:12:7) [0]
  Dead Value +DeadExn.+eToplevel: 0 references () [0]
  Dead Exception +DeadExn.DeadE: 0 references () [0]
  Live Exception +DeadExn.Inside.Einside: 1 references (DeadExn.res:10:14) [0]
  Live Exception +DeadExn.Etoplevel: 1 references (DeadExn.res:8:16) [0]
  Dead Value +DeadTypeTest.+_: 0 references () [0]
  Dead Value +DeadTypeTest.+_: 0 references () [0]
  Dead VariantCase +DeadTypeTest.deadType.InNeither: 0 references () [0]
  Live VariantCase +DeadTypeTest.deadType.OnlyInInterface: 1 references (DeadTypeTest.resi:8:2) [0]
  Dead Value +DeadTypeTest.+a: 0 references () [0]
  Dead VariantCase +DeadTypeTest.t.B: 0 references () [0]
  Dead Value DeadValueTest.+valueDead: 0 references () [0]
  Live Value DeadValueTest.+valueAlive: 1 references (DeadTest.res:72:16) [0]
  Live Value +DynamicallyLoadedComponent.+make: 3 references (DeadTest.res:107:40, DeadTest.res:146:17, ExportWithRename.res:2:4) [0]
  Dead Value ErrorHandler.+x: 0 references () [0]
  Live Value ErrorHandler.Make.+notify: 1 references (CreateErrorHandler1.res:8:0) [0]
  Dead Value +FirstClassModulesInterface.+r: 0 references () [0]
  Dead RecordLabel +FirstClassModulesInterface.record.y: 0 references () [0]
  Dead RecordLabel +FirstClassModulesInterface.record.x: 0 references () [0]
  Dead Value ImmutableArray.+eq: 0 references () [0]
  Dead Value ImmutableArray.+eqU: 0 references () [0]
  Dead Value ImmutableArray.+cmp: 0 references () [0]
  Dead Value ImmutableArray.+cmpU: 0 references () [0]
  Dead Value ImmutableArray.+some2: 0 references () [0]
  Dead Value ImmutableArray.+some2U: 0 references () [0]
  Dead Value ImmutableArray.+every2: 0 references () [0]
  Dead Value ImmutableArray.+every2U: 0 references () [0]
  Dead Value ImmutableArray.+every: 0 references () [0]
  Dead Value ImmutableArray.+everyU: 0 references () [0]
  Dead Value ImmutableArray.+some: 0 references () [0]
  Dead Value ImmutableArray.+someU: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverse2: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverse2U: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverse: 0 references () [0]
  Dead Value ImmutableArray.+reduceReverseU: 0 references () [0]
  Dead Value ImmutableArray.+reduce: 0 references () [0]
  Dead Value ImmutableArray.+reduceU: 0 references () [0]
  Dead Value ImmutableArray.+partition: 0 references () [0]
  Dead Value ImmutableArray.+partitionU: 0 references () [0]
  Dead Value ImmutableArray.+mapWithIndex: 0 references () [0]
  Dead Value ImmutableArray.+mapWithIndexU: 0 references () [0]
  Dead Value ImmutableArray.+forEachWithIndex: 0 references () [0]
  Dead Value ImmutableArray.+forEachWithIndexU: 0 references () [0]
  Dead Value ImmutableArray.+keepMap: 0 references () [0]
  Dead Value ImmutableArray.+keepMapU: 0 references () [0]
  Dead Value ImmutableArray.+keepWithIndex: 0 references () [0]
  Dead Value ImmutableArray.+keepWithIndexU: 0 references () [0]
  Dead Value ImmutableArray.+map: 0 references () [0]
  Dead Value ImmutableArray.+mapU: 0 references () [0]
  Dead Value ImmutableArray.+forEach: 0 references () [0]
  Dead Value ImmutableArray.+forEachU: 0 references () [0]
  Dead Value ImmutableArray.+copy: 0 references () [0]
  Dead Value ImmutableArray.+sliceToEnd: 0 references () [0]
  Dead Value ImmutableArray.+slice: 0 references () [0]
  Dead Value ImmutableArray.+concatMany: 0 references () [0]
  Dead Value ImmutableArray.+concat: 0 references () [0]
  Dead Value ImmutableArray.+unzip: 0 references () [0]
  Dead Value ImmutableArray.+zipBy: 0 references () [0]
  Dead Value ImmutableArray.+zipByU: 0 references () [0]
  Dead Value ImmutableArray.+zip: 0 references () [0]
  Dead Value ImmutableArray.+makeByAndShuffle: 0 references () [0]
  Dead Value ImmutableArray.+makeByAndShuffleU: 0 references () [0]
  Dead Value ImmutableArray.+makeBy: 0 references () [0]
  Dead Value ImmutableArray.+makeByU: 0 references () [0]
  Dead Value ImmutableArray.+rangeBy: 0 references () [0]
  Dead Value ImmutableArray.+range: 0 references () [0]
  Dead Value ImmutableArray.+make: 0 references () [0]
  Dead Value ImmutableArray.+makeUninitializedUnsafe: 0 references () [0]
  Dead Value ImmutableArray.+makeUninitialized: 0 references () [0]
  Dead Value ImmutableArray.+reverse: 0 references () [0]
  Dead Value ImmutableArray.+shuffle: 0 references () [0]
  Dead Value ImmutableArray.+getUndefined: 0 references () [0]
  Dead Value ImmutableArray.+getUnsafe: 0 references () [0]
  Dead Value ImmutableArray.+getExn: 0 references () [0]
  Dead Value ImmutableArray.+get: 0 references () [0]
  Dead Value ImmutableArray.+size: 0 references () [0]
  Dead Value ImmutableArray.+length: 0 references () [0]
  Dead Value ImmutableArray.+toArray: 0 references () [0]
  Live Value ImmutableArray.+fromArray: 1 references (DeadTest.res:1:15) [0]
  Live Value ImmutableArray.Array.+get: 1 references (TestImmutableArray.res:1:7) [0]
  Live Value +ImportHookDefault.+make2: 0 references () [0]
  Live Value +ImportHookDefault.+make2Props: 1 references (ImportHookDefault.res:14:0) [0]
  Live Value +ImportHookDefault.+make: 1 references (Hooks.res:17:5) [0]
  Live Value +ImportHookDefault.+makeProps: 2 references (Hooks.res:17:5, ImportHookDefault.res:7:0) [0]
  Dead RecordLabel +ImportHookDefault.person.age: 0 references () [0]
  Dead RecordLabel +ImportHookDefault.person.name: 0 references () [0]
  Live Value +ImportHooks.+foo: 0 references () [0]
  Live Value +ImportHooks.+make: 1 references (Hooks.res:14:5) [0]
  Live Value +ImportHooks.+makeProps: 2 references (Hooks.res:14:5, ImportHooks.res:9:0) [0]
  Dead RecordLabel +ImportHooks.person.age: 0 references () [0]
  Dead RecordLabel +ImportHooks.person.name: 0 references () [0]
  Live Value +ImportJsValue.+default: 0 references () [0]
  Live Value +ImportJsValue.+polymorphic: 0 references () [0]
  Live Value +ImportJsValue.+convertVariant: 0 references () [0]
  Dead VariantCase +ImportJsValue.variant.S: 0 references () [0]
  Dead VariantCase +ImportJsValue.variant.I: 0 references () [0]
  Live Value +ImportJsValue.+returnedFromHigherOrder: 0 references () [0]
  Live Value +ImportJsValue.+higherOrder: 1 references (ImportJsValue.res:55:7) [0]
  Live Value +ImportJsValue.+useColor: 0 references () [0]
  Live Value +ImportJsValue.+useGetAbs: 0 references () [0]
  Live Value +ImportJsValue.+useGetProp: 0 references () [0]
  Live Value +ImportJsValue.AbsoluteValue.+getAbs: 1 references (ImportJsValue.res:44:7) [1]
  Live Value +ImportJsValue.AbsoluteValue.+getAbs: 1 references (ImportJsValue.res:36:6) [0]
  Dead Value +ImportJsValue.AbsoluteValue.+getProp: 0 references () [0]
  Live Value +ImportJsValue.AbsoluteValue.+getProp: 2 references (ImportJsValue.res:42:7, UseImportJsValue.res:1:7) [0]
  Live Value +ImportJsValue.+areaValue: 0 references () [0]
  Live Value +ImportJsValue.+roundedNumber: 0 references () [0]
  Live Value +ImportJsValue.+returnMixedArray: 0 references () [0]
  Live Value +ImportJsValue.+area: 1 references (ImportJsValue.res:26:7) [0]
  Dead RecordLabel +ImportJsValue.point.y: 0 references () [0]
  Dead RecordLabel +ImportJsValue.point.x: 0 references () [0]
  Live Value +ImportJsValue.+round: 1 references (ImportJsValue.res:24:7) [0]
  Dead Value +JSResource.+jSResource: 0 references () [0]
  Live Value +JSResource.+jSResource: 2 references (DeadTest.res:107:40, DeadTest.res:114:6) [0]
  Live Value +NestedModulesInSignature.Universe.+theAnswer: 1 references (NestedModulesInSignature.resi:2:2) [0]

  Warning Unused Argument
  File "./OptArg.resi", line 2, characters 0-50
  optional argument x of function +bar is never used
  Live Value OptArg.+bar: 1 references (TestOptArg.res:1:7) [0]
  Dead Value OptArg.+foo: 0 references () [0]
  Live Value trace.+infok: 1 references (DeadTest.res:164:0) [0]
  Live RecordLabel trace.pf.pf: 1 references (DeadTest.res:164:21) [0]
  Dead Value +DeadValueTest.+tail: 0 references () [0]
  Dead Value +DeadValueTest.+subList: 0 references () [0]
  Dead Value +DeadValueTest.+valueOnlyInImplementation: 0 references () [0]
  Dead Value +DeadValueTest.+valueDead: 0 references () [0]
  Live Value +DeadValueTest.+valueAlive: 1 references (DeadValueTest.resi:1:0) [0]
  Dead Value +ErrorHandler.+x: 0 references () [0]
  Live Value +ErrorHandler.Make.+notify: 1 references (ErrorHandler.resi:7:2) [0]
  Dead Value +ImmutableArray.+eq: 0 references () [0]
  Dead Value +ImmutableArray.+eqU: 0 references () [0]
  Dead Value +ImmutableArray.+cmp: 0 references () [0]
  Dead Value +ImmutableArray.+cmpU: 0 references () [0]
  Dead Value +ImmutableArray.+some2: 0 references () [0]
  Dead Value +ImmutableArray.+some2U: 0 references () [0]
  Dead Value +ImmutableArray.+every2: 0 references () [0]
  Dead Value +ImmutableArray.+every2U: 0 references () [0]
  Dead Value +ImmutableArray.+every: 0 references () [0]
  Dead Value +ImmutableArray.+everyU: 0 references () [0]
  Dead Value +ImmutableArray.+some: 0 references () [0]
  Dead Value +ImmutableArray.+someU: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverse2: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverse2U: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverse: 0 references () [0]
  Dead Value +ImmutableArray.+reduceReverseU: 0 references () [0]
  Dead Value +ImmutableArray.+reduce: 0 references () [0]
  Dead Value +ImmutableArray.+reduceU: 0 references () [0]
  Dead Value +ImmutableArray.+partition: 0 references () [0]
  Dead Value +ImmutableArray.+partitionU: 0 references () [0]
  Dead Value +ImmutableArray.+mapWithIndex: 0 references () [0]
  Dead Value +ImmutableArray.+mapWithIndexU: 0 references () [0]
  Dead Value +ImmutableArray.+forEachWithIndex: 0 references () [0]
  Dead Value +ImmutableArray.+forEachWithIndexU: 0 references () [0]
  Dead Value +ImmutableArray.+keepMap: 0 references () [0]
  Dead Value +ImmutableArray.+keepMapU: 0 references () [0]
  Dead Value +ImmutableArray.+keepWithIndex: 0 references () [0]
  Dead Value +ImmutableArray.+keepWithIndexU: 0 references () [0]
  Dead Value +ImmutableArray.+map: 0 references () [0]
  Dead Value +ImmutableArray.+mapU: 0 references () [0]
  Dead Value +ImmutableArray.+forEach: 0 references () [0]
  Dead Value +ImmutableArray.+forEachU: 0 references () [0]
  Dead Value +ImmutableArray.+copy: 0 references () [0]
  Dead Value +ImmutableArray.+sliceToEnd: 0 references () [0]
  Dead Value +ImmutableArray.+slice: 0 references () [0]
  Dead Value +ImmutableArray.+concatMany: 0 references () [0]
  Dead Value +ImmutableArray.+concat: 0 references () [0]
  Dead Value +ImmutableArray.+unzip: 0 references () [0]
  Dead Value +ImmutableArray.+zipBy: 0 references () [0]
  Dead Value +ImmutableArray.+zipByU: 0 references () [0]
  Dead Value +ImmutableArray.+zip: 0 references () [0]
  Dead Value +ImmutableArray.+makeByAndShuffle: 0 references () [0]
  Dead Value +ImmutableArray.+makeByAndShuffleU: 0 references () [0]
  Dead Value +ImmutableArray.+makeBy: 0 references () [0]
  Dead Value +ImmutableArray.+makeByU: 0 references () [0]
  Dead Value +ImmutableArray.+rangeBy: 0 references () [0]
  Dead Value +ImmutableArray.+range: 0 references () [0]
  Dead Value +ImmutableArray.+make: 0 references () [0]
  Dead Value +ImmutableArray.+makeUninitializedUnsafe: 0 references () [0]
  Dead Value +ImmutableArray.+makeUninitialized: 0 references () [0]
  Dead Value +ImmutableArray.+reverse: 0 references () [0]
  Dead Value +ImmutableArray.+shuffle: 0 references () [0]
  Dead Value +ImmutableArray.+getUndefined: 0 references () [0]
  Dead Value +ImmutableArray.+getUnsafe: 0 references () [0]
  Dead Value +ImmutableArray.+getExn: 0 references () [0]
  Live Value +ImmutableArray.+get: 1 references (ImmutableArray.resi:6:2) [0]
  Dead Value +ImmutableArray.+size: 0 references () [0]
  Dead Value +ImmutableArray.+length: 0 references () [0]
  Dead Value +ImmutableArray.+toArray: 0 references () [0]
  Live Value +ImmutableArray.+fromArray: 1 references (ImmutableArray.resi:9:0) [0]
  Dead Value +ImmutableArray.+toT2: 0 references () [0]
  Dead Value +ImmutableArray.+toTp: 0 references () [0]
  Live Value +ImmutableArray.+toT: 1 references (ImmutableArray.res:14:6) [0]
  Dead Value +ImmutableArray.+fromTT: 0 references () [0]
  Dead Value +ImmutableArray.+fromTp: 0 references () [0]
  Live Value +ImmutableArray.+fromT: 1 references (ImmutableArray.res:24:6) [0]

  Warning Redundant Optional Argument
  File "./OptArg.res", line 26, characters 0-70
  optional argument c of function +wrapfourArgs is always supplied (2 calls)
  Live Value +OptArg.+wrapfourArgs: 2 references (OptArg.res:28:7, OptArg.res:29:7) [0]

  Warning Unused Argument
  File "./OptArg.res", line 24, characters 0-63
  optional argument d of function +fourArgs is never used
  Live Value +OptArg.+fourArgs: 1 references (OptArg.res:26:4) [0]

  Warning Redundant Optional Argument
  File "./OptArg.res", line 20, characters 0-51
  optional argument a of function +wrapOneArg is always supplied (1 calls)
  Live Value +OptArg.+wrapOneArg: 1 references (OptArg.res:22:7) [0]
  Live Value +OptArg.+oneArg: 1 references (OptArg.res:20:4) [0]

  Warning Unused Argument
  File "./OptArg.res", line 14, characters 0-42
  optional argument a of function +twoArgs is never used

  Warning Unused Argument
  File "./OptArg.res", line 14, characters 0-42
  optional argument b of function +twoArgs is never used
  Live Value +OptArg.+twoArgs: 1 references (OptArg.res:16:12) [0]

  Warning Unused Argument
  File "./OptArg.res", line 9, characters 0-54
  optional argument b of function +threeArgs is never used

  Warning Redundant Optional Argument
  File "./OptArg.res", line 9, characters 0-54
  optional argument a of function +threeArgs is always supplied (2 calls)
  Live Value +OptArg.+threeArgs: 2 references (OptArg.res:11:7, OptArg.res:12:7) [0]

  Warning Unused Argument
  File "./OptArg.res", line 3, characters 0-38
  optional argument x of function +bar is never used
  Live Value +OptArg.+bar: 2 references (OptArg.res:7:7, OptArg.resi:2:0) [0]

  Warning Unused Argument
  File "./OptArg.res", line 1, characters 0-48
  optional argument y of function +foo is never used

  Warning Unused Argument
  File "./OptArg.res", line 1, characters 0-48
  optional argument z of function +foo is never used
  Live Value +OptArg.+foo: 1 references (OptArg.res:5:7) [0]
  Live Value +trace.+infok: 1 references (trace.mli:5:0) [0]
  Dead RecordLabel +trace.pf.pf: 0 references () [0]

  Warning Dead Module
  File "./AutoAnnotate.res", line 0, characters 0-0
  +AutoAnnotate is a dead module as all its items are dead.

  Warning Dead Type
  File "./AutoAnnotate.res", line 1, characters 15-21
  variant.R is a variant case which is never constructed
  <-- line 1
  type variant = | @dead("variant.R") R(int)

  Warning Dead Type
  File "./AutoAnnotate.res", line 3, characters 22-38
  record.variant is a record label never used to read a value
  <-- line 3
  export type record = {@dead("record.variant") variant: variant}

  Warning Dead Type
  File "./AutoAnnotate.res", line 5, characters 11-18
  r2.r2 is a record label never used to read a value
  <-- line 5
  type r2 = {@dead("r2.r2") r2: int}

  Warning Dead Type
  File "./AutoAnnotate.res", line 7, characters 11-18
  r3.r3 is a record label never used to read a value
  <-- line 7
  type r3 = {@dead("r3.r3") r3: int}

  Warning Dead Type
  File "./AutoAnnotate.res", line 9, characters 11-18
  r4.r4 is a record label never used to read a value
  <-- line 9
  type r4 = {@dead("r4.r4") r4: int}

  Warning Dead Type
  File "./AutoAnnotate.res", line 12, characters 2-14
  annotatedVariant.R2 is a variant case which is never constructed
  <-- line 12
    | @dead("annotatedVariant.R2") R2(r2, r3)

  Warning Dead Type
  File "./AutoAnnotate.res", line 13, characters 2-10
  annotatedVariant.R4 is a variant case which is never constructed
  <-- line 13
    | @dead("annotatedVariant.R4") R4(r4)

  Warning Dead Value
  File "./BootloaderResource.res", line 3, characters 33-79
  +read is never used
  <-- line 3
  @bs.module("BootloaderResource") @dead("+read") external read: JSResource.t<'a> => 'a = "read"

  Warning Dead Module
  File "./BucklescriptAnnotations.res", line 0, characters 0-0
  +BucklescriptAnnotations is a dead module as all its items are dead.

  Warning Dead Value
  File "./BucklescriptAnnotations.res", line 21, characters 0-55
  +foo is never used
  <-- line 21
  @dead("+foo") let foo = (x: someMethods) => x["threeargs"](3, "a", 4)

  Warning Dead Value
  File "./BucklescriptAnnotations.res", line 23, characters 0-70
  +bar is never used
  <-- line 23
  @dead("+bar") let bar = (x: someMethods) => {

  Warning Dead Exception
  File "./DeadExn.res", line 7, characters 0-15
  DeadE is never raised or passed as value
  <-- line 7
  @dead("DeadE") exception DeadE

  Warning Dead Value
  File "./DeadExn.res", line 8, characters 0-25
  +eToplevel is never used
  <-- line 8
  @dead("+eToplevel") let eToplevel = Etoplevel

  Warning Dead Module
  File "./DeadMl.ml", line 1, characters 0-120
  +DeadMl.QQ is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 3, characters 4-93
  QQ.+thisSpansSeveralLines is never used
  <-- line 3
            x + y : int -> int -> int) [@@dead "QQ.+thisSpansSeveralLines"] 

  Warning Dead Module
  File "./DeadMl.ml", line 8, characters 0-103
  +DeadMl.AA is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 9, characters 2-40
  AA.+thisIsInInterface is never used
  <-- line 9
      int -> int [@@dead "AA.+thisIsInInterface"] 

  Warning Dead Value
  File "./DeadMl.ml", line 12, characters 2-29
  AA.+thisIsInInterface is never used
  <-- line 12
    let thisIsInInterface x = x [@@dead "AA.+thisIsInInterface"] 

  Warning Dead Value
  File "./DeadMl.ml", line 15, characters 0-25
  +thisHasSemicolons is never used
  <-- line 15
  let thisHasSemicolons = 3 [@@dead "+thisHasSemicolons"] ;;

  Warning Dead Type
  File "./DeadMl.ml", line 17, characters 18-25
  thisIsDead.DeadA is a variant case which is never constructed
  <-- line 17
  type thisIsDead = | DeadA [@dead "thisIsDead.DeadA"]  | DeadB

  Warning Dead Type
  File "./DeadMl.ml", line 17, characters 26-33
  thisIsDead.DeadB is a variant case which is never constructed
  <-- line 17
  type thisIsDead = | DeadA [@dead "thisIsDead.DeadA"]  | DeadB [@dead "thisIsDead.DeadB"] 

  Warning Dead Module
  File "./DeadMl.ml", line 25, characters 0-256
  +DeadMl.Bs_version is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadMl.ml", line 26, characters 6-26
  Bs_version.+version is never used
  <-- line 26
    sig val version : string [@@dead "Bs_version.+version"]  val header : string val package_name : string end 

  Warning Dead Value
  File "./DeadMl.ml", line 26, characters 27-46
  Bs_version.+header is never used
  <-- line 26
    sig val version : string [@@dead "Bs_version.+version"]  val header : string [@@dead "Bs_version.+header"]  val package_name : string end 

  Warning Dead Value
  File "./DeadMl.ml", line 26, characters 47-72
  Bs_version.+package_name is never used
  <-- line 26
    sig val version : string [@@dead "Bs_version.+version"]  val header : string [@@dead "Bs_version.+header"]  val package_name : string [@@dead "Bs_version.+package_name"]  end 

  Warning Dead Value
  File "./DeadMl.ml", line 29, characters 4-31
  Bs_version.+version is never used
  <-- line 29
      let version = "7.2.0-dev.4" [@@dead "Bs_version.+version"] 

  Warning Dead Value
  File "./DeadMl.ml", line 30, characters 4-70
  Bs_version.+header is never used
  <-- line 30
      let header = "// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE" [@@dead "Bs_version.+header"] 

  Warning Dead Value
  File "./DeadMl.ml", line 31, characters 4-36
  Bs_version.+package_name is never used
  <-- line 31
      let package_name = "bs-platform" [@@dead "Bs_version.+package_name"] 

  Warning Dead Type
  File "./DeadMl.ml", line 35, characters 2-137
  l.Lfunction is a variant case which is never constructed
  <-- line 35
                         } [@dead "l.Lfunction"] 

  Warning Dead Type
  File "./DeadMl.ml", line 41, characters 2-22
  module_info.module_name is a record label never used to read a value
  <-- line 41
    module_name: string; [@dead "module_info.module_name"] 

  Warning Dead Type
  File "./DeadMl.ml", line 42, characters 2-12
  module_info.case is a record label never used to read a value
  <-- line 42
    case: bool [@dead "module_info.case"] 

  Warning Dead Value
  File "./DeadMl.ml", line 45, characters 0-305
  +map_split_opt is never used
  <-- line 45
      (match d with Some d -> d::ds | None -> ds) [@@dead "+map_split_opt"] 

  Warning Dead Value
  File "./DeadMl.ml", line 56, characters 0-40
  +inline_threshold is never used
  <-- line 56
  let inline_threshold = Some (10. /. 8.); [@@dead "+inline_threshold"] 

  Warning Dead Value
  File "./DeadMl.ml", line 59, characters 2-15
  Scope.+dead1 is never used
  <-- line 59
    let dead1 = 1 [@@dead "Scope.+dead1"] 

  Warning Dead Value
  File "./DeadMl.ml", line 62, characters 4-22
  Scope.Inner1.+deadInner1 is never used
  <-- line 62
      let deadInner1 = 0 [@@dead "Scope.Inner1.+deadInner1"] 

  Warning Dead Value
  File "./DeadMl.ml", line 69, characters 2-15
  Scope.+dead2 is never used
  <-- line 69
    let dead2 = 2 [@@dead "Scope.+dead2"] 

  Warning Dead Value
  File "./DeadMl.ml", line 80, characters 0-13
  +dead4 is never used
  <-- line 80
  let dead4 = 4 [@@dead "+dead4"] 

  Warning Dead Value
  File "./DeadMl.ml", line 85, characters 0-13
  +dead5 is never used
  <-- line 85
  let dead5 = 5 [@@dead "+dead5"] 

  Warning Dead Value
  File "./DeadMl.ml", line 90, characters 0-37
  +dead7 is never used
  <-- line 90
  [@@ocaml.warning "-30"] [@@dead "+dead7"] 

  Warning Dead Value
  File "./DeadMl.ml", line 94, characters 2-16
  WithSignature.+dead8 is never used
  <-- line 94
    val dead8: int [@@dead "WithSignature.+dead8"] 

  Warning Dead Value
  File "./DeadMl.ml", line 99, characters 2-17
  WithSignature.+dead10 is never used
  <-- line 99
    val dead10: int [@@dead "WithSignature.+dead10"] 

  Warning Dead Value
  File "./DeadMl.ml", line 106, characters 2-15
  WithSignature.+dead8 is never used
  <-- line 106
    let dead8 = 8 [@@dead "WithSignature.+dead8"] 

  Warning Dead Value
  File "./DeadMl.ml", line 108, characters 2-17
  WithSignature.+dead10 is never used
  <-- line 108
    let dead10 = 10 [@@dead "WithSignature.+dead10"] 

  Warning Dead Value
  File "./DeadRT.res", line 5, characters 0-116
  +emitModuleAccessPath is never used
  <-- line 5
  @dead("+emitModuleAccessPath") let rec emitModuleAccessPath = moduleAccessPath =>

  Warning Dead Value
  File "./DeadTest.res", line 2, characters 0-17
  +fortytwo is never used
  <-- line 2
  @dead("+fortytwo") let fortytwo = 42

  Warning Dead Module
  File "./DeadTest.res", line 26, characters 7-97
  +DeadTest.M is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.res", line 30, characters 2-34
  M.+thisSignatureItemIsDead is never used
  <-- line 30
    @dead("M.+thisSignatureItemIsDead") let thisSignatureItemIsDead = 34

  Warning Dead Value
  File "./DeadTest.res", line 60, characters 2-12
  MM.+y is never used
  <-- line 60
    @dead("MM.+y") let y: int

  Warning Dead Value
  File "./DeadTest.res", line 64, characters 2-35
  MM.+valueOnlyInImplementation is never used
  <-- line 64
    @dead("MM.+valueOnlyInImplementation") let valueOnlyInImplementation = 7

  Warning Dead Value
  File "./DeadTest.res", line 74, characters 0-37
  +unusedRec is never used
  <-- line 74
  @dead("+unusedRec") let rec unusedRec = () => unusedRec()

  Warning Dead Value
  File "./DeadTest.res", line 76, characters 0-60
  +split_map is never used
  <-- line 76
  @dead("+split_map") let rec split_map = l => {

  Warning Dead Value
  File "./DeadTest.res", line 81, characters 0-27
  +rec1 is never used
  <-- line 81
  @dead("+rec1") let rec rec1 = () => rec2()

  Warning Dead Value
  File "./DeadTest.res", line 82, characters 0-23
  +rec2 is never used
  <-- line 82
  @dead("+rec2") and rec2 = () => rec1()

  Warning Dead Value
  File "./DeadTest.res", line 84, characters 0-77
  +recWithCallback is never used
  <-- line 84
  @dead("+recWithCallback") let rec recWithCallback = () => {

  Warning Dead Value
  File "./DeadTest.res", line 89, characters 0-53
  +foo is never used
  <-- line 89
  @dead("+foo") let rec foo = () => {

  Warning Dead Value
  File "./DeadTest.res", line 93, characters 0-21
  +bar is never used
  <-- line 93
  @dead("+bar") and bar = () => foo()

  Warning Dead Value
  File "./DeadTest.res", line 95, characters 0-71
  +withDefaultValue is never used
  <-- line 95
  @dead("+withDefaultValue") let withDefaultValue = (~paramWithDefault=3, y) => paramWithDefault + y

  Warning Dead Value
  File "./DeadTest.res", line 97, characters 0-74
  +unsafe_string1 is never used
  <-- line 97
  @dead("+unsafe_string1") external unsafe_string1: (bytes, int, int) => Digest.t = "caml_md5_string"

  Warning Dead Module
  File "./DeadTest.res", line 99, characters 7-182
  +DeadTest.Ext_buffer is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.res", line 100, characters 2-76
  Ext_buffer.+unsafe_string2 is never used
  <-- line 100
    @dead("Ext_buffer.+unsafe_string2") external unsafe_string2: (bytes, int, int) => Digest.t = "caml_md5_string"

<<<<<<< HEAD
=======
  Warning Dead Value
  File "./DeadTest.res", line 102, characters 2-76
  Ext_buffer.+unsafe_string2 is never used
  <-- line 102
    @dead("Ext_buffer.+unsafe_string2") external unsafe_string2: (bytes, int, int) => Digest.t = "caml_md5_string"

>>>>>>> Check differences in DCE analysis after conversion.
  Warning Dead Module
  File "./DeadTest.res", line 111, characters 7-413
  +DeadTest.LazyDynamicallyLoadedComponent2 is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTest.res", line 112, characters 6-20
  LazyDynamicallyLoadedComponent2.+reasonResource is never used
  <-- line 112
    let @dead("LazyDynamicallyLoadedComponent2.+reasonResource") reasonResource: JSResource.t<

  Warning Dead Value
  File "./DeadTest.res", line 115, characters 2-54
  LazyDynamicallyLoadedComponent2.+makeProps is never used
  <-- line 115
    @dead("LazyDynamicallyLoadedComponent2.+makeProps") let makeProps = DynamicallyLoadedComponent.makeProps

  Warning Dead Value
  File "./DeadTest.res", line 116, characters 2-170
  LazyDynamicallyLoadedComponent2.+make is never used
  <-- line 116
    @dead("LazyDynamicallyLoadedComponent2.+make") let make = props =>

  Warning Dead Value
  File "./DeadTest.res", line 128, characters 0-62
  +cmp2 is never used
  <-- line 128
  @dead("+cmp2") let cmp2 = () => <LazyDynamicallyLoadedComponent2 s="hello" />

  Warning Dead Value
  File "./DeadTest.res", line 140, characters 0-52
  +zzz is never used
  <-- line 140
  @dead("+zzz") let zzz = {

  Warning Dead Value
  File "./DeadTest.res", line 148, characters 0-15
  +second is never used
  <-- line 148
  @dead("+second") let second = 1L

  Warning Dead Value
  File "./DeadTest.res", line 149, characters 0-35
  +minute is never used
  <-- line 149
  @dead("+minute") let minute = Int64.mul(60L, second)

  Warning Dead Value
  File "./DeadTest.res", line 151, characters 0-21
  +deadRef is never used
  <-- line 151
  @dead("+deadRef") let deadRef = ref(12)

  Warning Dead Value
  File "./DeadTest.res", line 153, characters 0-37
  +makeSwitch is never used
  <-- line 153
  @dead("+makeSwitch") let makeSwitch = ComponentSwitch.make

  Warning Dead Value With Side Effects
  File "./DeadTest.res", line 160, characters 0-40
  +theSideEffectIsLogging is never used and could have side effects

  Warning Dead Value
  File "./DeadTest.res", line 162, characters 0-54
  +stringLengthNoSideEffects is never used
  <-- line 162
  @dead("+stringLengthNoSideEffects") let stringLengthNoSideEffects = String.length("sdkdl")

  Warning Dead Module
  File "./DeadTestBlacklist.res", line 0, characters 0-0
  +DeadTestBlacklist is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTestBlacklist.res", line 1, characters 0-10
  +x is never used
  <-- line 1
  @dead("+x") let x = 34

  Warning Dead Module
  File "./DeadTestWithInterface.res", line 1, characters 7-54
  +DeadTestWithInterface.Ext_buffer is a dead module as all its items are dead.

  Warning Dead Value
  File "./DeadTestWithInterface.res", line 2, characters 2-12
  Ext_buffer.+x is never used
  <-- line 2
    @dead("Ext_buffer.+x") let x: int

  Warning Dead Value
  File "./DeadTestWithInterface.res", line 4, characters 2-12
  Ext_buffer.+x is never used
  <-- line 4
    @dead("Ext_buffer.+x") let x = 42

  Warning Dead Type
  File "./DeadTypeTest.res", line 3, characters 2-5
  t.B is a variant case which is never constructed
  <-- line 3
    | @dead("t.B") B

  Warning Dead Value
  File "./DeadTypeTest.res", line 4, characters 0-9
  +a is never used
  <-- line 4
  @dead("+a") let a = A

  Warning Dead Type
  File "./DeadTypeTest.res", line 10, characters 2-13
  deadType.InNeither is a variant case which is never constructed
  <-- line 10
    | @dead("deadType.InNeither") InNeither

  Warning Dead Type
  File "./DeadTypeTest.resi", line 3, characters 2-5
  t.B is a variant case which is never constructed
  <-- line 3
    | @dead("t.B") B

  Warning Dead Value
  File "./DeadTypeTest.resi", line 4, characters 0-8
  +a is never used
  <-- line 4
  @dead("+a") let a: t

  Warning Dead Type
  File "./DeadTypeTest.resi", line 10, characters 2-13
  deadType.InNeither is a variant case which is never constructed
  <-- line 10
    | @dead("deadType.InNeither") InNeither

  Warning Dead Value
  File "./DeadValueTest.res", line 2, characters 0-17
  +valueDead is never used
  <-- line 2
  @dead("+valueDead") let valueDead = 2

  Warning Dead Value
  File "./DeadValueTest.res", line 4, characters 0-33
  +valueOnlyInImplementation is never used
  <-- line 4
  @dead("+valueOnlyInImplementation") let valueOnlyInImplementation = 3

  Warning Dead Value
  File "./DeadValueTest.res", line 6, characters 0-260
  +subList is never used
  <-- line 6
  @dead("+subList") let rec subList = (b, e, l) =>

  Warning Dead Value
  File "./DeadValueTest.resi", line 2, characters 0-18
  +valueDead is never used
  <-- line 2
  @dead("+valueDead") let valueDead: int

  Warning Dead Type
  File "./Docstrings.res", line 48, characters 2-5
  t.B is a variant case which is never constructed
  <-- line 48
    | @dead("t.B") B

  Warning Dead Module
  File "./ErrorHandler.res", line 0, characters 0-0
  +ErrorHandler is a dead module as all its items are dead.

  Warning Dead Value
  File "./ErrorHandler.res", line 11, characters 7-13
  +x is never used
  <-- line 11
  export @dead("+x") x = 42

  Warning Dead Module
  File "./ErrorHandler.resi", line 0, characters 0-0
  ErrorHandler is a dead module as all its items are dead.

  Warning Dead Value
  File "./ErrorHandler.resi", line 10, characters 0-10
  +x is never used
  <-- line 10
  @dead("+x") let x: int

  Warning Dead Module
  File "./EverythingLiveHere.res", line 0, characters 0-0
  +EverythingLiveHere is a dead module as all its items are dead.

  Warning Dead Value
  File "./EverythingLiveHere.res", line 1, characters 0-9
  +x is never used
  <-- line 1
  @dead("+x") let x = 1

  Warning Dead Value
  File "./EverythingLiveHere.res", line 3, characters 0-9
  +y is never used
  <-- line 3
  @dead("+y") let y = 3

  Warning Dead Value
  File "./EverythingLiveHere.res", line 5, characters 0-9
  +z is never used
  <-- line 5
  @dead("+z") let z = 4

  Warning Dead Value
  File "./FirstClassModules.res", line 47, characters 20-48
  M.+f is never used
  <-- line 47
    @bs.module("foo") @dead("M.+f") external f: int => int = "f"

  Warning Dead Value
  File "./FirstClassModules.res", line 53, characters 7-23
  +firstClassModule is never used
  <-- line 53
  export @dead("+firstClassModule") firstClassModule: firstClassModule = module(M)

  Warning Dead Module
  File "./FirstClassModulesInterface.res", line 0, characters 0-0
  +FirstClassModulesInterface is a dead module as all its items are dead.

  Warning Dead Type
  File "./FirstClassModulesInterface.res", line 2, characters 2-8
  record.x is a record label never used to read a value
  <-- line 2
    @dead("record.x") x: int,

  Warning Dead Type
  File "./FirstClassModulesInterface.res", line 3, characters 2-11
  record.y is a record label never used to read a value
  <-- line 3
    @dead("record.y") y: string,

  Warning Dead Value
  File "./FirstClassModulesInterface.res", line 6, characters 0-26
  +r is never used
  <-- line 6
  @dead("+r") let r = {x: 3, y: "hello"}

  Warning Dead Module
  File "./FirstClassModulesInterface.resi", line 0, characters 0-0
  FirstClassModulesInterface is a dead module as all its items are dead.

  Warning Dead Type
  File "./FirstClassModulesInterface.resi", line 2, characters 2-8
  record.x is a record label never used to read a value
  <-- line 2
    @dead("record.x") x: int,

  Warning Dead Type
  File "./FirstClassModulesInterface.resi", line 3, characters 2-11
  record.y is a record label never used to read a value
  <-- line 3
    @dead("record.y") y: string,

  Warning Dead Value
  File "./FirstClassModulesInterface.resi", line 6, characters 0-13
  +r is never used
  <-- line 6
  @dead("+r") let r: record

  Warning Dead Value
  File "./ImmutableArray.res", line 6, characters 2-63
  +fromTp is never used
  <-- line 6
    @dead("+fromTp") external fromTp: t<('a, 'b)> => array<('a, 'b)> = "%identity"

  Warning Dead Value
  File "./ImmutableArray.res", line 7, characters 2-61
  +fromTT is never used
  <-- line 7
    @dead("+fromTT") external fromTT: t<t<'a>> => array<array<'a>> = "%identity"

  Warning Dead Value
  File "./ImmutableArray.res", line 9, characters 2-61
  +toTp is never used
  <-- line 9
    @dead("+toTp") external toTp: array<('a, 'b)> => t<('a, 'b)> = "%identity"

  Warning Dead Value
  File "./ImmutableArray.res", line 10, characters 2-59
  +toT2 is never used
  <-- line 10
    @dead("+toT2") external toT2: array2<'a> => (t<'a>, t<'a>) = "%identity"

  Warning Dead Value
  File "./ImmutableArray.res", line 16, characters 2-41
  +toArray is never used
  <-- line 16
    @dead("+toArray") let toArray = a => Array.copy(a->fromT)

  Warning Dead Value
  File "./ImmutableArray.res", line 20, characters 2-42
  +length is never used
  <-- line 20
    @dead("+length") let length = a => Array.length(a->fromT)

  Warning Dead Value
  File "./ImmutableArray.res", line 22, characters 2-38
  +size is never used
  <-- line 22
    @dead("+size") let size = a => Array.size(a->fromT)

  Warning Dead Value
  File "./ImmutableArray.res", line 26, characters 2-50
  +getExn is never used
  <-- line 26
    @dead("+getExn") let getExn = (a, x) => Array.getExn(a->fromT, x)

  Warning Dead Value
  File "./ImmutableArray.res", line 28, characters 2-56
  +getUnsafe is never used
  <-- line 28
    @dead("+getUnsafe") let getUnsafe = (a, x) => Array.getUnsafe(a->fromT, x)

  Warning Dead Value
  File "./ImmutableArray.res", line 30, characters 2-62
  +getUndefined is never used
  <-- line 30
    @dead("+getUndefined") let getUndefined = (a, x) => Array.getUndefined(a->fromT, x)

  Warning Dead Value
  File "./ImmutableArray.res", line 32, characters 2-49
  +shuffle is never used
  <-- line 32
    @dead("+shuffle") let shuffle = x => Array.shuffle(x->fromT)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 34, characters 2-49
  +reverse is never used
  <-- line 34
    @dead("+reverse") let reverse = x => Array.reverse(x->fromT)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 36, characters 2-62
  +makeUninitialized is never used
  <-- line 36
    @dead("+makeUninitialized") let makeUninitialized = x => Array.makeUninitialized(x)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 38, characters 2-74
  +makeUninitializedUnsafe is never used
  <-- line 38
    @dead("+makeUninitializedUnsafe") let makeUninitializedUnsafe = x => Array.makeUninitializedUnsafe(x)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 40, characters 2-44
  +make is never used
  <-- line 40
    @dead("+make") let make = (x, y) => Array.make(x, y)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 42, characters 2-46
  +range is never used
  <-- line 42
    @dead("+range") let range = (x, y) => Array.range(x, y)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 44, characters 2-64
  +rangeBy is never used
  <-- line 44
    @dead("+rangeBy") let rangeBy = (x, y, ~step) => Array.rangeBy(x, y, ~step)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 46, characters 2-50
  +makeByU is never used
  <-- line 46
    @dead("+makeByU") let makeByU = (c, f) => Array.makeByU(c, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 47, characters 2-48
  +makeBy is never used
  <-- line 47
    @dead("+makeBy") let makeBy = (c, f) => Array.makeBy(c, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 49, characters 2-70
  +makeByAndShuffleU is never used
  <-- line 49
    @dead("+makeByAndShuffleU") let makeByAndShuffleU = (c, f) => Array.makeByAndShuffleU(c, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 50, characters 2-68
  +makeByAndShuffle is never used
  <-- line 50
    @dead("+makeByAndShuffle") let makeByAndShuffle = (c, f) => Array.makeByAndShuffle(c, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 52, characters 2-61
  +zip is never used
  <-- line 52
    @dead("+zip") let zip = (a1, a2) => Array.zip(fromT(a1), fromT(a2))->toTp

  Warning Dead Value
  File "./ImmutableArray.res", line 54, characters 2-72
  +zipByU is never used
  <-- line 54
    @dead("+zipByU") let zipByU = (a1, a2, f) => Array.zipByU(fromT(a1), fromT(a2), f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 55, characters 2-70
  +zipBy is never used
  <-- line 55
    @dead("+zipBy") let zipBy = (a1, a2, f) => Array.zipBy(fromT(a1), fromT(a2), f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 57, characters 2-47
  +unzip is never used
  <-- line 57
    @dead("+unzip") let unzip = a => Array.unzip(a->fromTp)->toT2

  Warning Dead Value
  File "./ImmutableArray.res", line 59, characters 2-66
  +concat is never used
  <-- line 59
    @dead("+concat") let concat = (a1, a2) => Array.concat(a1->fromT, a2->fromT)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 61, characters 2-67
  +concatMany is never used
  <-- line 61
    @dead("+concatMany") let concatMany = (a: t<t<_>>) => Array.concatMany(a->fromTT)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 63, characters 2-77
  +slice is never used
  <-- line 63
    @dead("+slice") let slice = (a, ~offset, ~len) => Array.slice(a->fromT, ~offset, ~len)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 65, characters 2-63
  +sliceToEnd is never used
  <-- line 65
    @dead("+sliceToEnd") let sliceToEnd = (a, b) => Array.sliceToEnd(a->fromT, b)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 67, characters 2-43
  +copy is never used
  <-- line 67
    @dead("+copy") let copy = a => Array.copy(a->fromT)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 69, characters 2-54
  +forEachU is never used
  <-- line 69
    @dead("+forEachU") let forEachU = (a, f) => Array.forEachU(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 70, characters 2-52
  +forEach is never used
  <-- line 70
    @dead("+forEach") let forEach = (a, f) => Array.forEach(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 72, characters 2-51
  +mapU is never used
  <-- line 72
    @dead("+mapU") let mapU = (a, f) => Array.mapU(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 73, characters 2-49
  +map is never used
  <-- line 73
    @dead("+map") let map = (a, f) => Array.map(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 75, characters 2-71
  +keepWithIndexU is never used
  <-- line 75
    @dead("+keepWithIndexU") let keepWithIndexU = (a, f) => Array.keepWithIndexU(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 76, characters 2-69
  +keepWithIndex is never used
  <-- line 76
    @dead("+keepWithIndex") let keepWithIndex = (a, f) => Array.keepWithIndex(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 78, characters 2-59
  +keepMapU is never used
  <-- line 78
    @dead("+keepMapU") let keepMapU = (a, f) => Array.keepMapU(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 79, characters 2-57
  +keepMap is never used
  <-- line 79
    @dead("+keepMap") let keepMap = (a, f) => Array.keepMap(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 81, characters 2-72
  +forEachWithIndexU is never used
  <-- line 81
    @dead("+forEachWithIndexU") let forEachWithIndexU = (a, f) => Array.forEachWithIndexU(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 82, characters 2-70
  +forEachWithIndex is never used
  <-- line 82
    @dead("+forEachWithIndex") let forEachWithIndex = (a, f) => Array.forEachWithIndex(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 84, characters 2-69
  +mapWithIndexU is never used
  <-- line 84
    @dead("+mapWithIndexU") let mapWithIndexU = (a, f) => Array.mapWithIndexU(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 85, characters 2-67
  +mapWithIndex is never used
  <-- line 85
    @dead("+mapWithIndex") let mapWithIndex = (a, f) => Array.mapWithIndex(a->fromT, f)->toT

  Warning Dead Value
  File "./ImmutableArray.res", line 87, characters 2-64
  +partitionU is never used
  <-- line 87
    @dead("+partitionU") let partitionU = (a, f) => Array.partitionU(a->fromT, f)->toT2

  Warning Dead Value
  File "./ImmutableArray.res", line 88, characters 2-62
  +partition is never used
  <-- line 88
    @dead("+partition") let partition = (a, f) => Array.partition(a->fromT, f)->toT2

  Warning Dead Value
  File "./ImmutableArray.res", line 90, characters 2-58
  +reduceU is never used
  <-- line 90
    @dead("+reduceU") let reduceU = (a, b, f) => Array.reduceU(a->fromT, b, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 91, characters 2-56
  +reduce is never used
  <-- line 91
    @dead("+reduce") let reduce = (a, b, f) => Array.reduce(a->fromT, b, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 93, characters 2-72
  +reduceReverseU is never used
  <-- line 93
    @dead("+reduceReverseU") let reduceReverseU = (a, b, f) => Array.reduceReverseU(a->fromT, b, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 94, characters 2-70
  +reduceReverse is never used
  <-- line 94
    @dead("+reduceReverse") let reduceReverse = (a, b, f) => Array.reduceReverse(a->fromT, b, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 96, characters 2-91
  +reduceReverse2U is never used
  <-- line 96
    @dead("+reduceReverse2U") let reduceReverse2U = (a1, a2, c, f) => Array.reduceReverse2U(fromT(a1), fromT(a2), c, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 97, characters 2-89
  +reduceReverse2 is never used
  <-- line 97
    @dead("+reduceReverse2") let reduceReverse2 = (a1, a2, c, f) => Array.reduceReverse2(fromT(a1), fromT(a2), c, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 99, characters 2-48
  +someU is never used
  <-- line 99
    @dead("+someU") let someU = (a, f) => Array.someU(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 100, characters 2-46
  +some is never used
  <-- line 100
    @dead("+some") let some = (a, f) => Array.some(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 102, characters 2-50
  +everyU is never used
  <-- line 102
    @dead("+everyU") let everyU = (a, f) => Array.everyU(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 103, characters 2-48
  +every is never used
  <-- line 103
    @dead("+every") let every = (a, f) => Array.every(a->fromT, f)

  Warning Dead Value
  File "./ImmutableArray.res", line 105, characters 2-69
  +every2U is never used
  <-- line 105
    @dead("+every2U") let every2U = (a1, a2, f) => Array.every2U(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 106, characters 2-67
  +every2 is never used
  <-- line 106
    @dead("+every2") let every2 = (a1, a2, f) => Array.every2(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 108, characters 2-67
  +some2U is never used
  <-- line 108
    @dead("+some2U") let some2U = (a1, a2, f) => Array.some2U(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 109, characters 2-65
  +some2 is never used
  <-- line 109
    @dead("+some2") let some2 = (a1, a2, f) => Array.some2(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 111, characters 2-63
  +cmpU is never used
  <-- line 111
    @dead("+cmpU") let cmpU = (a1, a2, f) => Array.cmpU(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 112, characters 2-61
  +cmp is never used
  <-- line 112
    @dead("+cmp") let cmp = (a1, a2, f) => Array.cmp(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 114, characters 2-61
  +eqU is never used
  <-- line 114
    @dead("+eqU") let eqU = (a1, a2, f) => Array.eqU(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.res", line 115, characters 2-59
  +eq is never used
  <-- line 115
    @dead("+eq") let eq = (a1, a2, f) => Array.eq(fromT(a1), fromT(a2), f)

  Warning Dead Value
  File "./ImmutableArray.resi", line 12, characters 0-31
  +toArray is never used
  <-- line 12
  @dead("+toArray") let toArray: t<'a> => array<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 14, characters 0-107
  +length is never used
  <-- line 14
  @dead("+length") @ocaml.doc(" Subset of the Belt.Array oprerations that do not mutate the array. ")

  Warning Dead Value
  File "./ImmutableArray.resi", line 17, characters 0-22
  +size is never used
  <-- line 17
  @dead("+size") let size: t<'a> => int

  Warning Dead Value
  File "./ImmutableArray.resi", line 19, characters 0-35
  +get is never used
  <-- line 19
  @dead("+get") let get: (t<'a>, int) => option<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 21, characters 0-30
  +getExn is never used
  <-- line 21
  @dead("+getExn") let getExn: (t<'a>, int) => 'a

  Warning Dead Value
  File "./ImmutableArray.resi", line 23, characters 0-33
  +getUnsafe is never used
  <-- line 23
  @dead("+getUnsafe") let getUnsafe: (t<'a>, int) => 'a

  Warning Dead Value
  File "./ImmutableArray.resi", line 25, characters 0-50
  +getUndefined is never used
  <-- line 25
  @dead("+getUndefined") let getUndefined: (t<'a>, int) => Js.undefined<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 27, characters 0-27
  +shuffle is never used
  <-- line 27
  @dead("+shuffle") let shuffle: t<'a> => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 29, characters 0-27
  +reverse is never used
  <-- line 29
  @dead("+reverse") let reverse: t<'a> => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 31, characters 0-49
  +makeUninitialized is never used
  <-- line 31
  @dead("+makeUninitialized") let makeUninitialized: int => t<Js.undefined<'a>>

  Warning Dead Value
  File "./ImmutableArray.resi", line 33, characters 0-41
  +makeUninitializedUnsafe is never used
  <-- line 33
  @dead("+makeUninitializedUnsafe") let makeUninitializedUnsafe: int => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 35, characters 0-28
  +make is never used
  <-- line 35
  @dead("+make") let make: (int, 'a) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 37, characters 0-31
  +range is never used
  <-- line 37
  @dead("+range") let range: (int, int) => t<int>

  Warning Dead Value
  File "./ImmutableArray.resi", line 39, characters 0-45
  +rangeBy is never used
  <-- line 39
  @dead("+rangeBy") let rangeBy: (int, int, ~step: int) => t<int>

  Warning Dead Value
  File "./ImmutableArray.resi", line 41, characters 0-42
  +makeByU is never used
  <-- line 41
  @dead("+makeByU") let makeByU: (int, (. int) => 'a) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 42, characters 0-37
  +makeBy is never used
  <-- line 42
  @dead("+makeBy") let makeBy: (int, int => 'a) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 44, characters 0-52
  +makeByAndShuffleU is never used
  <-- line 44
  @dead("+makeByAndShuffleU") let makeByAndShuffleU: (int, (. int) => 'a) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 45, characters 0-47
  +makeByAndShuffle is never used
  <-- line 45
  @dead("+makeByAndShuffle") let makeByAndShuffle: (int, int => 'a) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 47, characters 0-38
  +zip is never used
  <-- line 47
  @dead("+zip") let zip: (t<'a>, t<'b>) => t<('a, 'b)>

  Warning Dead Value
  File "./ImmutableArray.resi", line 49, characters 0-53
  +zipByU is never used
  <-- line 49
  @dead("+zipByU") let zipByU: (t<'a>, t<'b>, (. 'a, 'b) => 'c) => t<'c>

  Warning Dead Value
  File "./ImmutableArray.resi", line 50, characters 0-50
  +zipBy is never used
  <-- line 50
  @dead("+zipBy") let zipBy: (t<'a>, t<'b>, ('a, 'b) => 'c) => t<'c>

  Warning Dead Value
  File "./ImmutableArray.resi", line 52, characters 0-40
  +unzip is never used
  <-- line 52
  @dead("+unzip") let unzip: t<('a, 'a)> => (t<'a>, t<'a>)

  Warning Dead Value
  File "./ImmutableArray.resi", line 54, characters 0-35
  +concat is never used
  <-- line 54
  @dead("+concat") let concat: (t<'a>, t<'a>) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 56, characters 0-33
  +concatMany is never used
  <-- line 56
  @dead("+concatMany") let concatMany: t<t<'a>> => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 58, characters 0-52
  +slice is never used
  <-- line 58
  @dead("+slice") let slice: (t<'a>, ~offset: int, ~len: int) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 60, characters 0-37
  +sliceToEnd is never used
  <-- line 60
  @dead("+sliceToEnd") let sliceToEnd: (t<'a>, int) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 62, characters 0-24
  +copy is never used
  <-- line 62
  @dead("+copy") let copy: t<'a> => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 64, characters 0-45
  +forEachU is never used
  <-- line 64
  @dead("+forEachU") let forEachU: (t<'a>, (. 'a) => unit) => unit

  Warning Dead Value
  File "./ImmutableArray.resi", line 65, characters 0-40
  +forEach is never used
  <-- line 65
  @dead("+forEach") let forEach: (t<'a>, 'a => unit) => unit

  Warning Dead Value
  File "./ImmutableArray.resi", line 67, characters 0-40
  +mapU is never used
  <-- line 67
  @dead("+mapU") let mapU: (t<'a>, (. 'a) => 'b) => t<'b>

  Warning Dead Value
  File "./ImmutableArray.resi", line 68, characters 0-35
  +map is never used
  <-- line 68
  @dead("+map") let map: (t<'a>, 'a => 'b) => t<'b>

  Warning Dead Value
  File "./ImmutableArray.resi", line 70, characters 0-57
  +keepWithIndexU is never used
  <-- line 70
  @dead("+keepWithIndexU") let keepWithIndexU: (t<'a>, (. 'a, int) => bool) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 71, characters 0-54
  +keepWithIndex is never used
  <-- line 71
  @dead("+keepWithIndex") let keepWithIndex: (t<'a>, ('a, int) => bool) => t<'a>

  Warning Dead Value
  File "./ImmutableArray.resi", line 73, characters 0-52
  +keepMapU is never used
  <-- line 73
  @dead("+keepMapU") let keepMapU: (t<'a>, (. 'a) => option<'b>) => t<'b>

  Warning Dead Value
  File "./ImmutableArray.resi", line 74, characters 0-47
  +keepMap is never used
  <-- line 74
  @dead("+keepMap") let keepMap: (t<'a>, 'a => option<'b>) => t<'b>

  Warning Dead Value
  File "./ImmutableArray.resi", line 76, characters 0-59
  +forEachWithIndexU is never used
  <-- line 76
  @dead("+forEachWithIndexU") let forEachWithIndexU: (t<'a>, (. int, 'a) => unit) => unit

  Warning Dead Value
  File "./ImmutableArray.resi", line 77, characters 0-56
  +forEachWithIndex is never used
  <-- line 77
  @dead("+forEachWithIndex") let forEachWithIndex: (t<'a>, (int, 'a) => unit) => unit

  Warning Dead Value
  File "./ImmutableArray.resi", line 79, characters 0-54
  +mapWithIndexU is never used
  <-- line 79
  @dead("+mapWithIndexU") let mapWithIndexU: (t<'a>, (. int, 'a) => 'b) => t<'b>

  Warning Dead Value
  File "./ImmutableArray.resi", line 80, characters 0-51
  +mapWithIndex is never used
  <-- line 80
  @dead("+mapWithIndex") let mapWithIndex: (t<'a>, (int, 'a) => 'b) => t<'b>

  Warning Dead Value
  File "./ImmutableArray.resi", line 82, characters 0-57
  +partitionU is never used
  <-- line 82
  @dead("+partitionU") let partitionU: (t<'a>, (. 'a) => bool) => (t<'a>, t<'a>)

  Warning Dead Value
  File "./ImmutableArray.resi", line 83, characters 0-52
  +partition is never used
  <-- line 83
  @dead("+partition") let partition: (t<'a>, 'a => bool) => (t<'a>, t<'a>)

  Warning Dead Value
  File "./ImmutableArray.resi", line 85, characters 0-48
  +reduceU is never used
  <-- line 85
  @dead("+reduceU") let reduceU: (t<'a>, 'b, (. 'b, 'a) => 'b) => 'b

  Warning Dead Value
  File "./ImmutableArray.resi", line 86, characters 0-45
  +reduce is never used
  <-- line 86
  @dead("+reduce") let reduce: (t<'a>, 'b, ('b, 'a) => 'b) => 'b

  Warning Dead Value
  File "./ImmutableArray.resi", line 88, characters 0-55
  +reduceReverseU is never used
  <-- line 88
  @dead("+reduceReverseU") let reduceReverseU: (t<'a>, 'b, (. 'b, 'a) => 'b) => 'b

  Warning Dead Value
  File "./ImmutableArray.resi", line 89, characters 0-52
  +reduceReverse is never used
  <-- line 89
  @dead("+reduceReverse") let reduceReverse: (t<'a>, 'b, ('b, 'a) => 'b) => 'b

  Warning Dead Value
  File "./ImmutableArray.resi", line 91, characters 0-67
  +reduceReverse2U is never used
  <-- line 91
  @dead("+reduceReverse2U") let reduceReverse2U: (t<'a>, t<'b>, 'c, (. 'c, 'a, 'b) => 'c) => 'c

  Warning Dead Value
  File "./ImmutableArray.resi", line 92, characters 0-64
  +reduceReverse2 is never used
  <-- line 92
  @dead("+reduceReverse2") let reduceReverse2: (t<'a>, t<'b>, 'c, ('c, 'a, 'b) => 'c) => 'c

  Warning Dead Value
  File "./ImmutableArray.resi", line 94, characters 0-42
  +someU is never used
  <-- line 94
  @dead("+someU") let someU: (t<'a>, (. 'a) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 95, characters 0-37
  +some is never used
  <-- line 95
  @dead("+some") let some: (t<'a>, 'a => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 97, characters 0-43
  +everyU is never used
  <-- line 97
  @dead("+everyU") let everyU: (t<'a>, (. 'a) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 98, characters 0-38
  +every is never used
  <-- line 98
  @dead("+every") let every: (t<'a>, 'a => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 100, characters 0-55
  +every2U is never used
  <-- line 100
  @dead("+every2U") let every2U: (t<'a>, t<'b>, (. 'a, 'b) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 101, characters 0-52
  +every2 is never used
  <-- line 101
  @dead("+every2") let every2: (t<'a>, t<'b>, ('a, 'b) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 103, characters 0-54
  +some2U is never used
  <-- line 103
  @dead("+some2U") let some2U: (t<'a>, t<'b>, (. 'a, 'b) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 104, characters 0-51
  +some2 is never used
  <-- line 104
  @dead("+some2") let some2: (t<'a>, t<'b>, ('a, 'b) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 106, characters 0-50
  +cmpU is never used
  <-- line 106
  @dead("+cmpU") let cmpU: (t<'a>, t<'a>, (. 'a, 'a) => int) => int

  Warning Dead Value
  File "./ImmutableArray.resi", line 107, characters 0-47
  +cmp is never used
  <-- line 107
  @dead("+cmp") let cmp: (t<'a>, t<'a>, ('a, 'a) => int) => int

  Warning Dead Value
  File "./ImmutableArray.resi", line 109, characters 0-51
  +eqU is never used
  <-- line 109
  @dead("+eqU") let eqU: (t<'a>, t<'a>, (. 'a, 'a) => bool) => bool

  Warning Dead Value
  File "./ImmutableArray.resi", line 110, characters 0-48
  +eq is never used
  <-- line 110
  @dead("+eq") let eq: (t<'a>, t<'a>, ('a, 'a) => bool) => bool

  Warning Dead Type
  File "./ImportHookDefault.res", line 2, characters 2-14
  person.name is a record label never used to read a value
  <-- line 2
    @dead("person.name") name: string,

  Warning Dead Type
  File "./ImportHookDefault.res", line 3, characters 2-10
  person.age is a record label never used to read a value
  <-- line 3
    @dead("person.age") age: int,

  Warning Dead Type
  File "./ImportHooks.res", line 2, characters 2-14
  person.name is a record label never used to read a value
  <-- line 2
    @dead("person.name") name: string,

  Warning Dead Type
  File "./ImportHooks.res", line 3, characters 2-10
  person.age is a record label never used to read a value
  <-- line 3
    @dead("person.age") age: int,

  Warning Dead Type
  File "./ImportJsValue.res", line 9, characters 2-8
  point.x is a record label never used to read a value
  <-- line 9
    @dead("point.x") x: int,

  Warning Dead Type
  File "./ImportJsValue.res", line 10, characters 2-16
  point.y is a record label never used to read a value
  <-- line 10
    @dead("point.y") y: option<int>,

  Warning Dead Value
  File "./ImportJsValue.res", line 33, characters 11-49
  AbsoluteValue.+getProp is never used
  <-- line 33
    @bs.send @dead("AbsoluteValue.+getProp") external getProp: t => int = "getProp"

  Warning Dead Type
  File "./ImportJsValue.res", line 58, characters 2-10
  variant.I is a variant case which is never constructed
  <-- line 58
    | @dead("variant.I") I(int)

  Warning Dead Type
  File "./ImportJsValue.res", line 59, characters 2-13
  variant.S is a variant case which is never constructed
  <-- line 59
    | @dead("variant.S") S(string)

  Warning Dead Type
  File "./ImportMyBanner.res", line 4, characters 16-28
  message.text is a record label never used to read a value
  <-- line 4
  type message = {@dead("message.text") text: string}

  Warning Dead Value
  File "./ImportMyBanner.res", line 19, characters 0-15
  +make is never used
  <-- line 19
  @dead("+make") let make = make

  Warning Dead Value
  File "./JSResource.res", line 3, characters 11-62
  +jSResource is never used
  <-- line 3
  @bs.module @dead("+jSResource") external jSResource: string => t<'a> = "JSResource"

  Warning Dead Module
  File "./ModuleAliases.res", line 2, characters 9-56
  +ModuleAliases.Outer.Inner is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases.res", line 3, characters 19-32
  Outer.Inner.innerT.inner is a record label never used to read a value
  <-- line 3
      type innerT = {@dead("Outer.Inner.innerT.inner") inner: string}

  Warning Dead Module
  File "./ModuleAliases.res", line 10, characters 11-61
  +ModuleAliases.Outer2.Inner2.InnerNested is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases.res", line 11, characters 16-27
  Outer2.Inner2.InnerNested.t.nested is a record label never used to read a value
  <-- line 11
        type t = {@dead("Outer2.Inner2.InnerNested.t.nested") nested: int}

  Warning Dead Module
  File "./ModuleAliases2.res", line 0, characters 0-0
  +ModuleAliases2 is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases2.res", line 2, characters 2-8
  record.x is a record label never used to read a value
  <-- line 2
    @dead("record.x") x: int,

  Warning Dead Type
  File "./ModuleAliases2.res", line 3, characters 2-11
  record.y is a record label never used to read a value
  <-- line 3
    @dead("record.y") y: string,

  Warning Dead Module
  File "./ModuleAliases2.res", line 6, characters 7-120
  +ModuleAliases2.Outer is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases2.res", line 7, characters 23-36
  Outer.outer.outer is a record label never used to read a value
  <-- line 7
    export type outer = {@dead("Outer.outer.outer") outer: string}

  Warning Dead Module
  File "./ModuleAliases2.res", line 9, characters 9-62
  +ModuleAliases2.Outer.Inner is a dead module as all its items are dead.

  Warning Dead Type
  File "./ModuleAliases2.res", line 10, characters 25-38
  Outer.Inner.inner.inner is a record label never used to read a value
  <-- line 10
      export type inner = {@dead("Outer.Inner.inner.inner") inner: string}

  Warning Dead Value
  File "./ModuleAliases2.res", line 18, characters 0-10
  +q is never used
  <-- line 18
  @dead("+q") let q = 42

  Warning Dead Value
  File "./NestedModules.res", line 6, characters 2-22
  Universe.+notExported is never used
  <-- line 6
    @dead("Universe.+notExported") let notExported = 33

  Warning Dead Value
  File "./NestedModules.res", line 11, characters 4-13
  Universe.Nested2.+x is never used
  <-- line 11
      @dead("Universe.Nested2.+x") let x = 0

  Warning Dead Value
  File "./NestedModules.res", line 15, characters 4-13
  Universe.Nested2.+y is never used
  <-- line 15
      @dead("Universe.Nested2.+y") let y = 2

  Warning Dead Value
  File "./NestedModules.res", line 20, characters 6-15
  Universe.Nested2.Nested3.+x is never used
  <-- line 20
        @dead("Universe.Nested2.Nested3.+x") let x = 0

  Warning Dead Value
  File "./NestedModules.res", line 21, characters 6-15
  Universe.Nested2.Nested3.+y is never used
  <-- line 21
        @dead("Universe.Nested2.Nested3.+y") let y = 1

  Warning Dead Value
  File "./NestedModules.res", line 22, characters 6-15
  Universe.Nested2.Nested3.+z is never used
  <-- line 22
        @dead("Universe.Nested2.Nested3.+z") let z = 2

  Warning Dead Value
  File "./NestedModules.res", line 23, characters 6-15
  Universe.Nested2.Nested3.+w is never used
  <-- line 23
        @dead("Universe.Nested2.Nested3.+w") let w = 3

  Warning Dead Type
  File "./NestedModules.res", line 36, characters 4-7
  Universe.variant.A is a variant case which is never constructed
  <-- line 36
      | @dead("Universe.variant.A") A

  Warning Dead Type
  File "./NestedModules.res", line 37, characters 4-15
  Universe.variant.B is a variant case which is never constructed
  <-- line 37
      | @dead("Universe.variant.B") B(string)

  Warning Dead Module
  File "./Newsyntax.res", line 0, characters 0-0
  +Newsyntax is a dead module as all its items are dead.

  Warning Dead Value
  File "./Newsyntax.res", line 1, characters 0-10
  +x is never used
  <-- line 1
  @dead("+x") let x = 34

  Warning Dead Value
  File "./Newsyntax.res", line 3, characters 0-10
  +y is never used
  <-- line 3
  @dead("+y") let y = 11

  Warning Dead Type
  File "./Newsyntax.res", line 6, characters 2-10
  record.xxx is a record label never used to read a value
  <-- line 6
    @dead("record.xxx") xxx: int,

  Warning Dead Type
  File "./Newsyntax.res", line 7, characters 2-10
  record.yyy is a record label never used to read a value
  <-- line 7
    @dead("record.yyy") yyy: int,

  Warning Dead Type
  File "./Newsyntax.res", line 10, characters 15-16
  variant.A is a variant case which is never constructed
  <-- line 10
  type variant = | @dead("variant.A") A | B(int)|C

  Warning Dead Type
  File "./Newsyntax.res", line 10, characters 17-25
  variant.B is a variant case which is never constructed
  <-- line 10
  type variant = | @dead("variant.A") A | @dead("variant.B") B(int)|C

  Warning Dead Type
  File "./Newsyntax.res", line 10, characters 25-27
  variant.C is a variant case which is never constructed
  <-- line 10
  type variant = | @dead("variant.A") A | @dead("variant.B") B(int)|@dead("variant.C") C

  Warning Dead Type
  File "./Newsyntax.res", line 12, characters 16-22
  record2.xx is a record label never used to read a value
  <-- line 12
  type record2 = {@dead("record2.xx") xx:int,yy:int}

  Warning Dead Type
  File "./Newsyntax.res", line 12, characters 23-29
  record2.yy is a record label never used to read a value
  <-- line 12
  type record2 = {@dead("record2.xx") xx:int,@dead("record2.yy") yy:int}

  Warning Dead Type
  File "./Opaque.res", line 2, characters 25-41
  opaqueFromRecords.A is a variant case which is never constructed
  <-- line 2
  type opaqueFromRecords = | @dead("opaqueFromRecords.A") A(Records.coord)

  Warning Dead Value
  File "./OptArg.resi", line 1, characters 0-54
  +foo is never used
  <-- line 1
  @dead("+foo") let foo: (~x: int=?, ~y: int=?, ~z: int=?, int) => int

  Warning Dead Type
  File "./Records.res", line 19, characters 2-14
  person.name is a record label never used to read a value
  <-- line 19
    @dead("person.name") name: string,

  Warning Dead Type
  File "./Records.res", line 20, characters 2-10
  person.age is a record label never used to read a value
  <-- line 20
    @dead("person.age") age: int,

  Warning Dead Type
  File "./Records.res", line 25, characters 2-14
  business.name is a record label never used to read a value
  <-- line 25
    @dead("business.name") name: string,

  Warning Dead Type
  File "./Records.res", line 50, characters 2-10
  payload.num is a record label never used to read a value
  <-- line 50
    @dead("payload.num") num: int,

  Warning Dead Type
  File "./Records.res", line 58, characters 2-8
  record.w is a record label never used to read a value
  <-- line 58
    @dead("record.w") w: int,

  Warning Dead Type
  File "./Records.res", line 73, characters 2-14
  business2.name is a record label never used to read a value
  <-- line 73
    @dead("business2.name") name: string,

  Warning Dead Type
  File "./Records.res", line 74, characters 2-30
  business2.owner is a record label never used to read a value
  <-- line 74
    @dead("business2.owner") owner: Js.Nullable.t<person>,

  Warning Dead Type
  File "./References.res", line 32, characters 27-33
  requiresConversion.x is a record label never used to read a value
  <-- line 32
  type requiresConversion = {@dead("requiresConversion.x") x: int}

  Warning Dead Type
  File "./RepeatedLabel.res", line 2, characters 2-9
  userData.a is a record label never used to read a value
  <-- line 2
    @dead("userData.a") a: bool,

  Warning Dead Type
  File "./RepeatedLabel.res", line 3, characters 2-8
  userData.b is a record label never used to read a value
  <-- line 3
    @dead("userData.b") b: int,

  Warning Dead Type
  File "./RepeatedLabel.res", line 9, characters 2-11
  tabState.f is a record label never used to read a value
  <-- line 9
    @dead("tabState.f") f: string,

  Warning Dead Module
  File "./RequireCond.res", line 0, characters 0-0
  +RequireCond is a dead module as all its items are dead.

  Warning Dead Value
  File "./RequireCond.res", line 1, characters 0-270
  +make is never used
  <-- line 1
  @dead("+make") @bs.module

  Warning Dead Value
  File "./RequireCond.res", line 11, characters 0-306
  +either is never used
  <-- line 11
  @dead("+either") @bs.module

  Warning Dead Value
  File "./Shadow.res", line 8, characters 2-22
  M.+test is never used
  <-- line 8
    @dead("M.+test") let test = () => "a"

  Warning Dead Value
  File "./TestImmutableArray.res", line 11, characters 0-54
  +testBeltArrayGet is never used
  <-- line 11
  @dead("+testBeltArrayGet") let testBeltArrayGet = arr => {

  Warning Dead Value
  File "./TestImmutableArray.res", line 16, characters 0-58
  +testBeltArraySet is never used
  <-- line 16
  @dead("+testBeltArraySet") let testBeltArraySet = arr => {

  Warning Dead Value
  File "./TestImport.res", line 11, characters 0-43
  +innerStuffContents is never used
  <-- line 11
  @dead("+innerStuffContents") let innerStuffContents = innerStuffContents

  Warning Dead Type
  File "./TestImport.res", line 18, characters 23-35
  message.text is a record label never used to read a value
  <-- line 18
  export type message = {@dead("message.text") text: string}

  Warning Dead Value
  File "./TestImport.res", line 31, characters 0-15
  +make is never used
  <-- line 31
  @dead("+make") let make = make

  Warning Dead Type
  File "./TestPromise.res", line 4, characters 2-8
  fromPayload.x is a record label never used to read a value
  <-- line 4
    @dead("fromPayload.x") x: int,

  Warning Dead Type
  File "./TestPromise.res", line 8, characters 25-39
  toPayload.result is a record label never used to read a value
  <-- line 8
  export type toPayload = {@dead("toPayload.result") result: string}

  Warning Dead Module
  File "./TransitiveType2.res", line 0, characters 0-0
  +TransitiveType2 is a dead module as all its items are dead.

  Warning Dead Value
  File "./TransitiveType2.res", line 5, characters 0-28
  +convertT2 is never used
  <-- line 5
  @dead("+convertT2") let convertT2 = (x: t2) => x

  Warning Dead Type
  File "./TransitiveType3.res", line 2, characters 2-8
  t3.i is a record label never used to read a value
  <-- line 2
    @dead("t3.i") i: int,

  Warning Dead Type
  File "./TransitiveType3.res", line 3, characters 2-11
  t3.s is a record label never used to read a value
  <-- line 3
    @dead("t3.s") s: string,

  Warning Dead Module
  File "./TypeParams1.res", line 0, characters 0-0
  +TypeParams1 is a dead module as all its items are dead.

  Warning Dead Value
  File "./TypeParams1.res", line 4, characters 0-24
  +exportSomething is never used
  <-- line 4
  @dead("+exportSomething") let exportSomething = 10

  Warning Dead Module
  File "./TypeParams2.res", line 0, characters 0-0
  +TypeParams2 is a dead module as all its items are dead.

  Warning Dead Type
  File "./TypeParams2.res", line 1, characters 20-27
  item.id is a record label never used to read a value
  <-- line 1
  export type item = {@dead("item.id") id: int}

  Warning Dead Value
  File "./TypeParams2.res", line 7, characters 0-24
  +exportSomething is never used
  <-- line 7
  @dead("+exportSomething") let exportSomething = 10

  Warning Dead Type
  File "./Types.res", line 8, characters 2-13
  typeWithVars.A is a variant case which is never constructed
  <-- line 8
    | @dead("typeWithVars.A") A('x, 'y)

  Warning Dead Type
  File "./Types.res", line 9, characters 2-9
  typeWithVars.B is a variant case which is never constructed
  <-- line 9
    | @dead("typeWithVars.B") B('z)

  Warning Dead Type
  File "./Types.res", line 27, characters 26-47
  mutuallyRecursiveB.a is a record label never used to read a value
  <-- line 27
  and mutuallyRecursiveB = {@dead("mutuallyRecursiveB.a") a: mutuallyRecursiveA}

  Warning Dead Type
  File "./Types.res", line 45, characters 2-5
  opaqueVariant.A is a variant case which is never constructed
  <-- line 45
    | @dead("opaqueVariant.A") A

  Warning Dead Type
  File "./Types.res", line 46, characters 2-5
  opaqueVariant.B is a variant case which is never constructed
  <-- line 46
    | @dead("opaqueVariant.B") B

  Warning Dead Value
  File "./Types.res", line 48, characters 7-14
  +stringT is never used
  <-- line 48
  export @dead("+stringT") stringT: String.t = "a"

  Warning Dead Value
  File "./Types.res", line 50, characters 7-16
  +jsStringT is never used
  <-- line 50
  export @dead("+jsStringT") jsStringT: Js.String.t = "a"

  Warning Dead Value
  File "./Types.res", line 52, characters 7-17
  +jsString2T is never used
  <-- line 52
  export @dead("+jsString2T") jsString2T: Js.String2.t = "a"

  Warning Dead Type
  File "./Types.res", line 68, characters 2-8
  record.i is a record label never used to read a value
  <-- line 68
    @dead("record.i") i: int,

  Warning Dead Type
  File "./Types.res", line 69, characters 2-11
  record.s is a record label never used to read a value
  <-- line 69
    @dead("record.s") s: string,

  Warning Dead Value
  File "./Types.res", line 89, characters 7-24
  +testMarshalFields is never used
  <-- line 89
  export @dead("+testMarshalFields") testMarshalFields: marshalFields = {

  Warning Dead Type
  File "./Types.res", line 108, characters 19-26
  someRecord.id is a record label never used to read a value
  <-- line 108
  type someRecord = {@dead("someRecord.id") id: int}

  Warning Dead Value
  File "./Types.res", line 125, characters 7-15
  +i64Const is never used
  <-- line 125
  export @dead("+i64Const") i64Const: i64B = 34L

  Warning Dead Module
  File "./Types.res", line 129, characters 7-75
  +Types.ObjectId is a dead module as all its items are dead.

  Warning Dead Value
  File "./Types.res", line 133, characters 2-11
  ObjectId.+x is never used
  <-- line 133
    @dead("ObjectId.+x") let x = 1

  Warning Dead Type
  File "./Unboxed.res", line 2, characters 17-23
  v1.A is a variant case which is never constructed
  <-- line 2
  export type v1 = | @dead("v1.A") A(int)

  Warning Dead Type
  File "./Unboxed.res", line 5, characters 17-23
  v2.A is a variant case which is never constructed
  <-- line 5
  export type v2 = | @dead("v2.A") A(int)

  Warning Dead Type
  File "./Unboxed.res", line 10, characters 18-24
  r1.x is a record label never used to read a value
  <-- line 10
  export type r1 = {@dead("r1.x") x: int}

  Warning Dead Type
  File "./Unboxed.res", line 13, characters 17-31
  r2.B is a variant case which is never constructed
  <-- line 13
  export type r2 = | @dead("r2.B") B({g: string})

  Warning Dead Value
  File "./Variants.res", line 40, characters 7-17
  +fortytwoOK is never used
  <-- line 40
  export @dead("+fortytwoOK") fortytwoOK: testGenTypeAs = #fortytwo

  Warning Dead Type
  File "./Variants.res", line 83, characters 20-46
  type_.Type is a variant case which is never constructed
  <-- line 83
  export type type_ = | @dead("type_.Type") @genType.as("type") Type

  Warning Dead Type
  File "./Variants.res", line 94, characters 2-10
  result1.Ok is a variant case which is never constructed
  <-- line 94
    | @dead("result1.Ok") Ok('a)

  Warning Dead Type
  File "./Variants.res", line 95, characters 2-13
  result1.Error is a variant case which is never constructed
  <-- line 95
    | @dead("result1.Error") Error('b)

  Warning Dead Type
  File "./VariantsWithPayload.res", line 47, characters 2-5
  simpleVariant.A is a variant case which is never constructed
  <-- line 47
    | @dead("simpleVariant.A") A

  Warning Dead Type
  File "./VariantsWithPayload.res", line 48, characters 2-5
  simpleVariant.B is a variant case which is never constructed
  <-- line 48
    | @dead("simpleVariant.B") B

  Warning Dead Type
  File "./VariantsWithPayload.res", line 49, characters 2-5
  simpleVariant.C is a variant case which is never constructed
  <-- line 49
    | @dead("simpleVariant.C") C

  Warning Dead Type
  File "./VariantsWithPayload.res", line 54, characters 2-29
  variantWithPayloads.A is a variant case which is never constructed
  <-- line 54
    | @dead("variantWithPayloads.A") @genType.as("ARenamed") A

  Warning Dead Type
  File "./VariantsWithPayload.res", line 55, characters 2-10
  variantWithPayloads.B is a variant case which is never constructed
  <-- line 55
    | @dead("variantWithPayloads.B") B(int)

  Warning Dead Type
  File "./VariantsWithPayload.res", line 56, characters 2-15
  variantWithPayloads.C is a variant case which is never constructed
  <-- line 56
    | @dead("variantWithPayloads.C") C(int, int)

  Warning Dead Type
  File "./VariantsWithPayload.res", line 57, characters 2-17
  variantWithPayloads.D is a variant case which is never constructed
  <-- line 57
    | @dead("variantWithPayloads.D") D((int, int))

  Warning Dead Type
  File "./VariantsWithPayload.res", line 58, characters 2-23
  variantWithPayloads.E is a variant case which is never constructed
  <-- line 58
    | @dead("variantWithPayloads.E") E(int, string, int)

  Warning Dead Type
  File "./VariantsWithPayload.res", line 83, characters 26-32
  variant1Int.R is a variant case which is never constructed
  <-- line 83
  export type variant1Int = | @dead("variant1Int.R") R(int)

  Warning Dead Type
  File "./VariantsWithPayload.res", line 87, characters 29-39
  variant1Object.R is a variant case which is never constructed
  <-- line 87
  export type variant1Object = | @dead("variant1Object.R") R(payload)

  Warning Dead Type
  File "./trace.ml", line 3, characters 11-28
  pf.pf is a record label never used to read a value
  <-- line 3
  type pf = {pf: 'a. 'a printf [@dead "pf.pf"] }
  
<<<<<<< HEAD
  Analysis reported 343 issues (Warning Dead Exception:1, Warning Dead Module:26, Warning Dead Type:89, Warning Dead Value:209, Warning Dead Value With Side Effects:2, Warning Redundant Optional Argument:5, Warning Unused Argument:11)
=======
  Analysis reported 355 issues (Warning Dead Exception:1, Warning Dead Module:26, Warning Dead Type:89, Warning Dead Value:222, Warning Dead Value With Side Effects:1, Warning Redundant Optional Argument:5, Warning Unused Argument:11)
>>>>>>> Check differences in DCE analysis after conversion.
